"!"			{yylval->s=strdup(yytext);return TOK_33;}
"!="			{yylval->s=strdup(yytext);return TOK_3361;}
"%"			{yylval->s=strdup(yytext);return TOK_37;}
"%="			{yylval->s=strdup(yytext);return TOK_3761;}
"&"			{yylval->s=strdup(yytext);return TOK_38;}
"&&"			{yylval->s=strdup(yytext);return TOK_3838;}
"&="			{yylval->s=strdup(yytext);return TOK_3861;}
"("			{yylval->s=strdup(yytext);return TOK_40;}
")"			{yylval->s=strdup(yytext);return TOK_41;}
"*"			{yylval->s=strdup(yytext);return TOK_42;}
"*="			{yylval->s=strdup(yytext);return TOK_4261;}
"+"			{yylval->s=strdup(yytext);return TOK_43;}
"++"			{yylval->s=strdup(yytext);return TOK_4343;}
"+="			{yylval->s=strdup(yytext);return TOK_4361;}
","			{yylval->s=strdup(yytext);return TOK_44;}
"-"			{yylval->s=strdup(yytext);return TOK_45;}
"--"			{yylval->s=strdup(yytext);return TOK_4545;}
"-="			{yylval->s=strdup(yytext);return TOK_4561;}
"->"			{yylval->s=strdup(yytext);return TOK_4562;}
"."			{yylval->s=strdup(yytext);return TOK_46;}
"..."			{yylval->s=strdup(yytext);return TOK_464646;}
"/"			{yylval->s=strdup(yytext);return TOK_47;}
"/="			{yylval->s=strdup(yytext);return TOK_4761;}
":"			{yylval->s=strdup(yytext);return TOK_58;}
"::"			{yylval->s=strdup(yytext);return TOK_5858;}
";"			{yylval->s=strdup(yytext);return TOK_59;}
"<"			{yylval->s=strdup(yytext);return TOK_60;}
"<<"			{yylval->s=strdup(yytext);return TOK_6060;}
"<<="			{yylval->s=strdup(yytext);return TOK_606061;}
"<="			{yylval->s=strdup(yytext);return TOK_6061;}
"="			{yylval->s=strdup(yytext);return TOK_61;}
"=="			{yylval->s=strdup(yytext);return TOK_6161;}
">"			{yylval->s=strdup(yytext);return TOK_62;}
">="			{yylval->s=strdup(yytext);return TOK_6261;}
">>"			{yylval->s=strdup(yytext);return TOK_6262;}
">>="			{yylval->s=strdup(yytext);return TOK_626261;}
">>>"			{yylval->s=strdup(yytext);return TOK_626262;}
">>>="			{yylval->s=strdup(yytext);return TOK_62626261;}
"?"			{yylval->s=strdup(yytext);return TOK_63;}
"@"			{yylval->s=strdup(yytext);return TOK_64;}
"["			{yylval->s=strdup(yytext);return TOK_91;}
"]"			{yylval->s=strdup(yytext);return TOK_93;}
"^"			{yylval->s=strdup(yytext);return TOK_94;}
"^="			{yylval->s=strdup(yytext);return TOK_9461;}
"abstract"			{yylval->s=strdup(yytext);return TOK_abstract;}
"assert"			{yylval->s=strdup(yytext);return TOK_assert;}
"boolean"			{yylval->s=strdup(yytext);return TOK_boolean;}
"break"			{yylval->s=strdup(yytext);return TOK_break;}
"byte"			{yylval->s=strdup(yytext);return TOK_byte;}
"case"			{yylval->s=strdup(yytext);return TOK_case;}
"catch"			{yylval->s=strdup(yytext);return TOK_catch;}
"char"			{yylval->s=strdup(yytext);return TOK_char;}
"class"			{yylval->s=strdup(yytext);return TOK_class;}
"continue"			{yylval->s=strdup(yytext);return TOK_continue;}
"default"			{yylval->s=strdup(yytext);return TOK_default;}
"do"			{yylval->s=strdup(yytext);return TOK_do;}
"double"			{yylval->s=strdup(yytext);return TOK_double;}
"else"			{yylval->s=strdup(yytext);return TOK_else;}
"enum"			{yylval->s=strdup(yytext);return TOK_enum;}
"exports"			{yylval->s=strdup(yytext);return TOK_exports;}
"extends"			{yylval->s=strdup(yytext);return TOK_extends;}
"final"			{yylval->s=strdup(yytext);return TOK_final;}
"finally"			{yylval->s=strdup(yytext);return TOK_finally;}
"float"			{yylval->s=strdup(yytext);return TOK_float;}
"for"			{yylval->s=strdup(yytext);return TOK_for;}
"if"			{yylval->s=strdup(yytext);return TOK_if;}
"implements"			{yylval->s=strdup(yytext);return TOK_implements;}
"import"			{yylval->s=strdup(yytext);return TOK_import;}
"instanceof"			{yylval->s=strdup(yytext);return TOK_instanceof;}
"int"			{yylval->s=strdup(yytext);return TOK_int;}
"interface"			{yylval->s=strdup(yytext);return TOK_interface;}
"long"			{yylval->s=strdup(yytext);return TOK_long;}
"module"			{yylval->s=strdup(yytext);return TOK_module;}
"native"			{yylval->s=strdup(yytext);return TOK_native;}
"new"			{yylval->s=strdup(yytext);return TOK_new;}
"open"			{yylval->s=strdup(yytext);return TOK_open;}
"opens"			{yylval->s=strdup(yytext);return TOK_opens;}
"package"			{yylval->s=strdup(yytext);return TOK_package;}
"permits"			{yylval->s=strdup(yytext);return TOK_permits;}
"private"			{yylval->s=strdup(yytext);return TOK_private;}
"protected"			{yylval->s=strdup(yytext);return TOK_protected;}
"provides"			{yylval->s=strdup(yytext);return TOK_provides;}
"public"			{yylval->s=strdup(yytext);return TOK_public;}
"record"			{yylval->s=strdup(yytext);return TOK_record;}
"requires"			{yylval->s=strdup(yytext);return TOK_requires;}
"return"			{yylval->s=strdup(yytext);return TOK_return;}
"sealed"			{yylval->s=strdup(yytext);return TOK_sealed;}
"short"			{yylval->s=strdup(yytext);return TOK_short;}
"static"			{yylval->s=strdup(yytext);return TOK_static;}
"strictfp"			{yylval->s=strdup(yytext);return TOK_strictfp;}
"super"			{yylval->s=strdup(yytext);return TOK_super;}
"switch"			{yylval->s=strdup(yytext);return TOK_switch;}
"synchronized"			{yylval->s=strdup(yytext);return TOK_synchronized;}
"this"			{yylval->s=strdup(yytext);return TOK_this;}
"throw"			{yylval->s=strdup(yytext);return TOK_throw;}
"throws"			{yylval->s=strdup(yytext);return TOK_throws;}
"to"			{yylval->s=strdup(yytext);return TOK_to;}
"transient"			{yylval->s=strdup(yytext);return TOK_transient;}
"transitive"			{yylval->s=strdup(yytext);return TOK_transitive;}
"try"			{yylval->s=strdup(yytext);return TOK_try;}
"uses"			{yylval->s=strdup(yytext);return TOK_uses;}
"var"			{yylval->s=strdup(yytext);return TOK_var;}
"void"			{yylval->s=strdup(yytext);return TOK_void;}
"volatile"			{yylval->s=strdup(yytext);return TOK_volatile;}
"while"			{yylval->s=strdup(yytext);return TOK_while;}
"with"			{yylval->s=strdup(yytext);return TOK_with;}
"yield"			{yylval->s=strdup(yytext);return TOK_yield;}
"{"			{yylval->s=strdup(yytext);return TOK_123;}
"|"			{yylval->s=strdup(yytext);return TOK_124;}
"|="			{yylval->s=strdup(yytext);return TOK_12461;}
"||"			{yylval->s=strdup(yytext);return TOK_124124;}
"}"			{yylval->s=strdup(yytext);return TOK_125;}
"~"			{yylval->s=strdup(yytext);return TOK_126;}
