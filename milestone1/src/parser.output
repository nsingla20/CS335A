Nonterminals useless in grammar

    type
    constant_expression


Rules useless in grammar

  621 type: primitive_type
  622     | reference_type

  623 constant_expression: expression


Rules useless in parser due to conflicts

   78 package_or_type_name: TOK_IDENTIFIER
   79                     | package_or_type_name "." TOK_IDENTIFIER

   80 ambiguous_name: TOK_IDENTIFIER
   81               | ambiguous_name "." TOK_IDENTIFIER

  185 unann_interface_type: unann_class_type

  186 unann_type_variable: type_IDENTIFIER


State 0 conflicts: 3 reduce/reduce
State 10 conflicts: 1 shift/reduce, 16 reduce/reduce
State 37 conflicts: 1 reduce/reduce
State 67 conflicts: 10 shift/reduce
State 80 conflicts: 5 reduce/reduce
State 82 conflicts: 9 shift/reduce
State 83 conflicts: 9 shift/reduce
State 84 conflicts: 9 shift/reduce
State 85 conflicts: 9 shift/reduce
State 86 conflicts: 9 shift/reduce
State 87 conflicts: 9 shift/reduce
State 95 conflicts: 1 shift/reduce, 2 reduce/reduce
State 101 conflicts: 10 shift/reduce
State 102 conflicts: 9 shift/reduce
State 110 conflicts: 1 shift/reduce, 6 reduce/reduce
State 113 conflicts: 1 shift/reduce
State 115 conflicts: 1 shift/reduce
State 137 conflicts: 2 shift/reduce
State 138 conflicts: 1 shift/reduce
State 139 conflicts: 1 shift/reduce
State 140 conflicts: 1 shift/reduce
State 141 conflicts: 1 shift/reduce
State 142 conflicts: 2 shift/reduce
State 143 conflicts: 5 shift/reduce
State 145 conflicts: 3 shift/reduce
State 146 conflicts: 2 shift/reduce
State 147 conflicts: 3 shift/reduce
State 157 conflicts: 1 reduce/reduce
State 165 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 173 conflicts: 10 shift/reduce
State 174 conflicts: 5 reduce/reduce
State 176 conflicts: 6 reduce/reduce
State 177 conflicts: 9 shift/reduce, 10 reduce/reduce
State 196 conflicts: 1 shift/reduce
State 199 conflicts: 31 reduce/reduce
State 203 conflicts: 1 shift/reduce
State 205 conflicts: 9 shift/reduce
State 220 conflicts: 1 shift/reduce
State 225 conflicts: 9 shift/reduce
State 226 conflicts: 9 shift/reduce
State 232 conflicts: 1 shift/reduce, 32 reduce/reduce
State 234 conflicts: 1 shift/reduce
State 236 conflicts: 9 shift/reduce
State 237 conflicts: 9 shift/reduce
State 238 conflicts: 9 shift/reduce
State 239 conflicts: 9 shift/reduce
State 240 conflicts: 9 shift/reduce
State 241 conflicts: 9 shift/reduce
State 242 conflicts: 9 shift/reduce
State 243 conflicts: 9 shift/reduce
State 244 conflicts: 9 shift/reduce
State 245 conflicts: 9 shift/reduce
State 246 conflicts: 9 shift/reduce
State 247 conflicts: 9 shift/reduce
State 248 conflicts: 9 shift/reduce
State 249 conflicts: 1 shift/reduce, 10 reduce/reduce
State 250 conflicts: 9 shift/reduce
State 251 conflicts: 9 shift/reduce
State 252 conflicts: 9 shift/reduce
State 253 conflicts: 9 shift/reduce
State 254 conflicts: 9 shift/reduce
State 255 conflicts: 9 shift/reduce
State 256 conflicts: 9 shift/reduce
State 257 conflicts: 9 shift/reduce
State 272 conflicts: 1 shift/reduce
State 281 conflicts: 1 shift/reduce
State 287 conflicts: 6 reduce/reduce
State 293 conflicts: 9 shift/reduce
State 296 conflicts: 9 shift/reduce
State 309 conflicts: 9 shift/reduce
State 315 conflicts: 1 shift/reduce
State 332 conflicts: 1 shift/reduce
State 355 conflicts: 1 reduce/reduce
State 364 conflicts: 1 shift/reduce
State 365 conflicts: 1 shift/reduce
State 366 conflicts: 1 shift/reduce
State 367 conflicts: 1 shift/reduce
State 368 conflicts: 2 shift/reduce
State 369 conflicts: 5 shift/reduce
State 370 conflicts: 5 shift/reduce
State 371 conflicts: 3 shift/reduce
State 372 conflicts: 3 shift/reduce
State 373 conflicts: 3 shift/reduce
State 374 conflicts: 3 shift/reduce
State 380 conflicts: 2 shift/reduce
State 381 conflicts: 2 shift/reduce
State 382 conflicts: 2 shift/reduce
State 383 conflicts: 3 shift/reduce
State 384 conflicts: 3 shift/reduce
State 390 conflicts: 5 shift/reduce
State 396 conflicts: 1 reduce/reduce
State 414 conflicts: 1 reduce/reduce
State 418 conflicts: 5 reduce/reduce
State 422 conflicts: 1 reduce/reduce
State 424 conflicts: 1 reduce/reduce
State 425 conflicts: 6 reduce/reduce
State 427 conflicts: 1 reduce/reduce
State 435 conflicts: 1 shift/reduce
State 436 conflicts: 9 shift/reduce
State 438 conflicts: 9 shift/reduce, 12 reduce/reduce
State 446 conflicts: 1 shift/reduce
State 449 conflicts: 9 shift/reduce
State 451 conflicts: 9 shift/reduce
State 454 conflicts: 2 reduce/reduce
State 458 conflicts: 9 shift/reduce
State 462 conflicts: 10 shift/reduce
State 467 conflicts: 1 shift/reduce
State 469 conflicts: 1 shift/reduce
State 470 conflicts: 1 shift/reduce
State 484 conflicts: 9 shift/reduce
State 503 conflicts: 1 shift/reduce
State 504 conflicts: 1 shift/reduce
State 510 conflicts: 1 shift/reduce
State 512 conflicts: 1 shift/reduce
State 528 conflicts: 1 shift/reduce
State 540 conflicts: 5 reduce/reduce
State 541 conflicts: 9 shift/reduce
State 543 conflicts: 9 shift/reduce
State 546 conflicts: 9 shift/reduce
State 549 conflicts: 9 shift/reduce
State 552 conflicts: 9 shift/reduce
State 555 conflicts: 9 shift/reduce
State 598 conflicts: 1 shift/reduce
State 599 conflicts: 1 shift/reduce
State 600 conflicts: 1 shift/reduce
State 613 conflicts: 9 shift/reduce
State 614 conflicts: 2 shift/reduce
State 617 conflicts: 1 reduce/reduce
State 623 conflicts: 9 shift/reduce
State 624 conflicts: 9 shift/reduce
State 625 conflicts: 9 shift/reduce
State 626 conflicts: 9 shift/reduce
State 632 conflicts: 1 shift/reduce
State 633 conflicts: 1 shift/reduce
State 658 conflicts: 1 shift/reduce
State 665 conflicts: 9 shift/reduce
State 671 conflicts: 9 shift/reduce, 10 reduce/reduce
State 672 conflicts: 9 shift/reduce
State 675 conflicts: 9 shift/reduce
State 676 conflicts: 9 shift/reduce
State 678 conflicts: 9 shift/reduce, 10 reduce/reduce
State 681 conflicts: 9 shift/reduce
State 684 conflicts: 9 shift/reduce, 12 reduce/reduce
State 690 conflicts: 1 shift/reduce
State 693 conflicts: 9 shift/reduce
State 700 conflicts: 9 shift/reduce
State 702 conflicts: 2 shift/reduce
State 712 conflicts: 1 shift/reduce
State 713 conflicts: 9 shift/reduce
State 727 conflicts: 1 shift/reduce
State 728 conflicts: 1 shift/reduce
State 731 conflicts: 9 shift/reduce
State 745 conflicts: 1 shift/reduce
State 762 conflicts: 9 shift/reduce
State 792 conflicts: 9 shift/reduce
State 804 conflicts: 9 shift/reduce
State 806 conflicts: 9 shift/reduce
State 822 conflicts: 1 shift/reduce
State 828 conflicts: 1 shift/reduce
State 833 conflicts: 3 reduce/reduce
State 835 conflicts: 1 reduce/reduce
State 836 conflicts: 1 shift/reduce
State 843 conflicts: 9 shift/reduce
State 844 conflicts: 9 shift/reduce
State 846 conflicts: 9 shift/reduce
State 847 conflicts: 9 shift/reduce
State 852 conflicts: 1 shift/reduce
State 859 conflicts: 9 shift/reduce
State 890 conflicts: 1 shift/reduce
State 893 conflicts: 15 shift/reduce, 12 reduce/reduce
State 898 conflicts: 9 shift/reduce
State 900 conflicts: 5 reduce/reduce
State 916 conflicts: 9 shift/reduce, 10 reduce/reduce
State 924 conflicts: 9 shift/reduce
State 926 conflicts: 9 shift/reduce, 12 reduce/reduce
State 936 conflicts: 10 reduce/reduce
State 938 conflicts: 10 reduce/reduce
State 940 conflicts: 1 reduce/reduce
State 947 conflicts: 9 shift/reduce, 12 reduce/reduce
State 951 conflicts: 9 shift/reduce
State 953 conflicts: 9 shift/reduce
State 954 conflicts: 9 shift/reduce
State 955 conflicts: 9 shift/reduce, 10 reduce/reduce
State 956 conflicts: 9 shift/reduce
State 957 conflicts: 9 shift/reduce
State 958 conflicts: 9 shift/reduce
State 962 conflicts: 1 reduce/reduce
State 968 conflicts: 10 shift/reduce
State 982 conflicts: 1 shift/reduce
State 1008 conflicts: 1 shift/reduce
State 1010 conflicts: 9 shift/reduce
State 1011 conflicts: 9 shift/reduce
State 1014 conflicts: 9 shift/reduce
State 1015 conflicts: 9 shift/reduce
State 1016 conflicts: 9 shift/reduce
State 1017 conflicts: 9 shift/reduce
State 1018 conflicts: 9 shift/reduce
State 1019 conflicts: 1 shift/reduce
State 1036 conflicts: 1 reduce/reduce
State 1042 conflicts: 9 shift/reduce
State 1045 conflicts: 9 shift/reduce
State 1046 conflicts: 9 shift/reduce
State 1047 conflicts: 9 shift/reduce
State 1048 conflicts: 9 shift/reduce
State 1059 conflicts: 9 shift/reduce


Grammar

    0 $accept: input $end

    1 input: compilation_unit

    2 modifier.multiopt: modifier.multiopt modifier
    3                  | ε

    4 modifier: annotation
    5         | "public"
    6         | "protected"
    7         | "private"
    8         | "abstract"
    9         | "static"
   10         | "final"
   11         | "sealed"
   12         | "strictfp"
   13         | "transitive"
   14         | "transient"
   15         | "volatile"

   16 dot_ind.multiopt: dot_ind.multiopt "." TOK_IDENTIFIER
   17                 | ε

   18 type_IDENTIFIER: TOK_IDENTIFIER

   19 unqualified_method_IDENTIFIER: TOK_IDENTIFIER

   20 primitive_type: annotation.multiopt numeric_type
   21               | annotation.multiopt "boolean"

   22 numeric_type: integral_type
   23             | floating_point_type

   24 integral_type: "byte"
   25              | "short"
   26              | "int"
   27              | "long"
   28              | "char"

   29 floating_point_type: "float"
   30                    | "double"

   31 reference_type: class_or_interface_type
   32               | type_variable
   33               | array_type

   34 class_or_interface_type: class_type
   35                        | interface_type

   36 class_type: annotation.multiopt type_IDENTIFIER type_arguments.opt
   37           | package_name "." annotation.multiopt type_IDENTIFIER type_arguments.opt
   38           | class_or_interface_type "." annotation.multiopt type_IDENTIFIER type_arguments.opt

   39 interface_type: class_type

   40 type_variable: annotation.multiopt type_IDENTIFIER

   41 array_type: primitive_type dims
   42           | class_or_interface_type dims
   43           | type_variable dims

   44 dims: annotation.multiopt "[" "]" an_sp.multiopt

   45 an_sp.multiopt: an_sp.multiopt annotation.multiopt "[" "]"
   46               | ε

   47 type_parameter: type_parameter_modifier.multiopt type_IDENTIFIER type_bound.opt

   48 type_parameter_modifier.multiopt: type_parameter_modifier
   49                                 | type_parameter_modifier.multiopt type_parameter_modifier
   50                                 | ε

   51 type_parameter_modifier: annotation

   52 type_bound.opt: type_bound
   53               | ε

   54 type_bound: "extends" type_variable
   55           | "extends" class_or_interface_type additional_bound.multiopt

   56 additional_bound: "&" interface_type

   57 type_arguments: "<" type_argument_list ">"

   58 type_argument_list: type_argument type_argument.multiopt

   59 type_argument.multiopt: "," type_argument
   60                       | type_argument.multiopt "," type_argument
   61                       | ε

   62 type_argument: reference_type
   63              | wildcard

   64 wildcard: annotation.multiopt "?" wildcard_bounds.opt

   65 wildcard_bounds.opt: wildcard_bounds
   66                    | ε

   67 wildcard_bounds: "extends" reference_type
   68                | "super" reference_type

   69 module_name: TOK_IDENTIFIER
   70            | module_name "." TOK_IDENTIFIER

   71 package_name: TOK_IDENTIFIER
   72             | package_name "." TOK_IDENTIFIER

   73 type_name: type_IDENTIFIER
   74          | package_or_type_name "." type_IDENTIFIER

   75 expression_name: TOK_IDENTIFIER
   76                | ambiguous_name "." TOK_IDENTIFIER

   77 method_name: unqualified_method_IDENTIFIER

   78 package_or_type_name: TOK_IDENTIFIER
   79                     | package_or_type_name "." TOK_IDENTIFIER

   80 ambiguous_name: TOK_IDENTIFIER
   81               | ambiguous_name "." TOK_IDENTIFIER

   82 compilation_unit: ordinary_compilation_unit
   83                 | modular_compilation_unit

   84 ordinary_compilation_unit: package_declaration.opt import_declaration.multiopt top_level_class_or_interface_declaration.multiopt

   85 modular_compilation_unit: import_declaration.multiopt module_declaration

   86 package_declaration.opt: package_declaration
   87                        | ε

   88 package_declaration: package_modifier.multiopt "package" TOK_IDENTIFIER dot_ind.multiopt ";"

   89 package_modifier.multiopt: package_modifier.multiopt package_modifier
   90                          | ε

   91 package_modifier: annotation

   92 import_declaration.multiopt: import_declaration.multiopt import_declaration
   93                            | ε

   94 import_declaration: single_type_import_declaration
   95                   | type_import_on_demand_declaration
   96                   | single_static_import_declaration
   97                   | static_import_on_demand_declaration

   98 single_type_import_declaration: "import" type_name ";"

   99 type_import_on_demand_declaration: "import" package_or_type_name "." "*" ";"

  100 single_static_import_declaration: "import" "static" type_name "." TOK_IDENTIFIER ";"

  101 static_import_on_demand_declaration: "import" "static" type_name "." "*" ";"

  102 top_level_class_or_interface_declaration.multiopt: top_level_class_or_interface_declaration
  103                                                  | top_level_class_or_interface_declaration.multiopt top_level_class_or_interface_declaration
  104                                                  | ε

  105 top_level_class_or_interface_declaration: class_declaration
  106                                         | interface_declaration
  107                                         | ";"

  108 module_declaration: annotation.multiopt open.opt "module" TOK_IDENTIFIER dot_ind.multiopt "{" module_directive.multiopt "}"

  109 open.opt: "open"
  110         | ε

  111 module_directive.multiopt: module_directive
  112                          | module_directive.multiopt module_directive
  113                          | ε

  114 module_directive: "requires" modifier.multiopt module_name ";"
  115                 | "exports" package_name to_module_names.opt ";"
  116                 | "opens" package_name to_module_names.opt ";"
  117                 | "uses" type_name ";"
  118                 | "provides" type_name "with" type_name com_type_name.multiopt ";"

  119 com_type_name.multiopt: com_type_name.multiopt "," type_name
  120                       | ε

  121 to_module_names.opt: "to" module_name com_module_name.multiopt
  122                    | to_module_names.opt "to" module_name com_module_name.multiopt
  123                    | ε

  124 com_module_name.multiopt: com_module_name.multiopt "," module_name
  125                         | ε

  126 class_declaration: normal_class_declaration
  127                  | enum_declaration
  128                  | record_declaration

  129 normal_class_declaration: modifier.multiopt "class" type_IDENTIFIER type_parameters.opt class_extends.opt class_implements.opt class_permits.opt class_body

  130 type_parameters.opt: type_parameters
  131                    | ε

  132 class_extends.opt: class_extends
  133                  | ε

  134 class_implements.opt: class_implements
  135                     | ε

  136 class_permits.opt: class_permits
  137                  | ε

  138 type_parameters: "<" type_parameter_list ">"

  139 type_parameter_list: type_parameter com_type_parameter.multiopt

  140 com_type_parameter.multiopt: com_type_parameter.multiopt "," type_parameter
  141                            | ε

  142 class_extends: "extends" class_type

  143 class_implements: "implements" interface_type_list

  144 interface_type_list: interface_type com_interface_type.multiopt

  145 com_interface_type.multiopt: com_interface_type.multiopt "," interface_type
  146                            | ε

  147 class_permits: "permits" type_name com_type_name.multiopt

  148 class_body: "{" class_body_declaration.multiopt "}"

  149 class_body_declaration.multiopt: class_body_declaration.multiopt class_body_declaration
  150                                | ε

  151 class_body_declaration: class_member_declaration
  152                       | instance_initializer
  153                       | static_initializer
  154                       | constructor_declaration

  155 class_member_declaration: field_declaration
  156                         | method_declaration
  157                         | class_declaration
  158                         | interface_declaration

  159 field_declaration: modifier.multiopt unann_type variable_declarator_list ";"

  160 variable_declarator_list: variable_declarator com_variable_declarator.multiopt

  161 com_variable_declarator.multiopt: com_variable_declarator.multiopt "," variable_declarator
  162                                 | ε

  163 variable_declarator: variable_declarator_id eq_variable_initializer.opt

  164 eq_variable_initializer.opt: "=" variable_initializer
  165                            | ε

  166 variable_declarator_id: TOK_IDENTIFIER dims.opt

  167 dims.opt: dims
  168         | ε

  169 variable_initializer: expression
  170                     | array_initializer

  171 unann_type: unann_primitive_type
  172           | unann_reference_type

  173 unann_primitive_type: numeric_type
  174                     | "boolean"

  175 unann_reference_type: unann_class_or_interface_type
  176                     | unann_type_variable
  177                     | unann_array_type

  178 unann_class_or_interface_type: unann_class_type
  179                              | unann_interface_type

  180 unann_class_type: type_IDENTIFIER type_arguments.opt
  181                 | package_name "." annotation.multiopt type_IDENTIFIER type_arguments.opt
  182                 | unann_class_or_interface_type "." annotation.multiopt type_IDENTIFIER type_arguments.opt

  183 type_arguments.opt: type_arguments
  184                   | ε

  185 unann_interface_type: unann_class_type

  186 unann_type_variable: type_IDENTIFIER

  187 unann_array_type: unann_primitive_type dims
  188                 | unann_class_or_interface_type dims
  189                 | unann_type_variable dims

  190 method_declaration: modifier.multiopt method_header method_body

  191 method_header: result method_declarator throws.opt
  192              | type_parameters annotation.multiopt result method_declarator throws.opt

  193 throws.opt: throws
  194           | ε

  195 result: unann_type
  196       | "void"

  197 method_declarator: TOK_IDENTIFIER "(" receiver_parameter_com.opt formal_parameter_list.opt ")" dims.opt

  198 receiver_parameter_com.opt: receiver_parameter ","
  199                           | ε

  200 formal_parameter_list.opt: formal_parameter_list
  201                          | ε

  202 receiver_parameter: annotation.multiopt unann_type IDENTIFIER_dot.opt "this"

  203 IDENTIFIER_dot.opt: TOK_IDENTIFIER "."
  204                   | ε

  205 formal_parameter_list: formal_parameter com_formal_parameter.multiopt

  206 com_formal_parameter.multiopt: com_formal_parameter.multiopt "," formal_parameter
  207                              | ε

  208 formal_parameter: variable_modifier.multiopt unann_type variable_declarator_id
  209                 | variable_arity_parameter

  210 variable_modifier.multiopt: variable_modifier.multiopt variable_modifier
  211                           | ε

  212 variable_arity_parameter: variable_modifier.multiopt unann_type annotation.multiopt "..." TOK_IDENTIFIER

  213 variable_modifier: annotation
  214                  | "final"

  215 throws: "throws" exception_type_list

  216 exception_type_list: exception_type com_exception_type.multiopt

  217 com_exception_type.multiopt: com_exception_type.multiopt "," exception_type
  218                            | ε

  219 exception_type: class_type
  220               | type_variable

  221 method_body: block
  222            | ";"

  223 instance_initializer: block

  224 static_initializer: "static" block

  225 constructor_declaration: modifier.multiopt constructor_declarator throws.opt constructor_body

  226 constructor_declarator: type_parameters.opt simple_type_name "(" receiver_parameter_com.opt formal_parameter_list.opt ")"

  227 simple_type_name: type_IDENTIFIER

  228 constructor_body: "{" explicit_constructor_invocation.opt block_statements.opt "}"

  229 explicit_constructor_invocation.opt: explicit_constructor_invocation
  230                                    | ε

  231 block_statements.opt: block_statements
  232                     | ε

  233 explicit_constructor_invocation: type_arguments.opt "this" "(" argument_list.opt ")" ";"
  234                                | type_arguments.opt "super" "(" argument_list.opt ")" ";"
  235                                | expression_name "." type_arguments.opt "super" "(" argument_list.opt ")" ";"
  236                                | primary "." type_arguments.opt "super" "(" argument_list.opt ")" ";"

  237 argument_list.opt: argument_list
  238                  | ε

  239 enum_declaration: modifier.multiopt "enum" type_IDENTIFIER class_implements.opt enum_body

  240 enum_body: "{" enum_constant_list.opt com.opt enum_body_declarations.opt "}"

  241 com.opt: ","
  242        | ε

  243 enum_body_declarations.opt: enum_body_declarations
  244                           | ε

  245 enum_constant_list.opt: enum_constant_list
  246                       | ε

  247 enum_constant_list: enum_constant com_enum_constant.multiopt

  248 com_enum_constant.multiopt: com_enum_constant.multiopt "," enum_constant
  249                           | ε

  250 enum_constant: enum_modifier.multiopt TOK_IDENTIFIER "[" "(" argument_list.opt ")" "]" class_body.opt

  251 enum_modifier.multiopt: enum_modifier.multiopt enum_modifier
  252                       | ε

  253 class_body.opt: class_body
  254               | ε

  255 enum_modifier: annotation

  256 enum_body_declarations: ";" class_body_declaration.multiopt

  257 record_declaration: modifier.multiopt "record" type_IDENTIFIER type_parameters.opt record_header class_implements.opt record_body

  258 record_header: "(" record_component_list.opt ")"

  259 record_component_list.opt: record_component_list
  260                          | ε

  261 record_component_list: record_component com_record_component.multiopt

  262 com_record_component.multiopt: com_record_component.multiopt "," record_component
  263                              | ε

  264 record_component: record_component_modifier.multiopt unann_type TOK_IDENTIFIER
  265                 | variable_arity_record_component

  266 record_component_modifier.multiopt: record_component_modifier.multiopt record_component_modifier
  267                                   | ε

  268 variable_arity_record_component: record_component_modifier.multiopt unann_type annotation.multiopt "..." TOK_IDENTIFIER

  269 record_component_modifier: annotation

  270 record_body: "{" record_body_declaration.multiopt "}"

  271 record_body_declaration.multiopt: record_body_declaration.multiopt record_body_declaration
  272                                 | ε

  273 record_body_declaration: class_body_declaration
  274                        | compact_constructor_declaration

  275 compact_constructor_declaration: modifier.multiopt simple_type_name constructor_body

  276 interface_declaration: normal_interface_declaration
  277                      | annotation_interface_declaration

  278 normal_interface_declaration: modifier.multiopt "interface" type_IDENTIFIER type_parameters.opt interface_extends.opt interface_permits.opt interface_body

  279 interface_extends.opt: interface_extends
  280                      | ε

  281 interface_permits.opt: interface_permits
  282                      | ε

  283 interface_extends: "extends" interface_type_list

  284 interface_permits: "permits" type_name com_type_name.multiopt

  285 interface_body: "{" interface_member_declaration.multiopt "}"

  286 interface_member_declaration.multiopt: interface_member_declaration.multiopt interface_member_declaration
  287                                      | ε

  288 interface_member_declaration: constant_declaration
  289                             | interface_method_declaration
  290                             | class_declaration
  291                             | interface_declaration
  292                             | ";"

  293 constant_declaration: modifier.multiopt unann_type variable_declarator_list ";"

  294 interface_method_declaration: modifier.multiopt method_header method_body

  295 annotation_interface_declaration: modifier.multiopt "@" "interface" type_IDENTIFIER annotation_interface_body

  296 annotation_interface_body: "{" annotation_interface_member_declaration.multiopt "}"

  297 annotation_interface_member_declaration.multiopt: annotation_interface_member_declaration.multiopt annotation_interface_member_declaration
  298                                                 | ε

  299 annotation_interface_member_declaration: annotation_interface_element_declaration
  300                                        | constant_declaration
  301                                        | class_declaration
  302                                        | interface_declaration
  303                                        | ";"

  304 annotation_interface_element_declaration: modifier.multiopt unann_type TOK_IDENTIFIER "(" ")" dims.opt default_value.opt ";"

  305 default_value.opt: default_value
  306                  | ε

  307 default_value: "default" element_value

  308 annotation: normal_annotation
  309           | marker_annotation
  310           | single_element_annotation

  311 normal_annotation: "@" type_name "(" element_value_pair_list.opt ")"

  312 element_value_pair_list.opt: element_value_pair_list
  313                            | ε

  314 element_value_pair_list: element_value_pair com_element_value_pair.multiopt

  315 com_element_value_pair.multiopt: com_element_value_pair.multiopt "," element_value_pair
  316                                | ε

  317 element_value_pair: TOK_IDENTIFIER "=" element_value

  318 element_value: conditional_expression
  319              | element_value_array_initializer
  320              | annotation

  321 element_value_array_initializer: "{" element_valueList.opt com.opt "}"

  322 element_valueList.opt: element_valueList
  323                      | ε

  324 element_valueList: element_value com_element_value.multiopt

  325 com_element_value.multiopt: com_element_value.multiopt "," element_value
  326                           | ε

  327 marker_annotation: "@" type_name

  328 single_element_annotation: "@" type_name "(" element_value ")"

  329 annotation.multiopt: annotation.multiopt annotation
  330                    | ε

  331 array_initializer: "{" variable_initializer_list.opt com.opt "}"

  332 variable_initializer_list.opt: variable_initializer_list
  333                              | ε

  334 variable_initializer_list: variable_initializer com_variable_initializer.multiopt

  335 com_variable_initializer.multiopt: com_variable_initializer.multiopt "," variable_initializer
  336                                  | ε

  337 block: "{" block_statements.opt "}"

  338 block_statements: block_statement block_statement.multiopt

  339 block_statement.multiopt: block_statement.multiopt block_statement
  340                         | ε

  341 block_statement: local_class_or_interface_declaration
  342                | local_variable_declaration_statement
  343                | statement

  344 local_class_or_interface_declaration: class_declaration
  345                                     | normal_interface_declaration

  346 local_variable_declaration_statement: local_variable_declaration ";"

  347 local_variable_declaration: variable_modifier.multiopt local_variable_type variable_declarator_list

  348 local_variable_type: unann_type
  349                    | "var"

  350 statement: statement_without_trailing_substatement
  351          | labeled_statement
  352          | if_then_statement
  353          | if_then_else_statement
  354          | while_statement
  355          | for_statement

  356 statement_no_short_if: statement_without_trailing_substatement
  357                      | labeled_statement_no_short_if
  358                      | if_then_else_statement_no_short_if
  359                      | while_statement_no_short_if
  360                      | for_statement_no_short_if

  361 statement_without_trailing_substatement: block
  362                                        | empty_statement
  363                                        | expression_statement
  364                                        | assert_statement
  365                                        | switch_statement
  366                                        | do_statement
  367                                        | break_statement
  368                                        | continue_statement
  369                                        | return_statement
  370                                        | synchronized_statement
  371                                        | throw_statement
  372                                        | try_statement
  373                                        | yield_statement

  374 empty_statement: ";"

  375 labeled_statement: TOK_IDENTIFIER ":" statement

  376 labeled_statement_no_short_if: TOK_IDENTIFIER ":" statement_no_short_if

  377 expression_statement: statement_expression ";"

  378 statement_expression: assignment
  379                     | pre_increment_expression
  380                     | pre_decrement_expression
  381                     | post_increment_expression
  382                     | post_decrement_expression
  383                     | method_invocation
  384                     | class_instance_creation_expression

  385 if_then_statement: "if" "(" expression ")" statement

  386 if_then_else_statement: "if" "(" expression ")" statement_no_short_if "else" statement

  387 if_then_else_statement_no_short_if: "if" "(" expression ")" statement_no_short_if "else" statement_no_short_if

  388 assert_statement: "assert" expression ";"
  389                 | "assert" expression ":" expression ";"

  390 switch_statement: "switch" "(" expression ")" switch_block

  391 switch_block: "{" switch_rule switch_rule.multiopt ";"
  392             | "{" switch_block_statement_group.multiopt switch_label_col.multiopt "}"

  393 switch_rule.multiopt: switch_rule.multiopt switch_rule
  394                     | ε

  395 switch_block_statement_group.multiopt: switch_block_statement_group.multiopt switch_block_statement_group
  396                                      | ε

  397 switch_label_col.multiopt: switch_label_col.multiopt switch_label ":"
  398                          | ε

  399 switch_rule: switch_label "->" expression ";"
  400            | switch_label "->" block
  401            | switch_label "->" throw_statement

  402 switch_block_statement_group: switch_label ":" switch_label_col.multiopt block_statements

  403 switch_label: "case" case_constant com_case_constant.multiopt
  404             | "default"

  405 com_case_constant.multiopt: com_case_constant.multiopt "," case_constant
  406                           | ε

  407 case_constant: conditional_expression

  408 while_statement: "while" "(" expression ")" statement

  409 while_statement_no_short_if: "while" "(" expression ")" statement_no_short_if

  410 do_statement: "do" statement "while" "(" expression ")" ";"

  411 for_statement: basic_for_statement
  412              | enhanced_for_statement

  413 for_statement_no_short_if: basic_for_statement_no_short_if
  414                          | enhanced_for_statement_no_short_if

  415 basic_for_statement: "for" "(" for_init.opt ";" expression.opt ";" for_update.opt ")" statement

  416 for_init.opt: for_init
  417             | ε

  418 expression.opt: expression
  419               | ε

  420 for_update.opt: for_update
  421               | ε

  422 basic_for_statement_no_short_if: "for" "(" for_init.opt ";" expression.opt ";" for_update.opt ")" statement_no_short_if

  423 for_init: statement_expression_list
  424         | local_variable_declaration

  425 for_update: statement_expression_list

  426 statement_expression_list: statement_expression com_statement_expression.multiopt

  427 com_statement_expression.multiopt: com_statement_expression.multiopt "," statement_expression
  428                                  | ε

  429 enhanced_for_statement: "for" "(" local_variable_declaration ":" expression ")" statement

  430 enhanced_for_statement_no_short_if: "for" "(" local_variable_declaration ":" expression ")" statement_no_short_if

  431 break_statement: "break" IDENTIFIER.opt ";"

  432 IDENTIFIER.opt: TOK_IDENTIFIER
  433               | ε

  434 yield_statement: "yield" expression ";"

  435 continue_statement: "continue" IDENTIFIER.opt ";"

  436 return_statement: "return" expression.opt ";"

  437 throw_statement: "throw" expression ";"

  438 synchronized_statement: "synchronized" "(" expression ")" block

  439 try_statement: "try" block catches
  440              | "try" block catches.opt finally
  441              | try_with_resources_statement

  442 catches.opt: catches
  443            | ε

  444 catches: catch_clause catch_clause.multiopt

  445 catch_clause.multiopt: catch_clause.multiopt catch_clause
  446                      | ε

  447 catch_clause: "catch" "(" catch_formal_parameter ")" block

  448 catch_formal_parameter: variable_modifier.multiopt catch_type variable_declarator_id

  449 catch_type: unann_class_type vt_class_type.multiopt

  450 vt_class_type.multiopt: vt_class_type.multiopt "|" class_type
  451                       | ε

  452 finally: "finally" block

  453 try_with_resources_statement: "try" resource_specification block catches.opt finally.opt

  454 finally.opt: finally
  455            | ε

  456 resource_specification: "(" resource_list semcol.opt ")"

  457 semcol.opt: ";"
  458           | ε

  459 resource_list: resource semcol_resource.multiopt

  460 semcol_resource.multiopt: semcol_resource.multiopt ";" resource
  461                         | ε

  462 resource: local_variable_declaration
  463         | variable_access

  464 variable_access: expression_name
  465                | field_access

  466 pattern: type_pattern

  467 type_pattern: local_variable_declaration

  468 primary: primary_no_new_array
  469        | array_creation_expression

  470 primary_no_new_array: TOK_LITERAL
  471                     | class_literal
  472                     | "this"
  473                     | type_name "." "this"
  474                     | "(" expression ")"
  475                     | class_instance_creation_expression
  476                     | field_access
  477                     | array_access
  478                     | method_invocation
  479                     | method_reference

  480 class_literal: type_name dm.multiopt "." "class"
  481              | numeric_type dm.multiopt "." "class"
  482              | "boolean" dm.multiopt "." "class"
  483              | "void" "." "class"

  484 dm.multiopt: dm.multiopt "[" "]"
  485            | ε

  486 class_instance_creation_expression: unqualified_class_instance_creation_expression
  487                                   | expression_name "." unqualified_class_instance_creation_expression
  488                                   | primary "." unqualified_class_instance_creation_expression

  489 unqualified_class_instance_creation_expression: "new" type_arguments.opt class_or_interface_type_to_instantiate "(" argument_list.opt ")" class_body.opt

  490 class_or_interface_type_to_instantiate: annotation.multiopt TOK_IDENTIFIER dot_annotation.multiopt_IDENTIFIER.multiopt type_arguments_or_diamond.opt

  491 dot_annotation.multiopt_IDENTIFIER.multiopt: dot_annotation.multiopt_IDENTIFIER.multiopt "." annotation.multiopt TOK_IDENTIFIER
  492                                            | ε

  493 type_arguments_or_diamond.opt: type_arguments_or_diamond
  494                              | ε

  495 type_arguments_or_diamond: type_arguments

  496 field_access: primary "." TOK_IDENTIFIER
  497             | "super" "." TOK_IDENTIFIER
  498             | type_name "." "super" "." TOK_IDENTIFIER

  499 array_access: expression_name "[" expression "]"
  500             | primary_no_new_array "[" expression "]"

  501 method_invocation: method_name "(" argument_list.opt ")"
  502                  | type_name "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  503                  | expression_name "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  504                  | primary "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  505                  | "super" "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  506                  | type_name "." "super" "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"

  507 argument_list: expression com_expression.multiopt

  508 com_expression.multiopt: com_expression.multiopt "," expression
  509                        | ε

  510 method_reference: expression_name "::" type_arguments.opt TOK_IDENTIFIER
  511                 | primary "::" type_arguments.opt TOK_IDENTIFIER
  512                 | reference_type "::" type_arguments.opt TOK_IDENTIFIER
  513                 | "super" "::" type_arguments.opt TOK_IDENTIFIER
  514                 | type_name "." "super" "::" type_arguments.opt TOK_IDENTIFIER
  515                 | class_type "::" type_arguments.opt "new"
  516                 | array_type "::" "new"

  517 array_creation_expression: "new" primitive_type dim_exprs dims.opt
  518                          | "new" class_or_interface_type dim_exprs dims.opt
  519                          | "new" primitive_type dims array_initializer
  520                          | "new" class_or_interface_type dims array_initializer

  521 dim_exprs: dim_expr dim_expr.multiopt

  522 dim_expr.multiopt: dim_expr.multiopt dim_expr
  523                  | ε

  524 dim_expr: annotation.multiopt "[" expression "]"

  525 expression: lambda_expression
  526           | assignment_expression

  527 lambda_expression: lambda_parameters "->" lambda_body

  528 lambda_parameters: "(" lambda_parameter_list.opt ")"
  529                  | TOK_IDENTIFIER

  530 lambda_parameter_list.opt: lambda_parameter_list
  531                          | ε

  532 lambda_parameter_list: lambda_parameter com_lambda_parameter.multiopt
  533                      | TOK_IDENTIFIER com_IDENTIFIER.multiopt

  534 com_IDENTIFIER.multiopt: com_IDENTIFIER.multiopt "," TOK_IDENTIFIER
  535                        | ε

  536 com_lambda_parameter.multiopt: com_lambda_parameter.multiopt "," lambda_parameter
  537                              | ε

  538 lambda_parameter: variable_modifier.multiopt lambda_parameter_type variable_declarator_id
  539                 | variable_arity_parameter

  540 lambda_parameter_type: unann_type
  541                      | "var"

  542 lambda_body: expression
  543            | block

  544 assignment_expression: conditional_expression
  545                      | assignment

  546 assignment: left_hand_side assignment_operator expression

  547 left_hand_side: expression_name
  548               | field_access
  549               | array_access

  550 assignment_operator: "="
  551                    | "*="
  552                    | "/="
  553                    | "%="
  554                    | "+="
  555                    | "-="
  556                    | "<<="
  557                    | ">>="
  558                    | ">>>="
  559                    | "&="
  560                    | "^="
  561                    | "|="

  562 conditional_expression: conditional_or_expression
  563                       | conditional_or_expression "?" expression ":" conditional_expression
  564                       | conditional_or_expression "?" expression ":" lambda_expression

  565 conditional_or_expression: conditional_and_expression
  566                          | conditional_or_expression "||" conditional_and_expression

  567 conditional_and_expression: inclusive_or_expression
  568                           | conditional_and_expression "&&" inclusive_or_expression

  569 inclusive_or_expression: exclusive_or_expression
  570                        | inclusive_or_expression "|" exclusive_or_expression

  571 exclusive_or_expression: and_expression
  572                        | exclusive_or_expression "^" and_expression

  573 and_expression: equality_expression
  574               | and_expression "&" equality_expression

  575 equality_expression: relational_expression
  576                    | equality_expression "==" relational_expression
  577                    | equality_expression "!=" relational_expression

  578 relational_expression: shift_expression
  579                      | relational_expression "<" shift_expression
  580                      | relational_expression ">" shift_expression
  581                      | relational_expression "<=" shift_expression
  582                      | relational_expression ">=" shift_expression
  583                      | instanceof_expression

  584 instanceof_expression: relational_expression "instanceof" reference_type
  585                      | relational_expression "instanceof" pattern

  586 shift_expression: additive_expression
  587                 | shift_expression "<<" additive_expression
  588                 | shift_expression ">>" additive_expression
  589                 | shift_expression ">>>" additive_expression

  590 additive_expression: multiplicative_expression
  591                    | additive_expression "+" multiplicative_expression
  592                    | additive_expression "-" multiplicative_expression

  593 multiplicative_expression: unary_expression
  594                          | multiplicative_expression "*" unary_expression
  595                          | multiplicative_expression "/" unary_expression
  596                          | multiplicative_expression "%" unary_expression

  597 unary_expression: pre_increment_expression
  598                 | pre_decrement_expression
  599                 | "+" unary_expression
  600                 | "-" unary_expression
  601                 | unary_expression_not_plus_minus

  602 pre_increment_expression: "++" unary_expression

  603 pre_decrement_expression: "--" unary_expression

  604 unary_expression_not_plus_minus: postfix_expression
  605                                | "~" unary_expression
  606                                | "!" unary_expression
  607                                | cast_expression
  608                                | switch_expression

  609 postfix_expression: primary
  610                   | expression_name
  611                   | post_increment_expression
  612                   | post_decrement_expression

  613 post_increment_expression: postfix_expression "++"

  614 post_decrement_expression: postfix_expression "--"

  615 cast_expression: "(" primitive_type ")" unary_expression
  616                | "(" reference_type additional_bound.multiopt ")" unary_expression_not_plus_minus
  617                | "(" reference_type additional_bound.multiopt ")" lambda_expression

  618 additional_bound.multiopt: additional_bound.multiopt additional_bound
  619                          | ε

  620 switch_expression: "switch" "(" expression ")" switch_block


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOK_IDENTIFIER <s> (258) 16 18 19 69 70 71 72 75 76 78 79 80 81 88 100 108 166 197 203 212 250 264 268 304 317 375 376 432 490 491 496 497 498 502 503 504 505 506 510 511 512 513 514 529 533 534
    TOK_LITERAL <s> (259) 470
    "!" <s> (260) 606
    "!=" <s> (261) 577
    "%" <s> (262) 596
    "%=" <s> (263) 553
    "&" <s> (264) 56 574
    "&&" <s> (265) 568
    "&=" <s> (266) 559
    "(" <s> (267) 197 226 233 234 235 236 250 258 304 311 328 385 386 387 390 408 409 410 415 422 429 430 438 447 456 474 489 501 502 503 504 505 506 528 615 616 617 620
    ")" <s> (268) 197 226 233 234 235 236 250 258 304 311 328 385 386 387 390 408 409 410 415 422 429 430 438 447 456 474 489 501 502 503 504 505 506 528 615 616 617 620
    "*" <s> (269) 99 101 594
    "*=" <s> (270) 551
    "+" <s> (271) 591 599
    "++" <s> (272) 602 613
    "+=" <s> (273) 554
    "," <s> (274) 59 60 119 124 140 145 161 198 206 217 241 248 262 315 325 335 405 427 508 534 536
    "-" <s> (275) 592 600
    "--" <s> (276) 603 614
    "-=" <s> (277) 555
    "->" <s> (278) 399 400 401 527
    "." <s> (279) 16 37 38 70 72 74 76 79 81 99 100 101 181 182 203 235 236 473 480 481 482 483 487 488 491 496 497 498 502 503 504 505 506 514
    "..." <s> (280) 212 268
    "/" <s> (281) 595
    "/=" <s> (282) 552
    ":" <s> (283) 375 376 389 397 402 429 430 563 564
    "::" <s> (284) 510 511 512 513 514 515 516
    ";" <s> (285) 88 98 99 100 101 107 114 115 116 117 118 159 222 233 234 235 236 256 292 293 303 304 346 374 377 388 389 391 399 410 415 422 431 434 435 436 437 457 460
    "<" <s> (286) 57 138 579
    "<<" <s> (287) 587
    "<<=" <s> (288) 556
    "<=" <s> (289) 581
    "=" <s> (290) 164 317 550
    "==" <s> (291) 576
    ">" <s> (292) 57 138 580
    ">=" <s> (293) 582
    ">>" <s> (294) 588
    ">>=" <s> (295) 557
    ">>>" <s> (296) 589
    ">>>=" <s> (297) 558
    "?" <s> (298) 64 563 564
    "@" <s> (299) 295 311 327 328
    "[" <s> (300) 44 45 250 484 499 500 524
    "]" <s> (301) 44 45 250 484 499 500 524
    "^" <s> (302) 572
    "^=" <s> (303) 560
    "abstract" <s> (304) 8
    "assert" <s> (305) 388 389
    "boolean" <s> (306) 21 174 482
    "break" <s> (307) 431
    "byte" <s> (308) 24
    "case" <s> (309) 403
    "catch" <s> (310) 447
    "char" <s> (311) 28
    "class" <s> (312) 129 480 481 482 483
    "continue" <s> (313) 435
    "default" <s> (314) 307 404
    "do" <s> (315) 410
    "double" <s> (316) 30
    "else" <s> (317) 386 387
    "enum" <s> (318) 239
    "exports" <s> (319) 115
    "extends" <s> (320) 54 55 67 142 283
    "final" <s> (321) 10 214
    "finally" <s> (322) 452
    "float" <s> (323) 29
    "for" <s> (324) 415 422 429 430
    "if" <s> (325) 385 386 387
    "implements" <s> (326) 143
    "import" <s> (327) 98 99 100 101
    "instanceof" <s> (328) 584 585
    "int" <s> (329) 26
    "interface" <s> (330) 278 295
    "long" <s> (331) 27
    "module" <s> (332) 108
    "new" <s> (333) 489 515 516 517 518 519 520
    "open" <s> (334) 109
    "opens" <s> (335) 116
    "package" <s> (336) 88
    "permits" <s> (337) 147 284
    "private" <s> (338) 7
    "protected" <s> (339) 6
    "provides" <s> (340) 118
    "public" <s> (341) 5
    "record" <s> (342) 257
    "requires" <s> (343) 114
    "return" <s> (344) 436
    "sealed" <s> (345) 11
    "short" <s> (346) 25
    "static" <s> (347) 9 100 101 224
    "strictfp" <s> (348) 12
    "super" <s> (349) 68 234 235 236 497 498 505 506 513 514
    "switch" <s> (350) 390 620
    "synchronized" <s> (351) 438
    "this" <s> (352) 202 233 472 473
    "throw" <s> (353) 437
    "throws" <s> (354) 215
    "to" <s> (355) 121 122
    "transient" <s> (356) 14
    "transitive" <s> (357) 13
    "try" <s> (358) 439 440 453
    "uses" <s> (359) 117
    "var" <s> (360) 349 541
    "void" <s> (361) 196 483
    "volatile" <s> (362) 15
    "while" <s> (363) 408 409 410
    "with" <s> (364) 118
    "yield" <s> (365) 434
    "{" <s> (366) 108 148 228 240 270 285 296 321 331 337 391 392
    "|" <s> (367) 450 570
    "|=" <s> (368) 561
    "||" <s> (369) 566
    "}" <s> (370) 108 148 228 240 270 285 296 321 331 337 392
    "~" <s> (371) 605


Nonterminals, with rules where they appear

    $accept (117)
        on left: 0
    input <i> (118)
        on left: 1
        on right: 0
    modifier.multiopt <i> (119)
        on left: 2 3
        on right: 2 114 129 159 190 225 239 257 275 278 293 294 295 304
    modifier <i> (120)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 2
    dot_ind.multiopt <i> (121)
        on left: 16 17
        on right: 16 88 108
    type_IDENTIFIER <i> (122)
        on left: 18
        on right: 36 37 38 40 47 73 74 129 180 181 182 186 227 239 257 278 295
    unqualified_method_IDENTIFIER <i> (123)
        on left: 19
        on right: 77
    primitive_type <i> (124)
        on left: 20 21
        on right: 41 517 519 615
    numeric_type <i> (125)
        on left: 22 23
        on right: 20 173 481
    integral_type <i> (126)
        on left: 24 25 26 27 28
        on right: 22
    floating_point_type <i> (127)
        on left: 29 30
        on right: 23
    reference_type <i> (128)
        on left: 31 32 33
        on right: 62 67 68 512 584 616 617
    class_or_interface_type <i> (129)
        on left: 34 35
        on right: 31 38 42 55 518 520
    class_type <i> (130)
        on left: 36 37 38
        on right: 34 39 142 219 450 515
    interface_type <i> (131)
        on left: 39
        on right: 35 56 144 145
    type_variable <i> (132)
        on left: 40
        on right: 32 43 54 220
    array_type <i> (133)
        on left: 41 42 43
        on right: 33 516
    dims <i> (134)
        on left: 44
        on right: 41 42 43 167 187 188 189 519 520
    an_sp.multiopt <i> (135)
        on left: 45 46
        on right: 44 45
    type_parameter <i> (136)
        on left: 47
        on right: 139 140
    type_parameter_modifier.multiopt <i> (137)
        on left: 48 49 50
        on right: 47 49
    type_parameter_modifier <i> (138)
        on left: 51
        on right: 48 49
    type_bound.opt <i> (139)
        on left: 52 53
        on right: 47
    type_bound <i> (140)
        on left: 54 55
        on right: 52
    additional_bound <i> (141)
        on left: 56
        on right: 618
    type_arguments <i> (142)
        on left: 57
        on right: 183 495
    type_argument_list <i> (143)
        on left: 58
        on right: 57
    type_argument.multiopt <i> (144)
        on left: 59 60 61
        on right: 58 60
    type_argument <i> (145)
        on left: 62 63
        on right: 58 59 60
    wildcard <i> (146)
        on left: 64
        on right: 63
    wildcard_bounds.opt <i> (147)
        on left: 65 66
        on right: 64
    wildcard_bounds <i> (148)
        on left: 67 68
        on right: 65
    module_name <i> (149)
        on left: 69 70
        on right: 70 114 121 122 124
    package_name <i> (150)
        on left: 71 72
        on right: 37 72 115 116 181
    type_name <i> (151)
        on left: 73 74
        on right: 98 100 101 117 118 119 147 284 311 327 328 473 480 498 502 506 514
    expression_name <i> (152)
        on left: 75 76
        on right: 235 464 487 499 503 510 547 610
    method_name <i> (153)
        on left: 77
        on right: 501
    package_or_type_name <i> (154)
        on left: 78 79
        on right: 74 79 99
    ambiguous_name <i> (155)
        on left: 80 81
        on right: 76 81
    compilation_unit <i> (156)
        on left: 82 83
        on right: 1
    ordinary_compilation_unit <i> (157)
        on left: 84
        on right: 82
    modular_compilation_unit <i> (158)
        on left: 85
        on right: 83
    package_declaration.opt <i> (159)
        on left: 86 87
        on right: 84
    package_declaration <i> (160)
        on left: 88
        on right: 86
    package_modifier.multiopt <i> (161)
        on left: 89 90
        on right: 88 89
    package_modifier <i> (162)
        on left: 91
        on right: 89
    import_declaration.multiopt <i> (163)
        on left: 92 93
        on right: 84 85 92
    import_declaration <i> (164)
        on left: 94 95 96 97
        on right: 92
    single_type_import_declaration <i> (165)
        on left: 98
        on right: 94
    type_import_on_demand_declaration <i> (166)
        on left: 99
        on right: 95
    single_static_import_declaration <i> (167)
        on left: 100
        on right: 96
    static_import_on_demand_declaration <i> (168)
        on left: 101
        on right: 97
    top_level_class_or_interface_declaration.multiopt <i> (169)
        on left: 102 103 104
        on right: 84 103
    top_level_class_or_interface_declaration <i> (170)
        on left: 105 106 107
        on right: 102 103
    module_declaration <i> (171)
        on left: 108
        on right: 85
    open.opt <i> (172)
        on left: 109 110
        on right: 108
    module_directive.multiopt <i> (173)
        on left: 111 112 113
        on right: 108 112
    module_directive <i> (174)
        on left: 114 115 116 117 118
        on right: 111 112
    com_type_name.multiopt <i> (175)
        on left: 119 120
        on right: 118 119 147 284
    to_module_names.opt <i> (176)
        on left: 121 122 123
        on right: 115 116 122
    com_module_name.multiopt <i> (177)
        on left: 124 125
        on right: 121 122 124
    class_declaration <i> (178)
        on left: 126 127 128
        on right: 105 157 290 301 344
    normal_class_declaration <i> (179)
        on left: 129
        on right: 126
    type_parameters.opt <i> (180)
        on left: 130 131
        on right: 129 226 257 278
    class_extends.opt <i> (181)
        on left: 132 133
        on right: 129
    class_implements.opt <i> (182)
        on left: 134 135
        on right: 129 239 257
    class_permits.opt <i> (183)
        on left: 136 137
        on right: 129
    type_parameters <i> (184)
        on left: 138
        on right: 130 192
    type_parameter_list <i> (185)
        on left: 139
        on right: 138
    com_type_parameter.multiopt <i> (186)
        on left: 140 141
        on right: 139 140
    class_extends <i> (187)
        on left: 142
        on right: 132
    class_implements <i> (188)
        on left: 143
        on right: 134
    interface_type_list <i> (189)
        on left: 144
        on right: 143 283
    com_interface_type.multiopt <i> (190)
        on left: 145 146
        on right: 144 145
    class_permits <i> (191)
        on left: 147
        on right: 136
    class_body <i> (192)
        on left: 148
        on right: 129 253
    class_body_declaration.multiopt <i> (193)
        on left: 149 150
        on right: 148 149 256
    class_body_declaration <i> (194)
        on left: 151 152 153 154
        on right: 149 273
    class_member_declaration <i> (195)
        on left: 155 156 157 158
        on right: 151
    field_declaration <i> (196)
        on left: 159
        on right: 155
    variable_declarator_list <i> (197)
        on left: 160
        on right: 159 293 347
    com_variable_declarator.multiopt <i> (198)
        on left: 161 162
        on right: 160 161
    variable_declarator <i> (199)
        on left: 163
        on right: 160 161
    eq_variable_initializer.opt <i> (200)
        on left: 164 165
        on right: 163
    variable_declarator_id <i> (201)
        on left: 166
        on right: 163 208 448 538
    dims.opt <i> (202)
        on left: 167 168
        on right: 166 197 304 517 518
    variable_initializer <i> (203)
        on left: 169 170
        on right: 164 334 335
    unann_type <i> (204)
        on left: 171 172
        on right: 159 195 202 208 212 264 268 293 304 348 540
    unann_primitive_type <i> (205)
        on left: 173 174
        on right: 171 187
    unann_reference_type <i> (206)
        on left: 175 176 177
        on right: 172
    unann_class_or_interface_type <i> (207)
        on left: 178 179
        on right: 175 182 188
    unann_class_type <i> (208)
        on left: 180 181 182
        on right: 178 185 449
    type_arguments.opt <i> (209)
        on left: 183 184
        on right: 36 37 38 180 181 182 233 234 235 236 489 502 503 504 505 506 510 511 512 513 514 515
    unann_interface_type <i> (210)
        on left: 185
        on right: 179
    unann_type_variable <i> (211)
        on left: 186
        on right: 176 189
    unann_array_type <i> (212)
        on left: 187 188 189
        on right: 177
    method_declaration <i> (213)
        on left: 190
        on right: 156
    method_header <i> (214)
        on left: 191 192
        on right: 190 294
    throws.opt <i> (215)
        on left: 193 194
        on right: 191 192 225
    result <i> (216)
        on left: 195 196
        on right: 191 192
    method_declarator <i> (217)
        on left: 197
        on right: 191 192
    receiver_parameter_com.opt <i> (218)
        on left: 198 199
        on right: 197 226
    formal_parameter_list.opt <i> (219)
        on left: 200 201
        on right: 197 226
    receiver_parameter <i> (220)
        on left: 202
        on right: 198
    IDENTIFIER_dot.opt <i> (221)
        on left: 203 204
        on right: 202
    formal_parameter_list <i> (222)
        on left: 205
        on right: 200
    com_formal_parameter.multiopt <i> (223)
        on left: 206 207
        on right: 205 206
    formal_parameter <i> (224)
        on left: 208 209
        on right: 205 206
    variable_modifier.multiopt <i> (225)
        on left: 210 211
        on right: 208 210 212 347 448 538
    variable_arity_parameter <i> (226)
        on left: 212
        on right: 209 539
    variable_modifier <i> (227)
        on left: 213 214
        on right: 210
    throws <i> (228)
        on left: 215
        on right: 193
    exception_type_list <i> (229)
        on left: 216
        on right: 215
    com_exception_type.multiopt <i> (230)
        on left: 217 218
        on right: 216 217
    exception_type <i> (231)
        on left: 219 220
        on right: 216 217
    method_body <i> (232)
        on left: 221 222
        on right: 190 294
    instance_initializer <i> (233)
        on left: 223
        on right: 152
    static_initializer <i> (234)
        on left: 224
        on right: 153
    constructor_declaration <i> (235)
        on left: 225
        on right: 154
    constructor_declarator <i> (236)
        on left: 226
        on right: 225
    simple_type_name <i> (237)
        on left: 227
        on right: 226 275
    constructor_body <i> (238)
        on left: 228
        on right: 225 275
    explicit_constructor_invocation.opt <i> (239)
        on left: 229 230
        on right: 228
    block_statements.opt <i> (240)
        on left: 231 232
        on right: 228 337
    explicit_constructor_invocation <i> (241)
        on left: 233 234 235 236
        on right: 229
    argument_list.opt <i> (242)
        on left: 237 238
        on right: 233 234 235 236 250 489 501 502 503 504 505 506
    enum_declaration <i> (243)
        on left: 239
        on right: 127
    enum_body <i> (244)
        on left: 240
        on right: 239
    com.opt <i> (245)
        on left: 241 242
        on right: 240 321 331
    enum_body_declarations.opt <i> (246)
        on left: 243 244
        on right: 240
    enum_constant_list.opt <i> (247)
        on left: 245 246
        on right: 240
    enum_constant_list <i> (248)
        on left: 247
        on right: 245
    com_enum_constant.multiopt <i> (249)
        on left: 248 249
        on right: 247 248
    enum_constant <i> (250)
        on left: 250
        on right: 247 248
    enum_modifier.multiopt <i> (251)
        on left: 251 252
        on right: 250 251
    class_body.opt <i> (252)
        on left: 253 254
        on right: 250 489
    enum_modifier <i> (253)
        on left: 255
        on right: 251
    enum_body_declarations <i> (254)
        on left: 256
        on right: 243
    record_declaration <i> (255)
        on left: 257
        on right: 128
    record_header <i> (256)
        on left: 258
        on right: 257
    record_component_list.opt <i> (257)
        on left: 259 260
        on right: 258
    record_component_list <i> (258)
        on left: 261
        on right: 259
    com_record_component.multiopt <i> (259)
        on left: 262 263
        on right: 261 262
    record_component <i> (260)
        on left: 264 265
        on right: 261 262
    record_component_modifier.multiopt <i> (261)
        on left: 266 267
        on right: 264 266 268
    variable_arity_record_component <i> (262)
        on left: 268
        on right: 265
    record_component_modifier <i> (263)
        on left: 269
        on right: 266
    record_body <i> (264)
        on left: 270
        on right: 257
    record_body_declaration.multiopt <i> (265)
        on left: 271 272
        on right: 270 271
    record_body_declaration <i> (266)
        on left: 273 274
        on right: 271
    compact_constructor_declaration <i> (267)
        on left: 275
        on right: 274
    interface_declaration <i> (268)
        on left: 276 277
        on right: 106 158 291 302
    normal_interface_declaration <i> (269)
        on left: 278
        on right: 276 345
    interface_extends.opt <i> (270)
        on left: 279 280
        on right: 278
    interface_permits.opt <i> (271)
        on left: 281 282
        on right: 278
    interface_extends <i> (272)
        on left: 283
        on right: 279
    interface_permits <i> (273)
        on left: 284
        on right: 281
    interface_body <i> (274)
        on left: 285
        on right: 278
    interface_member_declaration.multiopt <i> (275)
        on left: 286 287
        on right: 285 286
    interface_member_declaration <i> (276)
        on left: 288 289 290 291 292
        on right: 286
    constant_declaration <i> (277)
        on left: 293
        on right: 288 300
    interface_method_declaration <i> (278)
        on left: 294
        on right: 289
    annotation_interface_declaration <i> (279)
        on left: 295
        on right: 277
    annotation_interface_body <i> (280)
        on left: 296
        on right: 295
    annotation_interface_member_declaration.multiopt <i> (281)
        on left: 297 298
        on right: 296 297
    annotation_interface_member_declaration <i> (282)
        on left: 299 300 301 302 303
        on right: 297
    annotation_interface_element_declaration <i> (283)
        on left: 304
        on right: 299
    default_value.opt <i> (284)
        on left: 305 306
        on right: 304
    default_value <i> (285)
        on left: 307
        on right: 305
    annotation <i> (286)
        on left: 308 309 310
        on right: 4 51 91 213 255 269 320 329
    normal_annotation <i> (287)
        on left: 311
        on right: 308
    element_value_pair_list.opt <i> (288)
        on left: 312 313
        on right: 311
    element_value_pair_list <i> (289)
        on left: 314
        on right: 312
    com_element_value_pair.multiopt <i> (290)
        on left: 315 316
        on right: 314 315
    element_value_pair <i> (291)
        on left: 317
        on right: 314 315
    element_value <i> (292)
        on left: 318 319 320
        on right: 307 317 324 325 328
    element_value_array_initializer <i> (293)
        on left: 321
        on right: 319
    element_valueList.opt <i> (294)
        on left: 322 323
        on right: 321
    element_valueList <i> (295)
        on left: 324
        on right: 322
    com_element_value.multiopt <i> (296)
        on left: 325 326
        on right: 324 325
    marker_annotation <i> (297)
        on left: 327
        on right: 309
    single_element_annotation <i> (298)
        on left: 328
        on right: 310
    annotation.multiopt <i> (299)
        on left: 329 330
        on right: 20 21 36 37 38 40 44 45 64 108 181 182 192 202 212 268 329 490 491 524
    array_initializer <i> (300)
        on left: 331
        on right: 170 519 520
    variable_initializer_list.opt <i> (301)
        on left: 332 333
        on right: 331
    variable_initializer_list <i> (302)
        on left: 334
        on right: 332
    com_variable_initializer.multiopt <i> (303)
        on left: 335 336
        on right: 334 335
    block <i> (304)
        on left: 337
        on right: 221 223 224 361 400 438 439 440 447 452 453 543
    block_statements <i> (305)
        on left: 338
        on right: 231 402
    block_statement.multiopt <i> (306)
        on left: 339 340
        on right: 338 339
    block_statement <i> (307)
        on left: 341 342 343
        on right: 338 339
    local_class_or_interface_declaration <i> (308)
        on left: 344 345
        on right: 341
    local_variable_declaration_statement <i> (309)
        on left: 346
        on right: 342
    local_variable_declaration <i> (310)
        on left: 347
        on right: 346 424 429 430 462 467
    local_variable_type <i> (311)
        on left: 348 349
        on right: 347
    statement <i> (312)
        on left: 350 351 352 353 354 355
        on right: 343 375 385 386 408 410 415 429
    statement_no_short_if <i> (313)
        on left: 356 357 358 359 360
        on right: 376 386 387 409 422 430
    statement_without_trailing_substatement <i> (314)
        on left: 361 362 363 364 365 366 367 368 369 370 371 372 373
        on right: 350 356
    empty_statement <i> (315)
        on left: 374
        on right: 362
    labeled_statement <i> (316)
        on left: 375
        on right: 351
    labeled_statement_no_short_if <i> (317)
        on left: 376
        on right: 357
    expression_statement <i> (318)
        on left: 377
        on right: 363
    statement_expression <i> (319)
        on left: 378 379 380 381 382 383 384
        on right: 377 426 427
    if_then_statement <i> (320)
        on left: 385
        on right: 352
    if_then_else_statement <i> (321)
        on left: 386
        on right: 353
    if_then_else_statement_no_short_if <i> (322)
        on left: 387
        on right: 358
    assert_statement <i> (323)
        on left: 388 389
        on right: 364
    switch_statement <i> (324)
        on left: 390
        on right: 365
    switch_block <i> (325)
        on left: 391 392
        on right: 390 620
    switch_rule.multiopt <i> (326)
        on left: 393 394
        on right: 391 393
    switch_block_statement_group.multiopt <i> (327)
        on left: 395 396
        on right: 392 395
    switch_label_col.multiopt <i> (328)
        on left: 397 398
        on right: 392 397 402
    switch_rule <i> (329)
        on left: 399 400 401
        on right: 391 393
    switch_block_statement_group <i> (330)
        on left: 402
        on right: 395
    switch_label <i> (331)
        on left: 403 404
        on right: 397 399 400 401 402
    com_case_constant.multiopt <i> (332)
        on left: 405 406
        on right: 403 405
    case_constant <i> (333)
        on left: 407
        on right: 403 405
    while_statement <i> (334)
        on left: 408
        on right: 354
    while_statement_no_short_if <i> (335)
        on left: 409
        on right: 359
    do_statement <i> (336)
        on left: 410
        on right: 366
    for_statement <i> (337)
        on left: 411 412
        on right: 355
    for_statement_no_short_if <i> (338)
        on left: 413 414
        on right: 360
    basic_for_statement <i> (339)
        on left: 415
        on right: 411
    for_init.opt <i> (340)
        on left: 416 417
        on right: 415 422
    expression.opt <i> (341)
        on left: 418 419
        on right: 415 422 436
    for_update.opt <i> (342)
        on left: 420 421
        on right: 415 422
    basic_for_statement_no_short_if <i> (343)
        on left: 422
        on right: 413
    for_init <i> (344)
        on left: 423 424
        on right: 416
    for_update <i> (345)
        on left: 425
        on right: 420
    statement_expression_list <i> (346)
        on left: 426
        on right: 423 425
    com_statement_expression.multiopt <i> (347)
        on left: 427 428
        on right: 426 427
    enhanced_for_statement <i> (348)
        on left: 429
        on right: 412
    enhanced_for_statement_no_short_if <i> (349)
        on left: 430
        on right: 414
    break_statement <i> (350)
        on left: 431
        on right: 367
    IDENTIFIER.opt <i> (351)
        on left: 432 433
        on right: 431 435
    yield_statement <i> (352)
        on left: 434
        on right: 373
    continue_statement <i> (353)
        on left: 435
        on right: 368
    return_statement <i> (354)
        on left: 436
        on right: 369
    throw_statement <i> (355)
        on left: 437
        on right: 371 401
    synchronized_statement <i> (356)
        on left: 438
        on right: 370
    try_statement <i> (357)
        on left: 439 440 441
        on right: 372
    catches.opt <i> (358)
        on left: 442 443
        on right: 440 453
    catches <i> (359)
        on left: 444
        on right: 439 442
    catch_clause.multiopt <i> (360)
        on left: 445 446
        on right: 444 445
    catch_clause <i> (361)
        on left: 447
        on right: 444 445
    catch_formal_parameter <i> (362)
        on left: 448
        on right: 447
    catch_type <i> (363)
        on left: 449
        on right: 448
    vt_class_type.multiopt <i> (364)
        on left: 450 451
        on right: 449 450
    finally <i> (365)
        on left: 452
        on right: 440 454
    try_with_resources_statement <i> (366)
        on left: 453
        on right: 441
    finally.opt <i> (367)
        on left: 454 455
        on right: 453
    resource_specification <i> (368)
        on left: 456
        on right: 453
    semcol.opt <i> (369)
        on left: 457 458
        on right: 456
    resource_list <i> (370)
        on left: 459
        on right: 456
    semcol_resource.multiopt <i> (371)
        on left: 460 461
        on right: 459 460
    resource <i> (372)
        on left: 462 463
        on right: 459 460
    variable_access <i> (373)
        on left: 464 465
        on right: 463
    pattern <i> (374)
        on left: 466
        on right: 585
    type_pattern <i> (375)
        on left: 467
        on right: 466
    primary <i> (376)
        on left: 468 469
        on right: 236 488 496 504 511 609
    primary_no_new_array <i> (377)
        on left: 470 471 472 473 474 475 476 477 478 479
        on right: 468 500
    class_literal <i> (378)
        on left: 480 481 482 483
        on right: 471
    dm.multiopt <i> (379)
        on left: 484 485
        on right: 480 481 482 484
    class_instance_creation_expression <i> (380)
        on left: 486 487 488
        on right: 384 475
    unqualified_class_instance_creation_expression <i> (381)
        on left: 489
        on right: 486 487 488
    class_or_interface_type_to_instantiate <i> (382)
        on left: 490
        on right: 489
    dot_annotation.multiopt_IDENTIFIER.multiopt <i> (383)
        on left: 491 492
        on right: 490 491
    type_arguments_or_diamond.opt <i> (384)
        on left: 493 494
        on right: 490
    type_arguments_or_diamond <i> (385)
        on left: 495
        on right: 493
    field_access <i> (386)
        on left: 496 497 498
        on right: 465 476 548
    array_access <i> (387)
        on left: 499 500
        on right: 477 549
    method_invocation <i> (388)
        on left: 501 502 503 504 505 506
        on right: 383 478
    argument_list <i> (389)
        on left: 507
        on right: 237
    com_expression.multiopt <i> (390)
        on left: 508 509
        on right: 507 508
    method_reference <i> (391)
        on left: 510 511 512 513 514 515 516
        on right: 479
    array_creation_expression <i> (392)
        on left: 517 518 519 520
        on right: 469
    dim_exprs <i> (393)
        on left: 521
        on right: 517 518
    dim_expr.multiopt <i> (394)
        on left: 522 523
        on right: 521 522
    dim_expr <i> (395)
        on left: 524
        on right: 521 522
    expression <i> (396)
        on left: 525 526
        on right: 169 385 386 387 388 389 390 399 408 409 410 418 429 430 434 437 438 474 499 500 507 508 524 542 546 563 564 620
    lambda_expression <i> (397)
        on left: 527
        on right: 525 564 617
    lambda_parameters <i> (398)
        on left: 528 529
        on right: 527
    lambda_parameter_list.opt <i> (399)
        on left: 530 531
        on right: 528
    lambda_parameter_list <i> (400)
        on left: 532 533
        on right: 530
    com_IDENTIFIER.multiopt <i> (401)
        on left: 534 535
        on right: 533 534
    com_lambda_parameter.multiopt <i> (402)
        on left: 536 537
        on right: 532 536
    lambda_parameter <i> (403)
        on left: 538 539
        on right: 532 536
    lambda_parameter_type <i> (404)
        on left: 540 541
        on right: 538
    lambda_body <i> (405)
        on left: 542 543
        on right: 527
    assignment_expression <i> (406)
        on left: 544 545
        on right: 526
    assignment <i> (407)
        on left: 546
        on right: 378 545
    left_hand_side <i> (408)
        on left: 547 548 549
        on right: 546
    assignment_operator <i> (409)
        on left: 550 551 552 553 554 555 556 557 558 559 560 561
        on right: 546
    conditional_expression <i> (410)
        on left: 562 563 564
        on right: 318 407 544 563
    conditional_or_expression <i> (411)
        on left: 565 566
        on right: 562 563 564 566
    conditional_and_expression <i> (412)
        on left: 567 568
        on right: 565 566 568
    inclusive_or_expression <i> (413)
        on left: 569 570
        on right: 567 568 570
    exclusive_or_expression <i> (414)
        on left: 571 572
        on right: 569 570 572
    and_expression <i> (415)
        on left: 573 574
        on right: 571 572 574
    equality_expression <i> (416)
        on left: 575 576 577
        on right: 573 574 576 577
    relational_expression <i> (417)
        on left: 578 579 580 581 582 583
        on right: 575 576 577 579 580 581 582 584 585
    instanceof_expression <i> (418)
        on left: 584 585
        on right: 583
    shift_expression <i> (419)
        on left: 586 587 588 589
        on right: 578 579 580 581 582 587 588 589
    additive_expression <i> (420)
        on left: 590 591 592
        on right: 586 587 588 589 591 592
    multiplicative_expression <i> (421)
        on left: 593 594 595 596
        on right: 590 591 592 594 595 596
    unary_expression <i> (422)
        on left: 597 598 599 600 601
        on right: 593 594 595 596 599 600 602 603 605 606 615
    pre_increment_expression <i> (423)
        on left: 602
        on right: 379 597
    pre_decrement_expression <i> (424)
        on left: 603
        on right: 380 598
    unary_expression_not_plus_minus <i> (425)
        on left: 604 605 606 607 608
        on right: 601 616
    postfix_expression <i> (426)
        on left: 609 610 611 612
        on right: 604 613 614
    post_increment_expression <i> (427)
        on left: 613
        on right: 381 611
    post_decrement_expression <i> (428)
        on left: 614
        on right: 382 612
    cast_expression <i> (429)
        on left: 615 616 617
        on right: 607
    additional_bound.multiopt <i> (430)
        on left: 618 619
        on right: 55 616 617 618
    switch_expression <i> (431)
        on left: 620
        on right: 608


State 0

    0 $accept: • input $end

    "@"        reduce using rule 87 (package_declaration.opt)
    "@"        [reduce using rule 90 (package_modifier.multiopt)]
    "@"        [reduce using rule 93 (import_declaration.multiopt)]
    "import"   reduce using rule 87 (package_declaration.opt)
    "import"   [reduce using rule 93 (import_declaration.multiopt)]
    "module"   reduce using rule 93 (import_declaration.multiopt)
    "open"     reduce using rule 93 (import_declaration.multiopt)
    "package"  reduce using rule 90 (package_modifier.multiopt)
    $default   reduce using rule 87 (package_declaration.opt)

    input                        go to state 1
    compilation_unit             go to state 2
    ordinary_compilation_unit    go to state 3
    modular_compilation_unit     go to state 4
    package_declaration.opt      go to state 5
    package_declaration          go to state 6
    package_modifier.multiopt    go to state 7
    import_declaration.multiopt  go to state 8


State 1

    0 $accept: input • $end

    $end  shift, and go to state 9


State 2

    1 input: compilation_unit •

    $default  reduce using rule 1 (input)


State 3

   82 compilation_unit: ordinary_compilation_unit •

    $default  reduce using rule 82 (compilation_unit)


State 4

   83 compilation_unit: modular_compilation_unit •

    $default  reduce using rule 83 (compilation_unit)


State 5

   84 ordinary_compilation_unit: package_declaration.opt • import_declaration.multiopt top_level_class_or_interface_declaration.multiopt

    $default  reduce using rule 93 (import_declaration.multiopt)

    import_declaration.multiopt  go to state 10


State 6

   86 package_declaration.opt: package_declaration •

    $default  reduce using rule 86 (package_declaration.opt)


State 7

   88 package_declaration: package_modifier.multiopt • "package" TOK_IDENTIFIER dot_ind.multiopt ";"
   89 package_modifier.multiopt: package_modifier.multiopt • package_modifier

    "@"        shift, and go to state 11
    "package"  shift, and go to state 12

    package_modifier           go to state 13
    annotation                 go to state 14
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 8

   85 modular_compilation_unit: import_declaration.multiopt • module_declaration
   92 import_declaration.multiopt: import_declaration.multiopt • import_declaration

    "import"  shift, and go to state 18

    $default  reduce using rule 330 (annotation.multiopt)

    import_declaration                   go to state 19
    single_type_import_declaration       go to state 20
    type_import_on_demand_declaration    go to state 21
    single_static_import_declaration     go to state 22
    static_import_on_demand_declaration  go to state 23
    module_declaration                   go to state 24
    annotation.multiopt                  go to state 25


State 9

    0 $accept: input $end •

    $default  accept


State 10

   84 ordinary_compilation_unit: package_declaration.opt import_declaration.multiopt • top_level_class_or_interface_declaration.multiopt
   92 import_declaration.multiopt: import_declaration.multiopt • import_declaration

    ";"       shift, and go to state 26
    "import"  shift, and go to state 18

    $end          reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)
    ";"           [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "@"           reduce using rule 3 (modifier.multiopt)
    "@"           [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "abstract"    reduce using rule 3 (modifier.multiopt)
    "abstract"    [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "class"       reduce using rule 3 (modifier.multiopt)
    "class"       [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "enum"        reduce using rule 3 (modifier.multiopt)
    "enum"        [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "final"       reduce using rule 3 (modifier.multiopt)
    "final"       [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "interface"   reduce using rule 3 (modifier.multiopt)
    "interface"   [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "private"     reduce using rule 3 (modifier.multiopt)
    "private"     [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "protected"   reduce using rule 3 (modifier.multiopt)
    "protected"   [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "public"      reduce using rule 3 (modifier.multiopt)
    "public"      [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "record"      reduce using rule 3 (modifier.multiopt)
    "record"      [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "sealed"      reduce using rule 3 (modifier.multiopt)
    "sealed"      [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "static"      reduce using rule 3 (modifier.multiopt)
    "static"      [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "strictfp"    reduce using rule 3 (modifier.multiopt)
    "strictfp"    [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "transient"   reduce using rule 3 (modifier.multiopt)
    "transient"   [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "transitive"  reduce using rule 3 (modifier.multiopt)
    "transitive"  [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    "volatile"    reduce using rule 3 (modifier.multiopt)
    "volatile"    [reduce using rule 104 (top_level_class_or_interface_declaration.multiopt)]
    $default      reduce using rule 3 (modifier.multiopt)

    modifier.multiopt                                  go to state 27
    import_declaration                                 go to state 19
    single_type_import_declaration                     go to state 20
    type_import_on_demand_declaration                  go to state 21
    single_static_import_declaration                   go to state 22
    static_import_on_demand_declaration                go to state 23
    top_level_class_or_interface_declaration.multiopt  go to state 28
    top_level_class_or_interface_declaration           go to state 29
    class_declaration                                  go to state 30
    normal_class_declaration                           go to state 31
    enum_declaration                                   go to state 32
    record_declaration                                 go to state 33
    interface_declaration                              go to state 34
    normal_interface_declaration                       go to state 35
    annotation_interface_declaration                   go to state 36


State 11

  311 normal_annotation: "@" • type_name "(" element_value_pair_list.opt ")"
  327 marker_annotation: "@" • type_name
  328 single_element_annotation: "@" • type_name "(" element_value ")"

    TOK_IDENTIFIER  shift, and go to state 37

    type_IDENTIFIER       go to state 38
    type_name             go to state 39
    package_or_type_name  go to state 40


State 12

   88 package_declaration: package_modifier.multiopt "package" • TOK_IDENTIFIER dot_ind.multiopt ";"

    TOK_IDENTIFIER  shift, and go to state 41


State 13

   89 package_modifier.multiopt: package_modifier.multiopt package_modifier •

    $default  reduce using rule 89 (package_modifier.multiopt)


State 14

   91 package_modifier: annotation •

    $default  reduce using rule 91 (package_modifier)


State 15

  308 annotation: normal_annotation •

    $default  reduce using rule 308 (annotation)


State 16

  309 annotation: marker_annotation •

    $default  reduce using rule 309 (annotation)


State 17

  310 annotation: single_element_annotation •

    $default  reduce using rule 310 (annotation)


State 18

   98 single_type_import_declaration: "import" • type_name ";"
   99 type_import_on_demand_declaration: "import" • package_or_type_name "." "*" ";"
  100 single_static_import_declaration: "import" • "static" type_name "." TOK_IDENTIFIER ";"
  101 static_import_on_demand_declaration: "import" • "static" type_name "." "*" ";"

    TOK_IDENTIFIER  shift, and go to state 37
    "static"        shift, and go to state 42

    type_IDENTIFIER       go to state 38
    type_name             go to state 43
    package_or_type_name  go to state 44


State 19

   92 import_declaration.multiopt: import_declaration.multiopt import_declaration •

    $default  reduce using rule 92 (import_declaration.multiopt)


State 20

   94 import_declaration: single_type_import_declaration •

    $default  reduce using rule 94 (import_declaration)


State 21

   95 import_declaration: type_import_on_demand_declaration •

    $default  reduce using rule 95 (import_declaration)


State 22

   96 import_declaration: single_static_import_declaration •

    $default  reduce using rule 96 (import_declaration)


State 23

   97 import_declaration: static_import_on_demand_declaration •

    $default  reduce using rule 97 (import_declaration)


State 24

   85 modular_compilation_unit: import_declaration.multiopt module_declaration •

    $default  reduce using rule 85 (modular_compilation_unit)


State 25

  108 module_declaration: annotation.multiopt • open.opt "module" TOK_IDENTIFIER dot_ind.multiopt "{" module_directive.multiopt "}"
  329 annotation.multiopt: annotation.multiopt • annotation

    "@"     shift, and go to state 11
    "open"  shift, and go to state 45

    $default  reduce using rule 110 (open.opt)

    open.opt                   go to state 46
    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 26

  107 top_level_class_or_interface_declaration: ";" •

    $default  reduce using rule 107 (top_level_class_or_interface_declaration)


State 27

    2 modifier.multiopt: modifier.multiopt • modifier
  129 normal_class_declaration: modifier.multiopt • "class" type_IDENTIFIER type_parameters.opt class_extends.opt class_implements.opt class_permits.opt class_body
  239 enum_declaration: modifier.multiopt • "enum" type_IDENTIFIER class_implements.opt enum_body
  257 record_declaration: modifier.multiopt • "record" type_IDENTIFIER type_parameters.opt record_header class_implements.opt record_body
  278 normal_interface_declaration: modifier.multiopt • "interface" type_IDENTIFIER type_parameters.opt interface_extends.opt interface_permits.opt interface_body
  295 annotation_interface_declaration: modifier.multiopt • "@" "interface" type_IDENTIFIER annotation_interface_body

    "@"           shift, and go to state 48
    "abstract"    shift, and go to state 49
    "class"       shift, and go to state 50
    "enum"        shift, and go to state 51
    "final"       shift, and go to state 52
    "interface"   shift, and go to state 53
    "private"     shift, and go to state 54
    "protected"   shift, and go to state 55
    "public"      shift, and go to state 56
    "record"      shift, and go to state 57
    "sealed"      shift, and go to state 58
    "static"      shift, and go to state 59
    "strictfp"    shift, and go to state 60
    "transient"   shift, and go to state 61
    "transitive"  shift, and go to state 62
    "volatile"    shift, and go to state 63

    modifier                   go to state 64
    annotation                 go to state 65
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 28

   84 ordinary_compilation_unit: package_declaration.opt import_declaration.multiopt top_level_class_or_interface_declaration.multiopt •
  103 top_level_class_or_interface_declaration.multiopt: top_level_class_or_interface_declaration.multiopt • top_level_class_or_interface_declaration

    ";"  shift, and go to state 26

    $end      reduce using rule 84 (ordinary_compilation_unit)
    $default  reduce using rule 3 (modifier.multiopt)

    modifier.multiopt                         go to state 27
    top_level_class_or_interface_declaration  go to state 66
    class_declaration                         go to state 30
    normal_class_declaration                  go to state 31
    enum_declaration                          go to state 32
    record_declaration                        go to state 33
    interface_declaration                     go to state 34
    normal_interface_declaration              go to state 35
    annotation_interface_declaration          go to state 36


State 29

  102 top_level_class_or_interface_declaration.multiopt: top_level_class_or_interface_declaration •

    $default  reduce using rule 102 (top_level_class_or_interface_declaration.multiopt)


State 30

  105 top_level_class_or_interface_declaration: class_declaration •

    $default  reduce using rule 105 (top_level_class_or_interface_declaration)


State 31

  126 class_declaration: normal_class_declaration •

    $default  reduce using rule 126 (class_declaration)


State 32

  127 class_declaration: enum_declaration •

    $default  reduce using rule 127 (class_declaration)


State 33

  128 class_declaration: record_declaration •

    $default  reduce using rule 128 (class_declaration)


State 34

  106 top_level_class_or_interface_declaration: interface_declaration •

    $default  reduce using rule 106 (top_level_class_or_interface_declaration)


State 35

  276 interface_declaration: normal_interface_declaration •

    $default  reduce using rule 276 (interface_declaration)


State 36

  277 interface_declaration: annotation_interface_declaration •

    $default  reduce using rule 277 (interface_declaration)


State 37

   18 type_IDENTIFIER: TOK_IDENTIFIER •
   78 package_or_type_name: TOK_IDENTIFIER •

    "."       reduce using rule 18 (type_IDENTIFIER)
    "."       [reduce using rule 78 (package_or_type_name)]
    $default  reduce using rule 18 (type_IDENTIFIER)


State 38

   73 type_name: type_IDENTIFIER •

    $default  reduce using rule 73 (type_name)


State 39

  311 normal_annotation: "@" type_name • "(" element_value_pair_list.opt ")"
  327 marker_annotation: "@" type_name •
  328 single_element_annotation: "@" type_name • "(" element_value ")"

    "("  shift, and go to state 67

    $default  reduce using rule 327 (marker_annotation)


State 40

   74 type_name: package_or_type_name • "." type_IDENTIFIER
   79 package_or_type_name: package_or_type_name • "." TOK_IDENTIFIER

    "."  shift, and go to state 68


State 41

   88 package_declaration: package_modifier.multiopt "package" TOK_IDENTIFIER • dot_ind.multiopt ";"

    $default  reduce using rule 17 (dot_ind.multiopt)

    dot_ind.multiopt  go to state 69


State 42

  100 single_static_import_declaration: "import" "static" • type_name "." TOK_IDENTIFIER ";"
  101 static_import_on_demand_declaration: "import" "static" • type_name "." "*" ";"

    TOK_IDENTIFIER  shift, and go to state 37

    type_IDENTIFIER       go to state 38
    type_name             go to state 70
    package_or_type_name  go to state 40


State 43

   98 single_type_import_declaration: "import" type_name • ";"

    ";"  shift, and go to state 71


State 44

   74 type_name: package_or_type_name • "." type_IDENTIFIER
   79 package_or_type_name: package_or_type_name • "." TOK_IDENTIFIER
   99 type_import_on_demand_declaration: "import" package_or_type_name • "." "*" ";"

    "."  shift, and go to state 72


State 45

  109 open.opt: "open" •

    $default  reduce using rule 109 (open.opt)


State 46

  108 module_declaration: annotation.multiopt open.opt • "module" TOK_IDENTIFIER dot_ind.multiopt "{" module_directive.multiopt "}"

    "module"  shift, and go to state 73


State 47

  329 annotation.multiopt: annotation.multiopt annotation •

    $default  reduce using rule 329 (annotation.multiopt)


State 48

  295 annotation_interface_declaration: modifier.multiopt "@" • "interface" type_IDENTIFIER annotation_interface_body
  311 normal_annotation: "@" • type_name "(" element_value_pair_list.opt ")"
  327 marker_annotation: "@" • type_name
  328 single_element_annotation: "@" • type_name "(" element_value ")"

    TOK_IDENTIFIER  shift, and go to state 37
    "interface"     shift, and go to state 74

    type_IDENTIFIER       go to state 38
    type_name             go to state 39
    package_or_type_name  go to state 40


State 49

    8 modifier: "abstract" •

    $default  reduce using rule 8 (modifier)


State 50

  129 normal_class_declaration: modifier.multiopt "class" • type_IDENTIFIER type_parameters.opt class_extends.opt class_implements.opt class_permits.opt class_body

    TOK_IDENTIFIER  shift, and go to state 75

    type_IDENTIFIER  go to state 76


State 51

  239 enum_declaration: modifier.multiopt "enum" • type_IDENTIFIER class_implements.opt enum_body

    TOK_IDENTIFIER  shift, and go to state 75

    type_IDENTIFIER  go to state 77


State 52

   10 modifier: "final" •

    $default  reduce using rule 10 (modifier)


State 53

  278 normal_interface_declaration: modifier.multiopt "interface" • type_IDENTIFIER type_parameters.opt interface_extends.opt interface_permits.opt interface_body

    TOK_IDENTIFIER  shift, and go to state 75

    type_IDENTIFIER  go to state 78


State 54

    7 modifier: "private" •

    $default  reduce using rule 7 (modifier)


State 55

    6 modifier: "protected" •

    $default  reduce using rule 6 (modifier)


State 56

    5 modifier: "public" •

    $default  reduce using rule 5 (modifier)


State 57

  257 record_declaration: modifier.multiopt "record" • type_IDENTIFIER type_parameters.opt record_header class_implements.opt record_body

    TOK_IDENTIFIER  shift, and go to state 75

    type_IDENTIFIER  go to state 79


State 58

   11 modifier: "sealed" •

    $default  reduce using rule 11 (modifier)


State 59

    9 modifier: "static" •

    $default  reduce using rule 9 (modifier)


State 60

   12 modifier: "strictfp" •

    $default  reduce using rule 12 (modifier)


State 61

   14 modifier: "transient" •

    $default  reduce using rule 14 (modifier)


State 62

   13 modifier: "transitive" •

    $default  reduce using rule 13 (modifier)


State 63

   15 modifier: "volatile" •

    $default  reduce using rule 15 (modifier)


State 64

    2 modifier.multiopt: modifier.multiopt modifier •

    $default  reduce using rule 2 (modifier.multiopt)


State 65

    4 modifier: annotation •

    $default  reduce using rule 4 (modifier)


State 66

  103 top_level_class_or_interface_declaration.multiopt: top_level_class_or_interface_declaration.multiopt top_level_class_or_interface_declaration •

    $default  reduce using rule 103 (top_level_class_or_interface_declaration.multiopt)


State 67

  311 normal_annotation: "@" type_name "(" • element_value_pair_list.opt ")"
  328 single_element_annotation: "@" type_name "(" • element_value ")"

    TOK_IDENTIFIER  shift, and go to state 80
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "{"             shift, and go to state 101
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 313 (element_value_pair_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation                                      go to state 119
    normal_annotation                               go to state 15
    element_value_pair_list.opt                     go to state 120
    element_value_pair_list                         go to state 121
    element_value_pair                              go to state 122
    element_value                                   go to state 123
    element_value_array_initializer                 go to state 124
    marker_annotation                               go to state 16
    single_element_annotation                       go to state 17
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    conditional_expression                          go to state 136
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 68

   74 type_name: package_or_type_name "." • type_IDENTIFIER
   79 package_or_type_name: package_or_type_name "." • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 157

    type_IDENTIFIER  go to state 158


State 69

   16 dot_ind.multiopt: dot_ind.multiopt • "." TOK_IDENTIFIER
   88 package_declaration: package_modifier.multiopt "package" TOK_IDENTIFIER dot_ind.multiopt • ";"

    "."  shift, and go to state 159
    ";"  shift, and go to state 160


State 70

  100 single_static_import_declaration: "import" "static" type_name • "." TOK_IDENTIFIER ";"
  101 static_import_on_demand_declaration: "import" "static" type_name • "." "*" ";"

    "."  shift, and go to state 161


State 71

   98 single_type_import_declaration: "import" type_name ";" •

    $default  reduce using rule 98 (single_type_import_declaration)


State 72

   74 type_name: package_or_type_name "." • type_IDENTIFIER
   79 package_or_type_name: package_or_type_name "." • TOK_IDENTIFIER
   99 type_import_on_demand_declaration: "import" package_or_type_name "." • "*" ";"

    TOK_IDENTIFIER  shift, and go to state 157
    "*"             shift, and go to state 162

    type_IDENTIFIER  go to state 158


State 73

  108 module_declaration: annotation.multiopt open.opt "module" • TOK_IDENTIFIER dot_ind.multiopt "{" module_directive.multiopt "}"

    TOK_IDENTIFIER  shift, and go to state 163


State 74

  295 annotation_interface_declaration: modifier.multiopt "@" "interface" • type_IDENTIFIER annotation_interface_body

    TOK_IDENTIFIER  shift, and go to state 75

    type_IDENTIFIER  go to state 164


State 75

   18 type_IDENTIFIER: TOK_IDENTIFIER •

    $default  reduce using rule 18 (type_IDENTIFIER)


State 76

  129 normal_class_declaration: modifier.multiopt "class" type_IDENTIFIER • type_parameters.opt class_extends.opt class_implements.opt class_permits.opt class_body

    "<"  shift, and go to state 165

    $default  reduce using rule 131 (type_parameters.opt)

    type_parameters.opt  go to state 166
    type_parameters      go to state 167


State 77

  239 enum_declaration: modifier.multiopt "enum" type_IDENTIFIER • class_implements.opt enum_body

    "implements"  shift, and go to state 168

    $default  reduce using rule 135 (class_implements.opt)

    class_implements.opt  go to state 169
    class_implements      go to state 170


State 78

  278 normal_interface_declaration: modifier.multiopt "interface" type_IDENTIFIER • type_parameters.opt interface_extends.opt interface_permits.opt interface_body

    "<"  shift, and go to state 165

    $default  reduce using rule 131 (type_parameters.opt)

    type_parameters.opt  go to state 171
    type_parameters      go to state 167


State 79

  257 record_declaration: modifier.multiopt "record" type_IDENTIFIER • type_parameters.opt record_header class_implements.opt record_body

    "<"  shift, and go to state 165

    $default  reduce using rule 131 (type_parameters.opt)

    type_parameters.opt  go to state 172
    type_parameters      go to state 167


State 80

   18 type_IDENTIFIER: TOK_IDENTIFIER •
   19 unqualified_method_IDENTIFIER: TOK_IDENTIFIER •
   71 package_name: TOK_IDENTIFIER •
   75 expression_name: TOK_IDENTIFIER •
   78 package_or_type_name: TOK_IDENTIFIER •
   80 ambiguous_name: TOK_IDENTIFIER •
  317 element_value_pair: TOK_IDENTIFIER • "=" element_value

    "="  shift, and go to state 173

    "("       reduce using rule 19 (unqualified_method_IDENTIFIER)
    "."       reduce using rule 18 (type_IDENTIFIER)
    "."       [reduce using rule 71 (package_name)]
    "."       [reduce using rule 75 (expression_name)]
    "."       [reduce using rule 78 (package_or_type_name)]
    "."       [reduce using rule 80 (ambiguous_name)]
    "["       reduce using rule 18 (type_IDENTIFIER)
    "["       [reduce using rule 75 (expression_name)]
    $default  reduce using rule 75 (expression_name)


State 81

  470 primary_no_new_array: TOK_LITERAL •

    $default  reduce using rule 470 (primary_no_new_array)


State 82

  606 unary_expression_not_plus_minus: "!" • unary_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    unary_expression                                go to state 175
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 83

  474 primary_no_new_array: "(" • expression ")"
  615 cast_expression: "(" • primitive_type ")" unary_expression
  616                | "(" • reference_type additional_bound.multiopt ")" unary_expression_not_plus_minus
  617                | "(" • reference_type additional_bound.multiopt ")" lambda_expression

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 178
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 179
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 183
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 84

  599 unary_expression: "+" • unary_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    unary_expression                                go to state 190
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 85

  602 pre_increment_expression: "++" • unary_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    unary_expression                                go to state 191
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 86

  600 unary_expression: "-" • unary_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    unary_expression                                go to state 192
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 87

  603 pre_decrement_expression: "--" • unary_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    unary_expression                                go to state 193
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 88

  482 class_literal: "boolean" • dm.multiopt "." "class"

    $default  reduce using rule 485 (dm.multiopt)

    dm.multiopt  go to state 194


State 89

   24 integral_type: "byte" •

    $default  reduce using rule 24 (integral_type)


State 90

   28 integral_type: "char" •

    $default  reduce using rule 28 (integral_type)


State 91

   30 floating_point_type: "double" •

    $default  reduce using rule 30 (floating_point_type)


State 92

   29 floating_point_type: "float" •

    $default  reduce using rule 29 (floating_point_type)


State 93

   26 integral_type: "int" •

    $default  reduce using rule 26 (integral_type)


State 94

   27 integral_type: "long" •

    $default  reduce using rule 27 (integral_type)


State 95

  489 unqualified_class_instance_creation_expression: "new" • type_arguments.opt class_or_interface_type_to_instantiate "(" argument_list.opt ")" class_body.opt
  517 array_creation_expression: "new" • primitive_type dim_exprs dims.opt
  518                          | "new" • class_or_interface_type dim_exprs dims.opt
  519                          | "new" • primitive_type dims array_initializer
  520                          | "new" • class_or_interface_type dims array_initializer

    TOK_IDENTIFIER  shift, and go to state 195
    "<"             shift, and go to state 196

    TOK_IDENTIFIER  [reduce using rule 184 (type_arguments.opt)]
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 184 (type_arguments.opt)
    "@"             [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    primitive_type           go to state 197
    class_or_interface_type  go to state 198
    class_type               go to state 199
    interface_type           go to state 111
    type_arguments           go to state 200
    package_name             go to state 114
    type_arguments.opt       go to state 201
    annotation.multiopt      go to state 202


State 96

   25 integral_type: "short" •

    $default  reduce using rule 25 (integral_type)


State 97

  497 field_access: "super" • "." TOK_IDENTIFIER
  505 method_invocation: "super" • "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  513 method_reference: "super" • "::" type_arguments.opt TOK_IDENTIFIER

    "."   shift, and go to state 203
    "::"  shift, and go to state 204


State 98

  620 switch_expression: "switch" • "(" expression ")" switch_block

    "("  shift, and go to state 205


State 99

  472 primary_no_new_array: "this" •

    $default  reduce using rule 472 (primary_no_new_array)


State 100

  483 class_literal: "void" • "." "class"

    "."  shift, and go to state 206


State 101

  321 element_value_array_initializer: "{" • element_valueList.opt com.opt "}"

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "{"             shift, and go to state 101
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 323 (element_valueList.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation                                      go to state 119
    normal_annotation                               go to state 15
    element_value                                   go to state 207
    element_value_array_initializer                 go to state 124
    element_valueList.opt                           go to state 208
    element_valueList                               go to state 209
    marker_annotation                               go to state 16
    single_element_annotation                       go to state 17
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    conditional_expression                          go to state 136
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 102

  605 unary_expression_not_plus_minus: "~" • unary_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    unary_expression                                go to state 210
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 103

   77 method_name: unqualified_method_IDENTIFIER •

    $default  reduce using rule 77 (method_name)


State 104

   41 array_type: primitive_type • dims

    $default  reduce using rule 330 (annotation.multiopt)

    dims                 go to state 211
    annotation.multiopt  go to state 212


State 105

  481 class_literal: numeric_type • dm.multiopt "." "class"

    $default  reduce using rule 485 (dm.multiopt)

    dm.multiopt  go to state 213


State 106

   22 numeric_type: integral_type •

    $default  reduce using rule 22 (numeric_type)


State 107

   23 numeric_type: floating_point_type •

    $default  reduce using rule 23 (numeric_type)


State 108

  512 method_reference: reference_type • "::" type_arguments.opt TOK_IDENTIFIER

    "::"  shift, and go to state 214


State 109

   31 reference_type: class_or_interface_type •
   38 class_type: class_or_interface_type • "." annotation.multiopt type_IDENTIFIER type_arguments.opt
   42 array_type: class_or_interface_type • dims

    "."  shift, and go to state 215

    "@"       reduce using rule 330 (annotation.multiopt)
    "["       reduce using rule 330 (annotation.multiopt)
    $default  reduce using rule 31 (reference_type)

    dims                 go to state 216
    annotation.multiopt  go to state 212


State 110

   34 class_or_interface_type: class_type •
   39 interface_type: class_type •
  515 method_reference: class_type • "::" type_arguments.opt "new"

    "::"  shift, and go to state 217

    "&"       reduce using rule 34 (class_or_interface_type)
    "&"       [reduce using rule 39 (interface_type)]
    ")"       reduce using rule 34 (class_or_interface_type)
    ")"       [reduce using rule 39 (interface_type)]
    "."       reduce using rule 34 (class_or_interface_type)
    "."       [reduce using rule 39 (interface_type)]
    "::"      [reduce using rule 34 (class_or_interface_type)]
    "::"      [reduce using rule 39 (interface_type)]
    "@"       reduce using rule 34 (class_or_interface_type)
    "@"       [reduce using rule 39 (interface_type)]
    "["       reduce using rule 34 (class_or_interface_type)
    "["       [reduce using rule 39 (interface_type)]
    $default  reduce using rule 34 (class_or_interface_type)


State 111

   35 class_or_interface_type: interface_type •

    $default  reduce using rule 35 (class_or_interface_type)


State 112

   32 reference_type: type_variable •
   43 array_type: type_variable • dims

    "@"       reduce using rule 330 (annotation.multiopt)
    "["       reduce using rule 330 (annotation.multiopt)
    $default  reduce using rule 32 (reference_type)

    dims                 go to state 218
    annotation.multiopt  go to state 212


State 113

   33 reference_type: array_type •
  516 method_reference: array_type • "::" "new"

    "::"  shift, and go to state 219

    "::"      [reduce using rule 33 (reference_type)]
    $default  reduce using rule 33 (reference_type)


State 114

   37 class_type: package_name • "." annotation.multiopt type_IDENTIFIER type_arguments.opt
   72 package_name: package_name • "." TOK_IDENTIFIER

    "."  shift, and go to state 220


State 115

  473 primary_no_new_array: type_name • "." "this"
  480 class_literal: type_name • dm.multiopt "." "class"
  498 field_access: type_name • "." "super" "." TOK_IDENTIFIER
  502 method_invocation: type_name • "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  506                  | type_name • "." "super" "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  514 method_reference: type_name • "." "super" "::" type_arguments.opt TOK_IDENTIFIER

    "."  shift, and go to state 221

    "."       [reduce using rule 485 (dm.multiopt)]
    $default  reduce using rule 485 (dm.multiopt)

    dm.multiopt  go to state 222


State 116

  487 class_instance_creation_expression: expression_name • "." unqualified_class_instance_creation_expression
  499 array_access: expression_name • "[" expression "]"
  503 method_invocation: expression_name • "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  510 method_reference: expression_name • "::" type_arguments.opt TOK_IDENTIFIER
  610 postfix_expression: expression_name •

    "."   shift, and go to state 223
    "::"  shift, and go to state 224
    "["   shift, and go to state 225

    $default  reduce using rule 610 (postfix_expression)


State 117

  501 method_invocation: method_name • "(" argument_list.opt ")"

    "("  shift, and go to state 226


State 118

   76 expression_name: ambiguous_name • "." TOK_IDENTIFIER
   81 ambiguous_name: ambiguous_name • "." TOK_IDENTIFIER

    "."  shift, and go to state 227


State 119

  320 element_value: annotation •

    $default  reduce using rule 320 (element_value)


State 120

  311 normal_annotation: "@" type_name "(" element_value_pair_list.opt • ")"

    ")"  shift, and go to state 228


State 121

  312 element_value_pair_list.opt: element_value_pair_list •

    $default  reduce using rule 312 (element_value_pair_list.opt)


State 122

  314 element_value_pair_list: element_value_pair • com_element_value_pair.multiopt

    $default  reduce using rule 316 (com_element_value_pair.multiopt)

    com_element_value_pair.multiopt  go to state 229


State 123

  328 single_element_annotation: "@" type_name "(" element_value • ")"

    ")"  shift, and go to state 230


State 124

  319 element_value: element_value_array_initializer •

    $default  reduce using rule 319 (element_value)


State 125

   20 primitive_type: annotation.multiopt • numeric_type
   21               | annotation.multiopt • "boolean"
   36 class_type: annotation.multiopt • type_IDENTIFIER type_arguments.opt
   40 type_variable: annotation.multiopt • type_IDENTIFIER
  329 annotation.multiopt: annotation.multiopt • annotation

    TOK_IDENTIFIER  shift, and go to state 75
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 231
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "short"         shift, and go to state 96

    type_IDENTIFIER            go to state 232
    numeric_type               go to state 233
    integral_type              go to state 106
    floating_point_type        go to state 107
    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 126

  488 class_instance_creation_expression: primary • "." unqualified_class_instance_creation_expression
  496 field_access: primary • "." TOK_IDENTIFIER
  504 method_invocation: primary • "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  511 method_reference: primary • "::" type_arguments.opt TOK_IDENTIFIER
  609 postfix_expression: primary •

    "."   shift, and go to state 234
    "::"  shift, and go to state 235

    $default  reduce using rule 609 (postfix_expression)


State 127

  468 primary: primary_no_new_array •
  500 array_access: primary_no_new_array • "[" expression "]"

    "["  shift, and go to state 236

    $default  reduce using rule 468 (primary)


State 128

  471 primary_no_new_array: class_literal •

    $default  reduce using rule 471 (primary_no_new_array)


State 129

  475 primary_no_new_array: class_instance_creation_expression •

    $default  reduce using rule 475 (primary_no_new_array)


State 130

  486 class_instance_creation_expression: unqualified_class_instance_creation_expression •

    $default  reduce using rule 486 (class_instance_creation_expression)


State 131

  476 primary_no_new_array: field_access •

    $default  reduce using rule 476 (primary_no_new_array)


State 132

  477 primary_no_new_array: array_access •

    $default  reduce using rule 477 (primary_no_new_array)


State 133

  478 primary_no_new_array: method_invocation •

    $default  reduce using rule 478 (primary_no_new_array)


State 134

  479 primary_no_new_array: method_reference •

    $default  reduce using rule 479 (primary_no_new_array)


State 135

  469 primary: array_creation_expression •

    $default  reduce using rule 469 (primary)


State 136

  318 element_value: conditional_expression •

    $default  reduce using rule 318 (element_value)


State 137

  562 conditional_expression: conditional_or_expression •
  563                       | conditional_or_expression • "?" expression ":" conditional_expression
  564                       | conditional_or_expression • "?" expression ":" lambda_expression
  566 conditional_or_expression: conditional_or_expression • "||" conditional_and_expression

    "?"   shift, and go to state 237
    "||"  shift, and go to state 238

    "?"       [reduce using rule 562 (conditional_expression)]
    "||"      [reduce using rule 562 (conditional_expression)]
    $default  reduce using rule 562 (conditional_expression)


State 138

  565 conditional_or_expression: conditional_and_expression •
  568 conditional_and_expression: conditional_and_expression • "&&" inclusive_or_expression

    "&&"  shift, and go to state 239

    "&&"      [reduce using rule 565 (conditional_or_expression)]
    $default  reduce using rule 565 (conditional_or_expression)


State 139

  567 conditional_and_expression: inclusive_or_expression •
  570 inclusive_or_expression: inclusive_or_expression • "|" exclusive_or_expression

    "|"  shift, and go to state 240

    "|"       [reduce using rule 567 (conditional_and_expression)]
    $default  reduce using rule 567 (conditional_and_expression)


State 140

  569 inclusive_or_expression: exclusive_or_expression •
  572 exclusive_or_expression: exclusive_or_expression • "^" and_expression

    "^"  shift, and go to state 241

    "^"       [reduce using rule 569 (inclusive_or_expression)]
    $default  reduce using rule 569 (inclusive_or_expression)


State 141

  571 exclusive_or_expression: and_expression •
  574 and_expression: and_expression • "&" equality_expression

    "&"  shift, and go to state 242

    "&"       [reduce using rule 571 (exclusive_or_expression)]
    $default  reduce using rule 571 (exclusive_or_expression)


State 142

  573 and_expression: equality_expression •
  576 equality_expression: equality_expression • "==" relational_expression
  577                    | equality_expression • "!=" relational_expression

    "!="  shift, and go to state 243
    "=="  shift, and go to state 244

    "!="      [reduce using rule 573 (and_expression)]
    "=="      [reduce using rule 573 (and_expression)]
    $default  reduce using rule 573 (and_expression)


State 143

  575 equality_expression: relational_expression •
  579 relational_expression: relational_expression • "<" shift_expression
  580                      | relational_expression • ">" shift_expression
  581                      | relational_expression • "<=" shift_expression
  582                      | relational_expression • ">=" shift_expression
  584 instanceof_expression: relational_expression • "instanceof" reference_type
  585                      | relational_expression • "instanceof" pattern

    "<"           shift, and go to state 245
    "<="          shift, and go to state 246
    ">"           shift, and go to state 247
    ">="          shift, and go to state 248
    "instanceof"  shift, and go to state 249

    "<"           [reduce using rule 575 (equality_expression)]
    "<="          [reduce using rule 575 (equality_expression)]
    ">"           [reduce using rule 575 (equality_expression)]
    ">="          [reduce using rule 575 (equality_expression)]
    "instanceof"  [reduce using rule 575 (equality_expression)]
    $default      reduce using rule 575 (equality_expression)


State 144

  583 relational_expression: instanceof_expression •

    $default  reduce using rule 583 (relational_expression)


State 145

  578 relational_expression: shift_expression •
  587 shift_expression: shift_expression • "<<" additive_expression
  588                 | shift_expression • ">>" additive_expression
  589                 | shift_expression • ">>>" additive_expression

    "<<"   shift, and go to state 250
    ">>"   shift, and go to state 251
    ">>>"  shift, and go to state 252

    "<<"      [reduce using rule 578 (relational_expression)]
    ">>"      [reduce using rule 578 (relational_expression)]
    ">>>"     [reduce using rule 578 (relational_expression)]
    $default  reduce using rule 578 (relational_expression)


State 146

  586 shift_expression: additive_expression •
  591 additive_expression: additive_expression • "+" multiplicative_expression
  592                    | additive_expression • "-" multiplicative_expression

    "+"  shift, and go to state 253
    "-"  shift, and go to state 254

    "+"       [reduce using rule 586 (shift_expression)]
    "-"       [reduce using rule 586 (shift_expression)]
    $default  reduce using rule 586 (shift_expression)


State 147

  590 additive_expression: multiplicative_expression •
  594 multiplicative_expression: multiplicative_expression • "*" unary_expression
  595                          | multiplicative_expression • "/" unary_expression
  596                          | multiplicative_expression • "%" unary_expression

    "%"  shift, and go to state 255
    "*"  shift, and go to state 256
    "/"  shift, and go to state 257

    "%"       [reduce using rule 590 (additive_expression)]
    "*"       [reduce using rule 590 (additive_expression)]
    "/"       [reduce using rule 590 (additive_expression)]
    $default  reduce using rule 590 (additive_expression)


State 148

  593 multiplicative_expression: unary_expression •

    $default  reduce using rule 593 (multiplicative_expression)


State 149

  597 unary_expression: pre_increment_expression •

    $default  reduce using rule 597 (unary_expression)


State 150

  598 unary_expression: pre_decrement_expression •

    $default  reduce using rule 598 (unary_expression)


State 151

  601 unary_expression: unary_expression_not_plus_minus •

    $default  reduce using rule 601 (unary_expression)


State 152

  604 unary_expression_not_plus_minus: postfix_expression •
  613 post_increment_expression: postfix_expression • "++"
  614 post_decrement_expression: postfix_expression • "--"

    "++"  shift, and go to state 258
    "--"  shift, and go to state 259

    $default  reduce using rule 604 (unary_expression_not_plus_minus)


State 153

  611 postfix_expression: post_increment_expression •

    $default  reduce using rule 611 (postfix_expression)


State 154

  612 postfix_expression: post_decrement_expression •

    $default  reduce using rule 612 (postfix_expression)


State 155

  607 unary_expression_not_plus_minus: cast_expression •

    $default  reduce using rule 607 (unary_expression_not_plus_minus)


State 156

  608 unary_expression_not_plus_minus: switch_expression •

    $default  reduce using rule 608 (unary_expression_not_plus_minus)


State 157

   18 type_IDENTIFIER: TOK_IDENTIFIER •
   79 package_or_type_name: package_or_type_name "." TOK_IDENTIFIER •

    "."       reduce using rule 18 (type_IDENTIFIER)
    "."       [reduce using rule 79 (package_or_type_name)]
    $default  reduce using rule 18 (type_IDENTIFIER)


State 158

   74 type_name: package_or_type_name "." type_IDENTIFIER •

    $default  reduce using rule 74 (type_name)


State 159

   16 dot_ind.multiopt: dot_ind.multiopt "." • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 260


State 160

   88 package_declaration: package_modifier.multiopt "package" TOK_IDENTIFIER dot_ind.multiopt ";" •

    $default  reduce using rule 88 (package_declaration)


State 161

  100 single_static_import_declaration: "import" "static" type_name "." • TOK_IDENTIFIER ";"
  101 static_import_on_demand_declaration: "import" "static" type_name "." • "*" ";"

    TOK_IDENTIFIER  shift, and go to state 261
    "*"             shift, and go to state 262


State 162

   99 type_import_on_demand_declaration: "import" package_or_type_name "." "*" • ";"

    ";"  shift, and go to state 263


State 163

  108 module_declaration: annotation.multiopt open.opt "module" TOK_IDENTIFIER • dot_ind.multiopt "{" module_directive.multiopt "}"

    $default  reduce using rule 17 (dot_ind.multiopt)

    dot_ind.multiopt  go to state 264


State 164

  295 annotation_interface_declaration: modifier.multiopt "@" "interface" type_IDENTIFIER • annotation_interface_body

    "{"  shift, and go to state 265

    annotation_interface_body  go to state 266


State 165

  138 type_parameters: "<" • type_parameter_list ">"

    "@"  shift, and go to state 11

    "@"       [reduce using rule 50 (type_parameter_modifier.multiopt)]
    $default  reduce using rule 50 (type_parameter_modifier.multiopt)

    type_parameter                    go to state 267
    type_parameter_modifier.multiopt  go to state 268
    type_parameter_modifier           go to state 269
    type_parameter_list               go to state 270
    annotation                        go to state 271
    normal_annotation                 go to state 15
    marker_annotation                 go to state 16
    single_element_annotation         go to state 17


State 166

  129 normal_class_declaration: modifier.multiopt "class" type_IDENTIFIER type_parameters.opt • class_extends.opt class_implements.opt class_permits.opt class_body

    "extends"  shift, and go to state 272

    $default  reduce using rule 133 (class_extends.opt)

    class_extends.opt  go to state 273
    class_extends      go to state 274


State 167

  130 type_parameters.opt: type_parameters •

    $default  reduce using rule 130 (type_parameters.opt)


State 168

  143 class_implements: "implements" • interface_type_list

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    class_or_interface_type  go to state 275
    class_type               go to state 199
    interface_type           go to state 276
    package_name             go to state 114
    interface_type_list      go to state 277
    annotation.multiopt      go to state 278


State 169

  239 enum_declaration: modifier.multiopt "enum" type_IDENTIFIER class_implements.opt • enum_body

    "{"  shift, and go to state 279

    enum_body  go to state 280


State 170

  134 class_implements.opt: class_implements •

    $default  reduce using rule 134 (class_implements.opt)


State 171

  278 normal_interface_declaration: modifier.multiopt "interface" type_IDENTIFIER type_parameters.opt • interface_extends.opt interface_permits.opt interface_body

    "extends"  shift, and go to state 281

    $default  reduce using rule 280 (interface_extends.opt)

    interface_extends.opt  go to state 282
    interface_extends      go to state 283


State 172

  257 record_declaration: modifier.multiopt "record" type_IDENTIFIER type_parameters.opt • record_header class_implements.opt record_body

    "("  shift, and go to state 284

    record_header  go to state 285


State 173

  317 element_value_pair: TOK_IDENTIFIER "=" • element_value

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "{"             shift, and go to state 101
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation                                      go to state 119
    normal_annotation                               go to state 15
    element_value                                   go to state 286
    element_value_array_initializer                 go to state 124
    marker_annotation                               go to state 16
    single_element_annotation                       go to state 17
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    conditional_expression                          go to state 136
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 174

   18 type_IDENTIFIER: TOK_IDENTIFIER •
   19 unqualified_method_IDENTIFIER: TOK_IDENTIFIER •
   71 package_name: TOK_IDENTIFIER •
   75 expression_name: TOK_IDENTIFIER •
   78 package_or_type_name: TOK_IDENTIFIER •
   80 ambiguous_name: TOK_IDENTIFIER •

    "("       reduce using rule 19 (unqualified_method_IDENTIFIER)
    "."       reduce using rule 18 (type_IDENTIFIER)
    "."       [reduce using rule 71 (package_name)]
    "."       [reduce using rule 75 (expression_name)]
    "."       [reduce using rule 78 (package_or_type_name)]
    "."       [reduce using rule 80 (ambiguous_name)]
    "["       reduce using rule 18 (type_IDENTIFIER)
    "["       [reduce using rule 75 (expression_name)]
    $default  reduce using rule 75 (expression_name)


State 175

  606 unary_expression_not_plus_minus: "!" unary_expression •

    $default  reduce using rule 606 (unary_expression_not_plus_minus)


State 176

   18 type_IDENTIFIER: TOK_IDENTIFIER •
   19 unqualified_method_IDENTIFIER: TOK_IDENTIFIER •
   71 package_name: TOK_IDENTIFIER •
   75 expression_name: TOK_IDENTIFIER •
   78 package_or_type_name: TOK_IDENTIFIER •
   80 ambiguous_name: TOK_IDENTIFIER •
  529 lambda_parameters: TOK_IDENTIFIER •

    "("       reduce using rule 19 (unqualified_method_IDENTIFIER)
    "->"      reduce using rule 75 (expression_name)
    "->"      [reduce using rule 529 (lambda_parameters)]
    "."       reduce using rule 18 (type_IDENTIFIER)
    "."       [reduce using rule 71 (package_name)]
    "."       [reduce using rule 75 (expression_name)]
    "."       [reduce using rule 78 (package_or_type_name)]
    "."       [reduce using rule 80 (ambiguous_name)]
    "["       reduce using rule 18 (type_IDENTIFIER)
    "["       [reduce using rule 75 (expression_name)]
    $default  reduce using rule 75 (expression_name)


State 177

  474 primary_no_new_array: "(" • expression ")"
  528 lambda_parameters: "(" • lambda_parameter_list.opt ")"
  615 cast_expression: "(" • primitive_type ")" unary_expression
  616                | "(" • reference_type additional_bound.multiopt ")" unary_expression_not_plus_minus
  617                | "(" • reference_type additional_bound.multiopt ")" lambda_expression

    TOK_IDENTIFIER  shift, and go to state 287
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 211 (variable_modifier.multiopt)]
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    ")"             reduce using rule 531 (lambda_parameter_list.opt)
    "@"             reduce using rule 211 (variable_modifier.multiopt)
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 211 (variable_modifier.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 211 (variable_modifier.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 211 (variable_modifier.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 211 (variable_modifier.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 211 (variable_modifier.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 211 (variable_modifier.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 211 (variable_modifier.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 211 (variable_modifier.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 178
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 179
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    variable_modifier.multiopt                      go to state 288
    variable_arity_parameter                        go to state 289
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 183
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    lambda_parameter_list.opt                       go to state 290
    lambda_parameter_list                           go to state 291
    lambda_parameter                                go to state 292
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 178

   41 array_type: primitive_type • dims
  615 cast_expression: "(" primitive_type • ")" unary_expression

    ")"  shift, and go to state 293

    $default  reduce using rule 330 (annotation.multiopt)

    dims                 go to state 211
    annotation.multiopt  go to state 212


State 179

  512 method_reference: reference_type • "::" type_arguments.opt TOK_IDENTIFIER
  616 cast_expression: "(" reference_type • additional_bound.multiopt ")" unary_expression_not_plus_minus
  617                | "(" reference_type • additional_bound.multiopt ")" lambda_expression

    "::"  shift, and go to state 214

    $default  reduce using rule 619 (additional_bound.multiopt)

    additional_bound.multiopt  go to state 294


State 180

  487 class_instance_creation_expression: expression_name • "." unqualified_class_instance_creation_expression
  499 array_access: expression_name • "[" expression "]"
  503 method_invocation: expression_name • "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  510 method_reference: expression_name • "::" type_arguments.opt TOK_IDENTIFIER
  547 left_hand_side: expression_name •
  610 postfix_expression: expression_name •

    "."   shift, and go to state 223
    "::"  shift, and go to state 224
    "["   shift, and go to state 225

    "%="      reduce using rule 547 (left_hand_side)
    "&="      reduce using rule 547 (left_hand_side)
    "*="      reduce using rule 547 (left_hand_side)
    "+="      reduce using rule 547 (left_hand_side)
    "-="      reduce using rule 547 (left_hand_side)
    "/="      reduce using rule 547 (left_hand_side)
    "<<="     reduce using rule 547 (left_hand_side)
    "="       reduce using rule 547 (left_hand_side)
    ">>="     reduce using rule 547 (left_hand_side)
    ">>>="    reduce using rule 547 (left_hand_side)
    "^="      reduce using rule 547 (left_hand_side)
    "|="      reduce using rule 547 (left_hand_side)
    $default  reduce using rule 610 (postfix_expression)


State 181

  476 primary_no_new_array: field_access •
  548 left_hand_side: field_access •

    "%="      reduce using rule 548 (left_hand_side)
    "&="      reduce using rule 548 (left_hand_side)
    "*="      reduce using rule 548 (left_hand_side)
    "+="      reduce using rule 548 (left_hand_side)
    "-="      reduce using rule 548 (left_hand_side)
    "/="      reduce using rule 548 (left_hand_side)
    "<<="     reduce using rule 548 (left_hand_side)
    "="       reduce using rule 548 (left_hand_side)
    ">>="     reduce using rule 548 (left_hand_side)
    ">>>="    reduce using rule 548 (left_hand_side)
    "^="      reduce using rule 548 (left_hand_side)
    "|="      reduce using rule 548 (left_hand_side)
    $default  reduce using rule 476 (primary_no_new_array)


State 182

  477 primary_no_new_array: array_access •
  549 left_hand_side: array_access •

    "%="      reduce using rule 549 (left_hand_side)
    "&="      reduce using rule 549 (left_hand_side)
    "*="      reduce using rule 549 (left_hand_side)
    "+="      reduce using rule 549 (left_hand_side)
    "-="      reduce using rule 549 (left_hand_side)
    "/="      reduce using rule 549 (left_hand_side)
    "<<="     reduce using rule 549 (left_hand_side)
    "="       reduce using rule 549 (left_hand_side)
    ">>="     reduce using rule 549 (left_hand_side)
    ">>>="    reduce using rule 549 (left_hand_side)
    "^="      reduce using rule 549 (left_hand_side)
    "|="      reduce using rule 549 (left_hand_side)
    $default  reduce using rule 477 (primary_no_new_array)


State 183

  474 primary_no_new_array: "(" expression • ")"

    ")"  shift, and go to state 295


State 184

  525 expression: lambda_expression •

    $default  reduce using rule 525 (expression)


State 185

  527 lambda_expression: lambda_parameters • "->" lambda_body

    "->"  shift, and go to state 296


State 186

  526 expression: assignment_expression •

    $default  reduce using rule 526 (expression)


State 187

  545 assignment_expression: assignment •

    $default  reduce using rule 545 (assignment_expression)


State 188

  546 assignment: left_hand_side • assignment_operator expression

    "%="    shift, and go to state 297
    "&="    shift, and go to state 298
    "*="    shift, and go to state 299
    "+="    shift, and go to state 300
    "-="    shift, and go to state 301
    "/="    shift, and go to state 302
    "<<="   shift, and go to state 303
    "="     shift, and go to state 304
    ">>="   shift, and go to state 305
    ">>>="  shift, and go to state 306
    "^="    shift, and go to state 307
    "|="    shift, and go to state 308

    assignment_operator  go to state 309


State 189

  544 assignment_expression: conditional_expression •

    $default  reduce using rule 544 (assignment_expression)


State 190

  599 unary_expression: "+" unary_expression •

    $default  reduce using rule 599 (unary_expression)


State 191

  602 pre_increment_expression: "++" unary_expression •

    $default  reduce using rule 602 (pre_increment_expression)


State 192

  600 unary_expression: "-" unary_expression •

    $default  reduce using rule 600 (unary_expression)


State 193

  603 pre_decrement_expression: "--" unary_expression •

    $default  reduce using rule 603 (pre_decrement_expression)


State 194

  482 class_literal: "boolean" dm.multiopt • "." "class"
  484 dm.multiopt: dm.multiopt • "[" "]"

    "."  shift, and go to state 310
    "["  shift, and go to state 311


State 195

   71 package_name: TOK_IDENTIFIER •

    $default  reduce using rule 71 (package_name)


State 196

   57 type_arguments: "<" • type_argument_list ">"

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    primitive_type           go to state 104
    reference_type           go to state 312
    class_or_interface_type  go to state 109
    class_type               go to state 199
    interface_type           go to state 111
    type_variable            go to state 112
    array_type               go to state 313
    type_argument_list       go to state 314
    type_argument            go to state 315
    wildcard                 go to state 316
    package_name             go to state 114
    annotation.multiopt      go to state 317


State 197

  517 array_creation_expression: "new" primitive_type • dim_exprs dims.opt
  519                          | "new" primitive_type • dims array_initializer

    $default  reduce using rule 330 (annotation.multiopt)

    dims                 go to state 318
    annotation.multiopt  go to state 319
    dim_exprs            go to state 320
    dim_expr             go to state 321


State 198

   38 class_type: class_or_interface_type • "." annotation.multiopt type_IDENTIFIER type_arguments.opt
  518 array_creation_expression: "new" class_or_interface_type • dim_exprs dims.opt
  520                          | "new" class_or_interface_type • dims array_initializer

    "."  shift, and go to state 215

    $default  reduce using rule 330 (annotation.multiopt)

    dims                 go to state 322
    annotation.multiopt  go to state 319
    dim_exprs            go to state 323
    dim_expr             go to state 321


State 199

   34 class_or_interface_type: class_type •
   39 interface_type: class_type •

    "!="          reduce using rule 34 (class_or_interface_type)
    "!="          [reduce using rule 39 (interface_type)]
    "%"           reduce using rule 34 (class_or_interface_type)
    "%"           [reduce using rule 39 (interface_type)]
    "&"           reduce using rule 34 (class_or_interface_type)
    "&"           [reduce using rule 39 (interface_type)]
    "&&"          reduce using rule 34 (class_or_interface_type)
    "&&"          [reduce using rule 39 (interface_type)]
    ")"           reduce using rule 34 (class_or_interface_type)
    ")"           [reduce using rule 39 (interface_type)]
    "*"           reduce using rule 34 (class_or_interface_type)
    "*"           [reduce using rule 39 (interface_type)]
    "+"           reduce using rule 34 (class_or_interface_type)
    "+"           [reduce using rule 39 (interface_type)]
    ","           reduce using rule 34 (class_or_interface_type)
    ","           [reduce using rule 39 (interface_type)]
    "-"           reduce using rule 34 (class_or_interface_type)
    "-"           [reduce using rule 39 (interface_type)]
    "->"          reduce using rule 34 (class_or_interface_type)
    "->"          [reduce using rule 39 (interface_type)]
    "."           reduce using rule 34 (class_or_interface_type)
    "."           [reduce using rule 39 (interface_type)]
    "/"           reduce using rule 34 (class_or_interface_type)
    "/"           [reduce using rule 39 (interface_type)]
    ":"           reduce using rule 34 (class_or_interface_type)
    ":"           [reduce using rule 39 (interface_type)]
    ";"           reduce using rule 34 (class_or_interface_type)
    ";"           [reduce using rule 39 (interface_type)]
    "<"           reduce using rule 34 (class_or_interface_type)
    "<"           [reduce using rule 39 (interface_type)]
    "<<"          reduce using rule 34 (class_or_interface_type)
    "<<"          [reduce using rule 39 (interface_type)]
    "<="          reduce using rule 34 (class_or_interface_type)
    "<="          [reduce using rule 39 (interface_type)]
    "=="          reduce using rule 34 (class_or_interface_type)
    "=="          [reduce using rule 39 (interface_type)]
    ">"           reduce using rule 34 (class_or_interface_type)
    ">"           [reduce using rule 39 (interface_type)]
    ">="          reduce using rule 34 (class_or_interface_type)
    ">="          [reduce using rule 39 (interface_type)]
    ">>"          reduce using rule 34 (class_or_interface_type)
    ">>"          [reduce using rule 39 (interface_type)]
    ">>>"         reduce using rule 34 (class_or_interface_type)
    ">>>"         [reduce using rule 39 (interface_type)]
    "?"           reduce using rule 34 (class_or_interface_type)
    "?"           [reduce using rule 39 (interface_type)]
    "@"           reduce using rule 34 (class_or_interface_type)
    "@"           [reduce using rule 39 (interface_type)]
    "["           reduce using rule 34 (class_or_interface_type)
    "["           [reduce using rule 39 (interface_type)]
    "]"           reduce using rule 34 (class_or_interface_type)
    "]"           [reduce using rule 39 (interface_type)]
    "^"           reduce using rule 34 (class_or_interface_type)
    "^"           [reduce using rule 39 (interface_type)]
    "instanceof"  reduce using rule 34 (class_or_interface_type)
    "instanceof"  [reduce using rule 39 (interface_type)]
    "permits"     reduce using rule 39 (interface_type)
    "{"           reduce using rule 39 (interface_type)
    "|"           reduce using rule 34 (class_or_interface_type)
    "|"           [reduce using rule 39 (interface_type)]
    "||"          reduce using rule 34 (class_or_interface_type)
    "||"          [reduce using rule 39 (interface_type)]
    "}"           reduce using rule 34 (class_or_interface_type)
    "}"           [reduce using rule 39 (interface_type)]
    $default      reduce using rule 34 (class_or_interface_type)


State 200

  183 type_arguments.opt: type_arguments •

    $default  reduce using rule 183 (type_arguments.opt)


State 201

  489 unqualified_class_instance_creation_expression: "new" type_arguments.opt • class_or_interface_type_to_instantiate "(" argument_list.opt ")" class_body.opt

    $default  reduce using rule 330 (annotation.multiopt)

    annotation.multiopt                     go to state 324
    class_or_interface_type_to_instantiate  go to state 325


State 202

   20 primitive_type: annotation.multiopt • numeric_type
   21               | annotation.multiopt • "boolean"
   36 class_type: annotation.multiopt • type_IDENTIFIER type_arguments.opt
  329 annotation.multiopt: annotation.multiopt • annotation

    TOK_IDENTIFIER  shift, and go to state 75
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 231
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "short"         shift, and go to state 96

    type_IDENTIFIER            go to state 326
    numeric_type               go to state 233
    integral_type              go to state 106
    floating_point_type        go to state 107
    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 203

  497 field_access: "super" "." • TOK_IDENTIFIER
  505 method_invocation: "super" "." • type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 327
    "<"             shift, and go to state 196

    TOK_IDENTIFIER  [reduce using rule 184 (type_arguments.opt)]

    type_arguments      go to state 200
    type_arguments.opt  go to state 328


State 204

  513 method_reference: "super" "::" • type_arguments.opt TOK_IDENTIFIER

    "<"  shift, and go to state 196

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 329


State 205

  620 switch_expression: "switch" "(" • expression ")" switch_block

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 330
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 206

  483 class_literal: "void" "." • "class"

    "class"  shift, and go to state 331


State 207

  324 element_valueList: element_value • com_element_value.multiopt

    $default  reduce using rule 326 (com_element_value.multiopt)

    com_element_value.multiopt  go to state 332


State 208

  321 element_value_array_initializer: "{" element_valueList.opt • com.opt "}"

    ","  shift, and go to state 333

    $default  reduce using rule 242 (com.opt)

    com.opt  go to state 334


State 209

  322 element_valueList.opt: element_valueList •

    $default  reduce using rule 322 (element_valueList.opt)


State 210

  605 unary_expression_not_plus_minus: "~" unary_expression •

    $default  reduce using rule 605 (unary_expression_not_plus_minus)


State 211

   41 array_type: primitive_type dims •

    $default  reduce using rule 41 (array_type)


State 212

   44 dims: annotation.multiopt • "[" "]" an_sp.multiopt
  329 annotation.multiopt: annotation.multiopt • annotation

    "@"  shift, and go to state 11
    "["  shift, and go to state 335

    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 213

  481 class_literal: numeric_type dm.multiopt • "." "class"
  484 dm.multiopt: dm.multiopt • "[" "]"

    "."  shift, and go to state 336
    "["  shift, and go to state 311


State 214

  512 method_reference: reference_type "::" • type_arguments.opt TOK_IDENTIFIER

    "<"  shift, and go to state 196

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 337


State 215

   38 class_type: class_or_interface_type "." • annotation.multiopt type_IDENTIFIER type_arguments.opt

    $default  reduce using rule 330 (annotation.multiopt)

    annotation.multiopt  go to state 338


State 216

   42 array_type: class_or_interface_type dims •

    $default  reduce using rule 42 (array_type)


State 217

  515 method_reference: class_type "::" • type_arguments.opt "new"

    "<"  shift, and go to state 196

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 339


State 218

   43 array_type: type_variable dims •

    $default  reduce using rule 43 (array_type)


State 219

  516 method_reference: array_type "::" • "new"

    "new"  shift, and go to state 340


State 220

   37 class_type: package_name "." • annotation.multiopt type_IDENTIFIER type_arguments.opt
   72 package_name: package_name "." • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 341

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    annotation.multiopt  go to state 342


State 221

  473 primary_no_new_array: type_name "." • "this"
  498 field_access: type_name "." • "super" "." TOK_IDENTIFIER
  502 method_invocation: type_name "." • type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  506                  | type_name "." • "super" "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  514 method_reference: type_name "." • "super" "::" type_arguments.opt TOK_IDENTIFIER

    "<"      shift, and go to state 196
    "super"  shift, and go to state 343
    "this"   shift, and go to state 344

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 345


State 222

  480 class_literal: type_name dm.multiopt • "." "class"
  484 dm.multiopt: dm.multiopt • "[" "]"

    "."  shift, and go to state 346
    "["  shift, and go to state 311


State 223

  487 class_instance_creation_expression: expression_name "." • unqualified_class_instance_creation_expression
  503 method_invocation: expression_name "." • type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"

    "<"    shift, and go to state 196
    "new"  shift, and go to state 347

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments                                  go to state 200
    type_arguments.opt                              go to state 348
    unqualified_class_instance_creation_expression  go to state 349


State 224

  510 method_reference: expression_name "::" • type_arguments.opt TOK_IDENTIFIER

    "<"  shift, and go to state 196

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 350


State 225

  499 array_access: expression_name "[" • expression "]"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 351
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 226

  501 method_invocation: method_name "(" • argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 238 (argument_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    argument_list.opt                               go to state 352
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    argument_list                                   go to state 353
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 354
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 227

   76 expression_name: ambiguous_name "." • TOK_IDENTIFIER
   81 ambiguous_name: ambiguous_name "." • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 355


State 228

  311 normal_annotation: "@" type_name "(" element_value_pair_list.opt ")" •

    $default  reduce using rule 311 (normal_annotation)


State 229

  314 element_value_pair_list: element_value_pair com_element_value_pair.multiopt •
  315 com_element_value_pair.multiopt: com_element_value_pair.multiopt • "," element_value_pair

    ","  shift, and go to state 356

    $default  reduce using rule 314 (element_value_pair_list)


State 230

  328 single_element_annotation: "@" type_name "(" element_value ")" •

    $default  reduce using rule 328 (single_element_annotation)


State 231

   21 primitive_type: annotation.multiopt "boolean" •

    $default  reduce using rule 21 (primitive_type)


State 232

   36 class_type: annotation.multiopt type_IDENTIFIER • type_arguments.opt
   40 type_variable: annotation.multiopt type_IDENTIFIER •

    "<"  shift, and go to state 196

    "!="          reduce using rule 40 (type_variable)
    "!="          [reduce using rule 184 (type_arguments.opt)]
    "%"           reduce using rule 40 (type_variable)
    "%"           [reduce using rule 184 (type_arguments.opt)]
    "&"           reduce using rule 40 (type_variable)
    "&"           [reduce using rule 184 (type_arguments.opt)]
    "&&"          reduce using rule 40 (type_variable)
    "&&"          [reduce using rule 184 (type_arguments.opt)]
    ")"           reduce using rule 40 (type_variable)
    ")"           [reduce using rule 184 (type_arguments.opt)]
    "*"           reduce using rule 40 (type_variable)
    "*"           [reduce using rule 184 (type_arguments.opt)]
    "+"           reduce using rule 40 (type_variable)
    "+"           [reduce using rule 184 (type_arguments.opt)]
    ","           reduce using rule 40 (type_variable)
    ","           [reduce using rule 184 (type_arguments.opt)]
    "-"           reduce using rule 40 (type_variable)
    "-"           [reduce using rule 184 (type_arguments.opt)]
    "->"          reduce using rule 40 (type_variable)
    "->"          [reduce using rule 184 (type_arguments.opt)]
    "."           reduce using rule 184 (type_arguments.opt)
    "/"           reduce using rule 40 (type_variable)
    "/"           [reduce using rule 184 (type_arguments.opt)]
    ":"           reduce using rule 40 (type_variable)
    ":"           [reduce using rule 184 (type_arguments.opt)]
    "::"          reduce using rule 40 (type_variable)
    "::"          [reduce using rule 184 (type_arguments.opt)]
    ";"           reduce using rule 40 (type_variable)
    ";"           [reduce using rule 184 (type_arguments.opt)]
    "<"           [reduce using rule 40 (type_variable)]
    "<"           [reduce using rule 184 (type_arguments.opt)]
    "<<"          reduce using rule 40 (type_variable)
    "<<"          [reduce using rule 184 (type_arguments.opt)]
    "<="          reduce using rule 40 (type_variable)
    "<="          [reduce using rule 184 (type_arguments.opt)]
    "=="          reduce using rule 40 (type_variable)
    "=="          [reduce using rule 184 (type_arguments.opt)]
    ">"           reduce using rule 40 (type_variable)
    ">"           [reduce using rule 184 (type_arguments.opt)]
    ">="          reduce using rule 40 (type_variable)
    ">="          [reduce using rule 184 (type_arguments.opt)]
    ">>"          reduce using rule 40 (type_variable)
    ">>"          [reduce using rule 184 (type_arguments.opt)]
    ">>>"         reduce using rule 40 (type_variable)
    ">>>"         [reduce using rule 184 (type_arguments.opt)]
    "?"           reduce using rule 40 (type_variable)
    "?"           [reduce using rule 184 (type_arguments.opt)]
    "@"           reduce using rule 40 (type_variable)
    "@"           [reduce using rule 184 (type_arguments.opt)]
    "["           reduce using rule 40 (type_variable)
    "["           [reduce using rule 184 (type_arguments.opt)]
    "]"           reduce using rule 40 (type_variable)
    "]"           [reduce using rule 184 (type_arguments.opt)]
    "^"           reduce using rule 40 (type_variable)
    "^"           [reduce using rule 184 (type_arguments.opt)]
    "instanceof"  reduce using rule 40 (type_variable)
    "instanceof"  [reduce using rule 184 (type_arguments.opt)]
    "{"           reduce using rule 40 (type_variable)
    "{"           [reduce using rule 184 (type_arguments.opt)]
    "|"           reduce using rule 40 (type_variable)
    "|"           [reduce using rule 184 (type_arguments.opt)]
    "||"          reduce using rule 40 (type_variable)
    "||"          [reduce using rule 184 (type_arguments.opt)]
    "}"           reduce using rule 40 (type_variable)
    "}"           [reduce using rule 184 (type_arguments.opt)]
    $default      reduce using rule 40 (type_variable)

    type_arguments      go to state 200
    type_arguments.opt  go to state 357


State 233

   20 primitive_type: annotation.multiopt numeric_type •

    $default  reduce using rule 20 (primitive_type)


State 234

  488 class_instance_creation_expression: primary "." • unqualified_class_instance_creation_expression
  496 field_access: primary "." • TOK_IDENTIFIER
  504 method_invocation: primary "." • type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 358
    "<"             shift, and go to state 196
    "new"           shift, and go to state 347

    TOK_IDENTIFIER  [reduce using rule 184 (type_arguments.opt)]

    type_arguments                                  go to state 200
    type_arguments.opt                              go to state 359
    unqualified_class_instance_creation_expression  go to state 360


State 235

  511 method_reference: primary "::" • type_arguments.opt TOK_IDENTIFIER

    "<"  shift, and go to state 196

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 361


State 236

  500 array_access: primary_no_new_array "[" • expression "]"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 362
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 237

  563 conditional_expression: conditional_or_expression "?" • expression ":" conditional_expression
  564                       | conditional_or_expression "?" • expression ":" lambda_expression

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 363
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 238

  566 conditional_or_expression: conditional_or_expression "||" • conditional_and_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    conditional_and_expression                      go to state 364
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 239

  568 conditional_and_expression: conditional_and_expression "&&" • inclusive_or_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    inclusive_or_expression                         go to state 365
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 240

  570 inclusive_or_expression: inclusive_or_expression "|" • exclusive_or_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    exclusive_or_expression                         go to state 366
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 241

  572 exclusive_or_expression: exclusive_or_expression "^" • and_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    and_expression                                  go to state 367
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 242

  574 and_expression: and_expression "&" • equality_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    equality_expression                             go to state 368
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 243

  577 equality_expression: equality_expression "!=" • relational_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    relational_expression                           go to state 369
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 244

  576 equality_expression: equality_expression "==" • relational_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    relational_expression                           go to state 370
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 245

  579 relational_expression: relational_expression "<" • shift_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    shift_expression                                go to state 371
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 246

  581 relational_expression: relational_expression "<=" • shift_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    shift_expression                                go to state 372
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 247

  580 relational_expression: relational_expression ">" • shift_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    shift_expression                                go to state 373
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 248

  582 relational_expression: relational_expression ">=" • shift_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    shift_expression                                go to state 374
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 249

  584 instanceof_expression: relational_expression "instanceof" • reference_type
  585                      | relational_expression "instanceof" • pattern

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 211 (variable_modifier.multiopt)]
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 211 (variable_modifier.multiopt)
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       reduce using rule 211 (variable_modifier.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          reduce using rule 211 (variable_modifier.multiopt)
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          reduce using rule 211 (variable_modifier.multiopt)
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        reduce using rule 211 (variable_modifier.multiopt)
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         reduce using rule 211 (variable_modifier.multiopt)
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           reduce using rule 211 (variable_modifier.multiopt)
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          reduce using rule 211 (variable_modifier.multiopt)
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         reduce using rule 211 (variable_modifier.multiopt)
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 211 (variable_modifier.multiopt)

    primitive_type              go to state 104
    reference_type              go to state 375
    class_or_interface_type     go to state 109
    class_type                  go to state 199
    interface_type              go to state 111
    type_variable               go to state 112
    array_type                  go to state 313
    package_name                go to state 114
    variable_modifier.multiopt  go to state 376
    annotation.multiopt         go to state 125
    local_variable_declaration  go to state 377
    pattern                     go to state 378
    type_pattern                go to state 379


State 250

  587 shift_expression: shift_expression "<<" • additive_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    additive_expression                             go to state 380
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 251

  588 shift_expression: shift_expression ">>" • additive_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    additive_expression                             go to state 381
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 252

  589 shift_expression: shift_expression ">>>" • additive_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    additive_expression                             go to state 382
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 253

  591 additive_expression: additive_expression "+" • multiplicative_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    multiplicative_expression                       go to state 383
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 254

  592 additive_expression: additive_expression "-" • multiplicative_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    multiplicative_expression                       go to state 384
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 255

  596 multiplicative_expression: multiplicative_expression "%" • unary_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    unary_expression                                go to state 385
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 256

  594 multiplicative_expression: multiplicative_expression "*" • unary_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    unary_expression                                go to state 386
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 257

  595 multiplicative_expression: multiplicative_expression "/" • unary_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    unary_expression                                go to state 387
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 258

  613 post_increment_expression: postfix_expression "++" •

    $default  reduce using rule 613 (post_increment_expression)


State 259

  614 post_decrement_expression: postfix_expression "--" •

    $default  reduce using rule 614 (post_decrement_expression)


State 260

   16 dot_ind.multiopt: dot_ind.multiopt "." TOK_IDENTIFIER •

    $default  reduce using rule 16 (dot_ind.multiopt)


State 261

  100 single_static_import_declaration: "import" "static" type_name "." TOK_IDENTIFIER • ";"

    ";"  shift, and go to state 388


State 262

  101 static_import_on_demand_declaration: "import" "static" type_name "." "*" • ";"

    ";"  shift, and go to state 389


State 263

   99 type_import_on_demand_declaration: "import" package_or_type_name "." "*" ";" •

    $default  reduce using rule 99 (type_import_on_demand_declaration)


State 264

   16 dot_ind.multiopt: dot_ind.multiopt • "." TOK_IDENTIFIER
  108 module_declaration: annotation.multiopt open.opt "module" TOK_IDENTIFIER dot_ind.multiopt • "{" module_directive.multiopt "}"

    "."  shift, and go to state 159
    "{"  shift, and go to state 390


State 265

  296 annotation_interface_body: "{" • annotation_interface_member_declaration.multiopt "}"

    $default  reduce using rule 298 (annotation_interface_member_declaration.multiopt)

    annotation_interface_member_declaration.multiopt  go to state 391


State 266

  295 annotation_interface_declaration: modifier.multiopt "@" "interface" type_IDENTIFIER annotation_interface_body •

    $default  reduce using rule 295 (annotation_interface_declaration)


State 267

  139 type_parameter_list: type_parameter • com_type_parameter.multiopt

    $default  reduce using rule 141 (com_type_parameter.multiopt)

    com_type_parameter.multiopt  go to state 392


State 268

   47 type_parameter: type_parameter_modifier.multiopt • type_IDENTIFIER type_bound.opt
   49 type_parameter_modifier.multiopt: type_parameter_modifier.multiopt • type_parameter_modifier

    TOK_IDENTIFIER  shift, and go to state 75
    "@"             shift, and go to state 11

    type_IDENTIFIER            go to state 393
    type_parameter_modifier    go to state 394
    annotation                 go to state 271
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 269

   48 type_parameter_modifier.multiopt: type_parameter_modifier •

    $default  reduce using rule 48 (type_parameter_modifier.multiopt)


State 270

  138 type_parameters: "<" type_parameter_list • ">"

    ">"  shift, and go to state 395


State 271

   51 type_parameter_modifier: annotation •

    $default  reduce using rule 51 (type_parameter_modifier)


State 272

  142 class_extends: "extends" • class_type

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    class_or_interface_type  go to state 275
    class_type               go to state 396
    interface_type           go to state 111
    package_name             go to state 114
    annotation.multiopt      go to state 278


State 273

  129 normal_class_declaration: modifier.multiopt "class" type_IDENTIFIER type_parameters.opt class_extends.opt • class_implements.opt class_permits.opt class_body

    "implements"  shift, and go to state 168

    $default  reduce using rule 135 (class_implements.opt)

    class_implements.opt  go to state 397
    class_implements      go to state 170


State 274

  132 class_extends.opt: class_extends •

    $default  reduce using rule 132 (class_extends.opt)


State 275

   38 class_type: class_or_interface_type • "." annotation.multiopt type_IDENTIFIER type_arguments.opt

    "."  shift, and go to state 215


State 276

   35 class_or_interface_type: interface_type •
  144 interface_type_list: interface_type • com_interface_type.multiopt

    "."       reduce using rule 35 (class_or_interface_type)
    $default  reduce using rule 146 (com_interface_type.multiopt)

    com_interface_type.multiopt  go to state 398


State 277

  143 class_implements: "implements" interface_type_list •

    $default  reduce using rule 143 (class_implements)


State 278

   36 class_type: annotation.multiopt • type_IDENTIFIER type_arguments.opt
  329 annotation.multiopt: annotation.multiopt • annotation

    TOK_IDENTIFIER  shift, and go to state 75
    "@"             shift, and go to state 11

    type_IDENTIFIER            go to state 326
    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 279

  240 enum_body: "{" • enum_constant_list.opt com.opt enum_body_declarations.opt "}"

    TOK_IDENTIFIER  reduce using rule 252 (enum_modifier.multiopt)
    "@"             reduce using rule 252 (enum_modifier.multiopt)
    $default        reduce using rule 246 (enum_constant_list.opt)

    enum_constant_list.opt  go to state 399
    enum_constant_list      go to state 400
    enum_constant           go to state 401
    enum_modifier.multiopt  go to state 402


State 280

  239 enum_declaration: modifier.multiopt "enum" type_IDENTIFIER class_implements.opt enum_body •

    $default  reduce using rule 239 (enum_declaration)


State 281

  283 interface_extends: "extends" • interface_type_list

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    class_or_interface_type  go to state 275
    class_type               go to state 199
    interface_type           go to state 276
    package_name             go to state 114
    interface_type_list      go to state 403
    annotation.multiopt      go to state 278


State 282

  278 normal_interface_declaration: modifier.multiopt "interface" type_IDENTIFIER type_parameters.opt interface_extends.opt • interface_permits.opt interface_body

    "permits"  shift, and go to state 404

    $default  reduce using rule 282 (interface_permits.opt)

    interface_permits.opt  go to state 405
    interface_permits      go to state 406


State 283

  279 interface_extends.opt: interface_extends •

    $default  reduce using rule 279 (interface_extends.opt)


State 284

  258 record_header: "(" • record_component_list.opt ")"

    ")"       reduce using rule 260 (record_component_list.opt)
    $default  reduce using rule 267 (record_component_modifier.multiopt)

    record_component_list.opt           go to state 407
    record_component_list               go to state 408
    record_component                    go to state 409
    record_component_modifier.multiopt  go to state 410
    variable_arity_record_component     go to state 411


State 285

  257 record_declaration: modifier.multiopt "record" type_IDENTIFIER type_parameters.opt record_header • class_implements.opt record_body

    "implements"  shift, and go to state 168

    $default  reduce using rule 135 (class_implements.opt)

    class_implements.opt  go to state 412
    class_implements      go to state 170


State 286

  317 element_value_pair: TOK_IDENTIFIER "=" element_value •

    $default  reduce using rule 317 (element_value_pair)


State 287

   18 type_IDENTIFIER: TOK_IDENTIFIER •
   19 unqualified_method_IDENTIFIER: TOK_IDENTIFIER •
   71 package_name: TOK_IDENTIFIER •
   75 expression_name: TOK_IDENTIFIER •
   78 package_or_type_name: TOK_IDENTIFIER •
   80 ambiguous_name: TOK_IDENTIFIER •
  529 lambda_parameters: TOK_IDENTIFIER •
  533 lambda_parameter_list: TOK_IDENTIFIER • com_IDENTIFIER.multiopt

    "("       reduce using rule 19 (unqualified_method_IDENTIFIER)
    ")"       reduce using rule 75 (expression_name)
    ")"       [reduce using rule 535 (com_IDENTIFIER.multiopt)]
    ","       reduce using rule 535 (com_IDENTIFIER.multiopt)
    "->"      reduce using rule 529 (lambda_parameters)
    "."       reduce using rule 18 (type_IDENTIFIER)
    "."       [reduce using rule 71 (package_name)]
    "."       [reduce using rule 75 (expression_name)]
    "."       [reduce using rule 78 (package_or_type_name)]
    "."       [reduce using rule 80 (ambiguous_name)]
    "["       reduce using rule 18 (type_IDENTIFIER)
    "["       [reduce using rule 75 (expression_name)]
    $default  reduce using rule 75 (expression_name)

    com_IDENTIFIER.multiopt  go to state 413


State 288

  210 variable_modifier.multiopt: variable_modifier.multiopt • variable_modifier
  212 variable_arity_parameter: variable_modifier.multiopt • unann_type annotation.multiopt "..." TOK_IDENTIFIER
  538 lambda_parameter: variable_modifier.multiopt • lambda_parameter_type variable_declarator_id

    TOK_IDENTIFIER  shift, and go to state 414
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 415
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "final"         shift, and go to state 416
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "short"         shift, and go to state 96
    "var"           shift, and go to state 417

    type_IDENTIFIER                go to state 418
    numeric_type                   go to state 419
    integral_type                  go to state 106
    floating_point_type            go to state 107
    package_name                   go to state 420
    unann_type                     go to state 421
    unann_primitive_type           go to state 422
    unann_reference_type           go to state 423
    unann_class_or_interface_type  go to state 424
    unann_class_type               go to state 425
    unann_interface_type           go to state 426
    unann_type_variable            go to state 427
    unann_array_type               go to state 428
    variable_modifier              go to state 429
    annotation                     go to state 430
    normal_annotation              go to state 15
    marker_annotation              go to state 16
    single_element_annotation      go to state 17
    lambda_parameter_type          go to state 431


State 289

  539 lambda_parameter: variable_arity_parameter •

    $default  reduce using rule 539 (lambda_parameter)


State 290

  528 lambda_parameters: "(" lambda_parameter_list.opt • ")"

    ")"  shift, and go to state 432


State 291

  530 lambda_parameter_list.opt: lambda_parameter_list •

    $default  reduce using rule 530 (lambda_parameter_list.opt)


State 292

  532 lambda_parameter_list: lambda_parameter • com_lambda_parameter.multiopt

    $default  reduce using rule 537 (com_lambda_parameter.multiopt)

    com_lambda_parameter.multiopt  go to state 433


State 293

  615 cast_expression: "(" primitive_type ")" • unary_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    unary_expression                                go to state 434
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 294

  616 cast_expression: "(" reference_type additional_bound.multiopt • ")" unary_expression_not_plus_minus
  617                | "(" reference_type additional_bound.multiopt • ")" lambda_expression
  618 additional_bound.multiopt: additional_bound.multiopt • additional_bound

    "&"  shift, and go to state 435
    ")"  shift, and go to state 436

    additional_bound  go to state 437


State 295

  474 primary_no_new_array: "(" expression ")" •

    $default  reduce using rule 474 (primary_no_new_array)


State 296

  527 lambda_expression: lambda_parameters "->" • lambda_body

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "{"             shift, and go to state 438
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 439
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 440
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    lambda_body                                     go to state 441
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 297

  553 assignment_operator: "%=" •

    $default  reduce using rule 553 (assignment_operator)


State 298

  559 assignment_operator: "&=" •

    $default  reduce using rule 559 (assignment_operator)


State 299

  551 assignment_operator: "*=" •

    $default  reduce using rule 551 (assignment_operator)


State 300

  554 assignment_operator: "+=" •

    $default  reduce using rule 554 (assignment_operator)


State 301

  555 assignment_operator: "-=" •

    $default  reduce using rule 555 (assignment_operator)


State 302

  552 assignment_operator: "/=" •

    $default  reduce using rule 552 (assignment_operator)


State 303

  556 assignment_operator: "<<=" •

    $default  reduce using rule 556 (assignment_operator)


State 304

  550 assignment_operator: "=" •

    $default  reduce using rule 550 (assignment_operator)


State 305

  557 assignment_operator: ">>=" •

    $default  reduce using rule 557 (assignment_operator)


State 306

  558 assignment_operator: ">>>=" •

    $default  reduce using rule 558 (assignment_operator)


State 307

  560 assignment_operator: "^=" •

    $default  reduce using rule 560 (assignment_operator)


State 308

  561 assignment_operator: "|=" •

    $default  reduce using rule 561 (assignment_operator)


State 309

  546 assignment: left_hand_side assignment_operator • expression

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 442
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 310

  482 class_literal: "boolean" dm.multiopt "." • "class"

    "class"  shift, and go to state 443


State 311

  484 dm.multiopt: dm.multiopt "[" • "]"

    "]"  shift, and go to state 444


State 312

   62 type_argument: reference_type •

    $default  reduce using rule 62 (type_argument)


State 313

   33 reference_type: array_type •

    $default  reduce using rule 33 (reference_type)


State 314

   57 type_arguments: "<" type_argument_list • ">"

    ">"  shift, and go to state 445


State 315

   58 type_argument_list: type_argument • type_argument.multiopt

    ","  shift, and go to state 446

    ","       [reduce using rule 61 (type_argument.multiopt)]
    $default  reduce using rule 61 (type_argument.multiopt)

    type_argument.multiopt  go to state 447


State 316

   63 type_argument: wildcard •

    $default  reduce using rule 63 (type_argument)


State 317

   20 primitive_type: annotation.multiopt • numeric_type
   21               | annotation.multiopt • "boolean"
   36 class_type: annotation.multiopt • type_IDENTIFIER type_arguments.opt
   40 type_variable: annotation.multiopt • type_IDENTIFIER
   64 wildcard: annotation.multiopt • "?" wildcard_bounds.opt
  329 annotation.multiopt: annotation.multiopt • annotation

    TOK_IDENTIFIER  shift, and go to state 75
    "?"             shift, and go to state 448
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 231
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "short"         shift, and go to state 96

    type_IDENTIFIER            go to state 232
    numeric_type               go to state 233
    integral_type              go to state 106
    floating_point_type        go to state 107
    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 318

  519 array_creation_expression: "new" primitive_type dims • array_initializer

    "{"  shift, and go to state 449

    array_initializer  go to state 450


State 319

   44 dims: annotation.multiopt • "[" "]" an_sp.multiopt
  329 annotation.multiopt: annotation.multiopt • annotation
  524 dim_expr: annotation.multiopt • "[" expression "]"

    "@"  shift, and go to state 11
    "["  shift, and go to state 451

    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 320

  517 array_creation_expression: "new" primitive_type dim_exprs • dims.opt

    "@"       reduce using rule 330 (annotation.multiopt)
    "["       reduce using rule 330 (annotation.multiopt)
    $default  reduce using rule 168 (dims.opt)

    dims                 go to state 452
    dims.opt             go to state 453
    annotation.multiopt  go to state 212


State 321

  521 dim_exprs: dim_expr • dim_expr.multiopt

    $default  reduce using rule 523 (dim_expr.multiopt)

    dim_expr.multiopt  go to state 454


State 322

  520 array_creation_expression: "new" class_or_interface_type dims • array_initializer

    "{"  shift, and go to state 449

    array_initializer  go to state 455


State 323

  518 array_creation_expression: "new" class_or_interface_type dim_exprs • dims.opt

    "@"       reduce using rule 330 (annotation.multiopt)
    "["       reduce using rule 330 (annotation.multiopt)
    $default  reduce using rule 168 (dims.opt)

    dims                 go to state 452
    dims.opt             go to state 456
    annotation.multiopt  go to state 212


State 324

  329 annotation.multiopt: annotation.multiopt • annotation
  490 class_or_interface_type_to_instantiate: annotation.multiopt • TOK_IDENTIFIER dot_annotation.multiopt_IDENTIFIER.multiopt type_arguments_or_diamond.opt

    TOK_IDENTIFIER  shift, and go to state 457
    "@"             shift, and go to state 11

    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 325

  489 unqualified_class_instance_creation_expression: "new" type_arguments.opt class_or_interface_type_to_instantiate • "(" argument_list.opt ")" class_body.opt

    "("  shift, and go to state 458


State 326

   36 class_type: annotation.multiopt type_IDENTIFIER • type_arguments.opt

    "<"  shift, and go to state 196

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 357


State 327

  497 field_access: "super" "." TOK_IDENTIFIER •

    $default  reduce using rule 497 (field_access)


State 328

  505 method_invocation: "super" "." type_arguments.opt • TOK_IDENTIFIER "(" argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 459


State 329

  513 method_reference: "super" "::" type_arguments.opt • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 460


State 330

  620 switch_expression: "switch" "(" expression • ")" switch_block

    ")"  shift, and go to state 461


State 331

  483 class_literal: "void" "." "class" •

    $default  reduce using rule 483 (class_literal)


State 332

  324 element_valueList: element_value com_element_value.multiopt •
  325 com_element_value.multiopt: com_element_value.multiopt • "," element_value

    ","  shift, and go to state 462

    ","       [reduce using rule 324 (element_valueList)]
    $default  reduce using rule 324 (element_valueList)


State 333

  241 com.opt: "," •

    $default  reduce using rule 241 (com.opt)


State 334

  321 element_value_array_initializer: "{" element_valueList.opt com.opt • "}"

    "}"  shift, and go to state 463


State 335

   44 dims: annotation.multiopt "[" • "]" an_sp.multiopt

    "]"  shift, and go to state 464


State 336

  481 class_literal: numeric_type dm.multiopt "." • "class"

    "class"  shift, and go to state 465


State 337

  512 method_reference: reference_type "::" type_arguments.opt • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 466


State 338

   38 class_type: class_or_interface_type "." annotation.multiopt • type_IDENTIFIER type_arguments.opt
  329 annotation.multiopt: annotation.multiopt • annotation

    TOK_IDENTIFIER  shift, and go to state 75
    "@"             shift, and go to state 11

    type_IDENTIFIER            go to state 467
    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 339

  515 method_reference: class_type "::" type_arguments.opt • "new"

    "new"  shift, and go to state 468


State 340

  516 method_reference: array_type "::" "new" •

    $default  reduce using rule 516 (method_reference)


State 341

   72 package_name: package_name "." TOK_IDENTIFIER •

    $default  reduce using rule 72 (package_name)


State 342

   37 class_type: package_name "." annotation.multiopt • type_IDENTIFIER type_arguments.opt
  329 annotation.multiopt: annotation.multiopt • annotation

    TOK_IDENTIFIER  shift, and go to state 75
    "@"             shift, and go to state 11

    type_IDENTIFIER            go to state 469
    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 343

  498 field_access: type_name "." "super" • "." TOK_IDENTIFIER
  506 method_invocation: type_name "." "super" • "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  514 method_reference: type_name "." "super" • "::" type_arguments.opt TOK_IDENTIFIER

    "."   shift, and go to state 470
    "::"  shift, and go to state 471


State 344

  473 primary_no_new_array: type_name "." "this" •

    $default  reduce using rule 473 (primary_no_new_array)


State 345

  502 method_invocation: type_name "." type_arguments.opt • TOK_IDENTIFIER "(" argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 472


State 346

  480 class_literal: type_name dm.multiopt "." • "class"

    "class"  shift, and go to state 473


State 347

  489 unqualified_class_instance_creation_expression: "new" • type_arguments.opt class_or_interface_type_to_instantiate "(" argument_list.opt ")" class_body.opt

    "<"  shift, and go to state 196

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 201


State 348

  503 method_invocation: expression_name "." type_arguments.opt • TOK_IDENTIFIER "(" argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 474


State 349

  487 class_instance_creation_expression: expression_name "." unqualified_class_instance_creation_expression •

    $default  reduce using rule 487 (class_instance_creation_expression)


State 350

  510 method_reference: expression_name "::" type_arguments.opt • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 475


State 351

  499 array_access: expression_name "[" expression • "]"

    "]"  shift, and go to state 476


State 352

  501 method_invocation: method_name "(" argument_list.opt • ")"

    ")"  shift, and go to state 477


State 353

  237 argument_list.opt: argument_list •

    $default  reduce using rule 237 (argument_list.opt)


State 354

  507 argument_list: expression • com_expression.multiopt

    $default  reduce using rule 509 (com_expression.multiopt)

    com_expression.multiopt  go to state 478


State 355

   76 expression_name: ambiguous_name "." TOK_IDENTIFIER •
   81 ambiguous_name: ambiguous_name "." TOK_IDENTIFIER •

    "."       reduce using rule 76 (expression_name)
    "."       [reduce using rule 81 (ambiguous_name)]
    $default  reduce using rule 76 (expression_name)


State 356

  315 com_element_value_pair.multiopt: com_element_value_pair.multiopt "," • element_value_pair

    TOK_IDENTIFIER  shift, and go to state 479

    element_value_pair  go to state 480


State 357

   36 class_type: annotation.multiopt type_IDENTIFIER type_arguments.opt •

    $default  reduce using rule 36 (class_type)


State 358

  496 field_access: primary "." TOK_IDENTIFIER •

    $default  reduce using rule 496 (field_access)


State 359

  504 method_invocation: primary "." type_arguments.opt • TOK_IDENTIFIER "(" argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 481


State 360

  488 class_instance_creation_expression: primary "." unqualified_class_instance_creation_expression •

    $default  reduce using rule 488 (class_instance_creation_expression)


State 361

  511 method_reference: primary "::" type_arguments.opt • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 482


State 362

  500 array_access: primary_no_new_array "[" expression • "]"

    "]"  shift, and go to state 483


State 363

  563 conditional_expression: conditional_or_expression "?" expression • ":" conditional_expression
  564                       | conditional_or_expression "?" expression • ":" lambda_expression

    ":"  shift, and go to state 484


State 364

  566 conditional_or_expression: conditional_or_expression "||" conditional_and_expression •
  568 conditional_and_expression: conditional_and_expression • "&&" inclusive_or_expression

    "&&"  shift, and go to state 239

    "&&"      [reduce using rule 566 (conditional_or_expression)]
    $default  reduce using rule 566 (conditional_or_expression)


State 365

  568 conditional_and_expression: conditional_and_expression "&&" inclusive_or_expression •
  570 inclusive_or_expression: inclusive_or_expression • "|" exclusive_or_expression

    "|"  shift, and go to state 240

    "|"       [reduce using rule 568 (conditional_and_expression)]
    $default  reduce using rule 568 (conditional_and_expression)


State 366

  570 inclusive_or_expression: inclusive_or_expression "|" exclusive_or_expression •
  572 exclusive_or_expression: exclusive_or_expression • "^" and_expression

    "^"  shift, and go to state 241

    "^"       [reduce using rule 570 (inclusive_or_expression)]
    $default  reduce using rule 570 (inclusive_or_expression)


State 367

  572 exclusive_or_expression: exclusive_or_expression "^" and_expression •
  574 and_expression: and_expression • "&" equality_expression

    "&"  shift, and go to state 242

    "&"       [reduce using rule 572 (exclusive_or_expression)]
    $default  reduce using rule 572 (exclusive_or_expression)


State 368

  574 and_expression: and_expression "&" equality_expression •
  576 equality_expression: equality_expression • "==" relational_expression
  577                    | equality_expression • "!=" relational_expression

    "!="  shift, and go to state 243
    "=="  shift, and go to state 244

    "!="      [reduce using rule 574 (and_expression)]
    "=="      [reduce using rule 574 (and_expression)]
    $default  reduce using rule 574 (and_expression)


State 369

  577 equality_expression: equality_expression "!=" relational_expression •
  579 relational_expression: relational_expression • "<" shift_expression
  580                      | relational_expression • ">" shift_expression
  581                      | relational_expression • "<=" shift_expression
  582                      | relational_expression • ">=" shift_expression
  584 instanceof_expression: relational_expression • "instanceof" reference_type
  585                      | relational_expression • "instanceof" pattern

    "<"           shift, and go to state 245
    "<="          shift, and go to state 246
    ">"           shift, and go to state 247
    ">="          shift, and go to state 248
    "instanceof"  shift, and go to state 249

    "<"           [reduce using rule 577 (equality_expression)]
    "<="          [reduce using rule 577 (equality_expression)]
    ">"           [reduce using rule 577 (equality_expression)]
    ">="          [reduce using rule 577 (equality_expression)]
    "instanceof"  [reduce using rule 577 (equality_expression)]
    $default      reduce using rule 577 (equality_expression)


State 370

  576 equality_expression: equality_expression "==" relational_expression •
  579 relational_expression: relational_expression • "<" shift_expression
  580                      | relational_expression • ">" shift_expression
  581                      | relational_expression • "<=" shift_expression
  582                      | relational_expression • ">=" shift_expression
  584 instanceof_expression: relational_expression • "instanceof" reference_type
  585                      | relational_expression • "instanceof" pattern

    "<"           shift, and go to state 245
    "<="          shift, and go to state 246
    ">"           shift, and go to state 247
    ">="          shift, and go to state 248
    "instanceof"  shift, and go to state 249

    "<"           [reduce using rule 576 (equality_expression)]
    "<="          [reduce using rule 576 (equality_expression)]
    ">"           [reduce using rule 576 (equality_expression)]
    ">="          [reduce using rule 576 (equality_expression)]
    "instanceof"  [reduce using rule 576 (equality_expression)]
    $default      reduce using rule 576 (equality_expression)


State 371

  579 relational_expression: relational_expression "<" shift_expression •
  587 shift_expression: shift_expression • "<<" additive_expression
  588                 | shift_expression • ">>" additive_expression
  589                 | shift_expression • ">>>" additive_expression

    "<<"   shift, and go to state 250
    ">>"   shift, and go to state 251
    ">>>"  shift, and go to state 252

    "<<"      [reduce using rule 579 (relational_expression)]
    ">>"      [reduce using rule 579 (relational_expression)]
    ">>>"     [reduce using rule 579 (relational_expression)]
    $default  reduce using rule 579 (relational_expression)


State 372

  581 relational_expression: relational_expression "<=" shift_expression •
  587 shift_expression: shift_expression • "<<" additive_expression
  588                 | shift_expression • ">>" additive_expression
  589                 | shift_expression • ">>>" additive_expression

    "<<"   shift, and go to state 250
    ">>"   shift, and go to state 251
    ">>>"  shift, and go to state 252

    "<<"      [reduce using rule 581 (relational_expression)]
    ">>"      [reduce using rule 581 (relational_expression)]
    ">>>"     [reduce using rule 581 (relational_expression)]
    $default  reduce using rule 581 (relational_expression)


State 373

  580 relational_expression: relational_expression ">" shift_expression •
  587 shift_expression: shift_expression • "<<" additive_expression
  588                 | shift_expression • ">>" additive_expression
  589                 | shift_expression • ">>>" additive_expression

    "<<"   shift, and go to state 250
    ">>"   shift, and go to state 251
    ">>>"  shift, and go to state 252

    "<<"      [reduce using rule 580 (relational_expression)]
    ">>"      [reduce using rule 580 (relational_expression)]
    ">>>"     [reduce using rule 580 (relational_expression)]
    $default  reduce using rule 580 (relational_expression)


State 374

  582 relational_expression: relational_expression ">=" shift_expression •
  587 shift_expression: shift_expression • "<<" additive_expression
  588                 | shift_expression • ">>" additive_expression
  589                 | shift_expression • ">>>" additive_expression

    "<<"   shift, and go to state 250
    ">>"   shift, and go to state 251
    ">>>"  shift, and go to state 252

    "<<"      [reduce using rule 582 (relational_expression)]
    ">>"      [reduce using rule 582 (relational_expression)]
    ">>>"     [reduce using rule 582 (relational_expression)]
    $default  reduce using rule 582 (relational_expression)


State 375

  584 instanceof_expression: relational_expression "instanceof" reference_type •

    $default  reduce using rule 584 (instanceof_expression)


State 376

  210 variable_modifier.multiopt: variable_modifier.multiopt • variable_modifier
  347 local_variable_declaration: variable_modifier.multiopt • local_variable_type variable_declarator_list

    TOK_IDENTIFIER  shift, and go to state 414
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 415
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "final"         shift, and go to state 416
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "short"         shift, and go to state 96
    "var"           shift, and go to state 485

    type_IDENTIFIER                go to state 418
    numeric_type                   go to state 419
    integral_type                  go to state 106
    floating_point_type            go to state 107
    package_name                   go to state 420
    unann_type                     go to state 486
    unann_primitive_type           go to state 422
    unann_reference_type           go to state 423
    unann_class_or_interface_type  go to state 424
    unann_class_type               go to state 425
    unann_interface_type           go to state 426
    unann_type_variable            go to state 427
    unann_array_type               go to state 428
    variable_modifier              go to state 429
    annotation                     go to state 430
    normal_annotation              go to state 15
    marker_annotation              go to state 16
    single_element_annotation      go to state 17
    local_variable_type            go to state 487


State 377

  467 type_pattern: local_variable_declaration •

    $default  reduce using rule 467 (type_pattern)


State 378

  585 instanceof_expression: relational_expression "instanceof" pattern •

    $default  reduce using rule 585 (instanceof_expression)


State 379

  466 pattern: type_pattern •

    $default  reduce using rule 466 (pattern)


State 380

  587 shift_expression: shift_expression "<<" additive_expression •
  591 additive_expression: additive_expression • "+" multiplicative_expression
  592                    | additive_expression • "-" multiplicative_expression

    "+"  shift, and go to state 253
    "-"  shift, and go to state 254

    "+"       [reduce using rule 587 (shift_expression)]
    "-"       [reduce using rule 587 (shift_expression)]
    $default  reduce using rule 587 (shift_expression)


State 381

  588 shift_expression: shift_expression ">>" additive_expression •
  591 additive_expression: additive_expression • "+" multiplicative_expression
  592                    | additive_expression • "-" multiplicative_expression

    "+"  shift, and go to state 253
    "-"  shift, and go to state 254

    "+"       [reduce using rule 588 (shift_expression)]
    "-"       [reduce using rule 588 (shift_expression)]
    $default  reduce using rule 588 (shift_expression)


State 382

  589 shift_expression: shift_expression ">>>" additive_expression •
  591 additive_expression: additive_expression • "+" multiplicative_expression
  592                    | additive_expression • "-" multiplicative_expression

    "+"  shift, and go to state 253
    "-"  shift, and go to state 254

    "+"       [reduce using rule 589 (shift_expression)]
    "-"       [reduce using rule 589 (shift_expression)]
    $default  reduce using rule 589 (shift_expression)


State 383

  591 additive_expression: additive_expression "+" multiplicative_expression •
  594 multiplicative_expression: multiplicative_expression • "*" unary_expression
  595                          | multiplicative_expression • "/" unary_expression
  596                          | multiplicative_expression • "%" unary_expression

    "%"  shift, and go to state 255
    "*"  shift, and go to state 256
    "/"  shift, and go to state 257

    "%"       [reduce using rule 591 (additive_expression)]
    "*"       [reduce using rule 591 (additive_expression)]
    "/"       [reduce using rule 591 (additive_expression)]
    $default  reduce using rule 591 (additive_expression)


State 384

  592 additive_expression: additive_expression "-" multiplicative_expression •
  594 multiplicative_expression: multiplicative_expression • "*" unary_expression
  595                          | multiplicative_expression • "/" unary_expression
  596                          | multiplicative_expression • "%" unary_expression

    "%"  shift, and go to state 255
    "*"  shift, and go to state 256
    "/"  shift, and go to state 257

    "%"       [reduce using rule 592 (additive_expression)]
    "*"       [reduce using rule 592 (additive_expression)]
    "/"       [reduce using rule 592 (additive_expression)]
    $default  reduce using rule 592 (additive_expression)


State 385

  596 multiplicative_expression: multiplicative_expression "%" unary_expression •

    $default  reduce using rule 596 (multiplicative_expression)


State 386

  594 multiplicative_expression: multiplicative_expression "*" unary_expression •

    $default  reduce using rule 594 (multiplicative_expression)


State 387

  595 multiplicative_expression: multiplicative_expression "/" unary_expression •

    $default  reduce using rule 595 (multiplicative_expression)


State 388

  100 single_static_import_declaration: "import" "static" type_name "." TOK_IDENTIFIER ";" •

    $default  reduce using rule 100 (single_static_import_declaration)


State 389

  101 static_import_on_demand_declaration: "import" "static" type_name "." "*" ";" •

    $default  reduce using rule 101 (static_import_on_demand_declaration)


State 390

  108 module_declaration: annotation.multiopt open.opt "module" TOK_IDENTIFIER dot_ind.multiopt "{" • module_directive.multiopt "}"

    "exports"   shift, and go to state 488
    "opens"     shift, and go to state 489
    "provides"  shift, and go to state 490
    "requires"  shift, and go to state 491
    "uses"      shift, and go to state 492

    "exports"   [reduce using rule 113 (module_directive.multiopt)]
    "opens"     [reduce using rule 113 (module_directive.multiopt)]
    "provides"  [reduce using rule 113 (module_directive.multiopt)]
    "requires"  [reduce using rule 113 (module_directive.multiopt)]
    "uses"      [reduce using rule 113 (module_directive.multiopt)]
    $default    reduce using rule 113 (module_directive.multiopt)

    module_directive.multiopt  go to state 493
    module_directive           go to state 494


State 391

  296 annotation_interface_body: "{" annotation_interface_member_declaration.multiopt • "}"
  297 annotation_interface_member_declaration.multiopt: annotation_interface_member_declaration.multiopt • annotation_interface_member_declaration

    ";"  shift, and go to state 495
    "}"  shift, and go to state 496

    $default  reduce using rule 3 (modifier.multiopt)

    modifier.multiopt                         go to state 497
    class_declaration                         go to state 498
    normal_class_declaration                  go to state 31
    enum_declaration                          go to state 32
    record_declaration                        go to state 33
    interface_declaration                     go to state 499
    normal_interface_declaration              go to state 35
    constant_declaration                      go to state 500
    annotation_interface_declaration          go to state 36
    annotation_interface_member_declaration   go to state 501
    annotation_interface_element_declaration  go to state 502


State 392

  139 type_parameter_list: type_parameter com_type_parameter.multiopt •
  140 com_type_parameter.multiopt: com_type_parameter.multiopt • "," type_parameter

    ","  shift, and go to state 503

    $default  reduce using rule 139 (type_parameter_list)


State 393

   47 type_parameter: type_parameter_modifier.multiopt type_IDENTIFIER • type_bound.opt

    "extends"  shift, and go to state 504

    $default  reduce using rule 53 (type_bound.opt)

    type_bound.opt  go to state 505
    type_bound      go to state 506


State 394

   49 type_parameter_modifier.multiopt: type_parameter_modifier.multiopt type_parameter_modifier •

    $default  reduce using rule 49 (type_parameter_modifier.multiopt)


State 395

  138 type_parameters: "<" type_parameter_list ">" •

    $default  reduce using rule 138 (type_parameters)


State 396

   34 class_or_interface_type: class_type •
   39 interface_type: class_type •
  142 class_extends: "extends" class_type •

    "."       reduce using rule 34 (class_or_interface_type)
    "."       [reduce using rule 39 (interface_type)]
    $default  reduce using rule 142 (class_extends)


State 397

  129 normal_class_declaration: modifier.multiopt "class" type_IDENTIFIER type_parameters.opt class_extends.opt class_implements.opt • class_permits.opt class_body

    "permits"  shift, and go to state 507

    $default  reduce using rule 137 (class_permits.opt)

    class_permits.opt  go to state 508
    class_permits      go to state 509


State 398

  144 interface_type_list: interface_type com_interface_type.multiopt •
  145 com_interface_type.multiopt: com_interface_type.multiopt • "," interface_type

    ","  shift, and go to state 510

    $default  reduce using rule 144 (interface_type_list)


State 399

  240 enum_body: "{" enum_constant_list.opt • com.opt enum_body_declarations.opt "}"

    ","  shift, and go to state 333

    $default  reduce using rule 242 (com.opt)

    com.opt  go to state 511


State 400

  245 enum_constant_list.opt: enum_constant_list •

    $default  reduce using rule 245 (enum_constant_list.opt)


State 401

  247 enum_constant_list: enum_constant • com_enum_constant.multiopt

    $default  reduce using rule 249 (com_enum_constant.multiopt)

    com_enum_constant.multiopt  go to state 512


State 402

  250 enum_constant: enum_modifier.multiopt • TOK_IDENTIFIER "[" "(" argument_list.opt ")" "]" class_body.opt
  251 enum_modifier.multiopt: enum_modifier.multiopt • enum_modifier

    TOK_IDENTIFIER  shift, and go to state 513
    "@"             shift, and go to state 11

    enum_modifier              go to state 514
    annotation                 go to state 515
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 403

  283 interface_extends: "extends" interface_type_list •

    $default  reduce using rule 283 (interface_extends)


State 404

  284 interface_permits: "permits" • type_name com_type_name.multiopt

    TOK_IDENTIFIER  shift, and go to state 37

    type_IDENTIFIER       go to state 38
    type_name             go to state 516
    package_or_type_name  go to state 40


State 405

  278 normal_interface_declaration: modifier.multiopt "interface" type_IDENTIFIER type_parameters.opt interface_extends.opt interface_permits.opt • interface_body

    "{"  shift, and go to state 517

    interface_body  go to state 518


State 406

  281 interface_permits.opt: interface_permits •

    $default  reduce using rule 281 (interface_permits.opt)


State 407

  258 record_header: "(" record_component_list.opt • ")"

    ")"  shift, and go to state 519


State 408

  259 record_component_list.opt: record_component_list •

    $default  reduce using rule 259 (record_component_list.opt)


State 409

  261 record_component_list: record_component • com_record_component.multiopt

    $default  reduce using rule 263 (com_record_component.multiopt)

    com_record_component.multiopt  go to state 520


State 410

  264 record_component: record_component_modifier.multiopt • unann_type TOK_IDENTIFIER
  266 record_component_modifier.multiopt: record_component_modifier.multiopt • record_component_modifier
  268 variable_arity_record_component: record_component_modifier.multiopt • unann_type annotation.multiopt "..." TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 414
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 415
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "short"         shift, and go to state 96

    type_IDENTIFIER                go to state 418
    numeric_type                   go to state 419
    integral_type                  go to state 106
    floating_point_type            go to state 107
    package_name                   go to state 420
    unann_type                     go to state 521
    unann_primitive_type           go to state 422
    unann_reference_type           go to state 423
    unann_class_or_interface_type  go to state 424
    unann_class_type               go to state 425
    unann_interface_type           go to state 426
    unann_type_variable            go to state 427
    unann_array_type               go to state 428
    record_component_modifier      go to state 522
    annotation                     go to state 523
    normal_annotation              go to state 15
    marker_annotation              go to state 16
    single_element_annotation      go to state 17


State 411

  265 record_component: variable_arity_record_component •

    $default  reduce using rule 265 (record_component)


State 412

  257 record_declaration: modifier.multiopt "record" type_IDENTIFIER type_parameters.opt record_header class_implements.opt • record_body

    "{"  shift, and go to state 524

    record_body  go to state 525


State 413

  533 lambda_parameter_list: TOK_IDENTIFIER com_IDENTIFIER.multiopt •
  534 com_IDENTIFIER.multiopt: com_IDENTIFIER.multiopt • "," TOK_IDENTIFIER

    ","  shift, and go to state 526

    $default  reduce using rule 533 (lambda_parameter_list)


State 414

   18 type_IDENTIFIER: TOK_IDENTIFIER •
   71 package_name: TOK_IDENTIFIER •

    "."       reduce using rule 18 (type_IDENTIFIER)
    "."       [reduce using rule 71 (package_name)]
    $default  reduce using rule 18 (type_IDENTIFIER)


State 415

  174 unann_primitive_type: "boolean" •

    $default  reduce using rule 174 (unann_primitive_type)


State 416

  214 variable_modifier: "final" •

    $default  reduce using rule 214 (variable_modifier)


State 417

  541 lambda_parameter_type: "var" •

    $default  reduce using rule 541 (lambda_parameter_type)


State 418

  180 unann_class_type: type_IDENTIFIER • type_arguments.opt
  186 unann_type_variable: type_IDENTIFIER •

    "<"  shift, and go to state 196

    TOK_IDENTIFIER  reduce using rule 184 (type_arguments.opt)
    TOK_IDENTIFIER  [reduce using rule 186 (unann_type_variable)]
    "..."           reduce using rule 184 (type_arguments.opt)
    "..."           [reduce using rule 186 (unann_type_variable)]
    "@"             reduce using rule 184 (type_arguments.opt)
    "@"             [reduce using rule 186 (unann_type_variable)]
    "["             reduce using rule 184 (type_arguments.opt)
    "["             [reduce using rule 186 (unann_type_variable)]
    "this"          reduce using rule 184 (type_arguments.opt)
    "this"          [reduce using rule 186 (unann_type_variable)]
    $default        reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 527


State 419

  173 unann_primitive_type: numeric_type •

    $default  reduce using rule 173 (unann_primitive_type)


State 420

   72 package_name: package_name • "." TOK_IDENTIFIER
  181 unann_class_type: package_name • "." annotation.multiopt type_IDENTIFIER type_arguments.opt

    "."  shift, and go to state 528


State 421

  212 variable_arity_parameter: variable_modifier.multiopt unann_type • annotation.multiopt "..." TOK_IDENTIFIER
  540 lambda_parameter_type: unann_type •

    TOK_IDENTIFIER  reduce using rule 540 (lambda_parameter_type)
    $default        reduce using rule 330 (annotation.multiopt)

    annotation.multiopt  go to state 529


State 422

  171 unann_type: unann_primitive_type •
  187 unann_array_type: unann_primitive_type • dims

    "@"       reduce using rule 171 (unann_type)
    "@"       [reduce using rule 330 (annotation.multiopt)]
    "["       reduce using rule 330 (annotation.multiopt)
    $default  reduce using rule 171 (unann_type)

    dims                 go to state 530
    annotation.multiopt  go to state 212


State 423

  172 unann_type: unann_reference_type •

    $default  reduce using rule 172 (unann_type)


State 424

  175 unann_reference_type: unann_class_or_interface_type •
  182 unann_class_type: unann_class_or_interface_type • "." annotation.multiopt type_IDENTIFIER type_arguments.opt
  188 unann_array_type: unann_class_or_interface_type • dims

    "."  shift, and go to state 531

    "@"       reduce using rule 175 (unann_reference_type)
    "@"       [reduce using rule 330 (annotation.multiopt)]
    "["       reduce using rule 330 (annotation.multiopt)
    $default  reduce using rule 175 (unann_reference_type)

    dims                 go to state 532
    annotation.multiopt  go to state 212


State 425

  178 unann_class_or_interface_type: unann_class_type •
  185 unann_interface_type: unann_class_type •

    TOK_IDENTIFIER  reduce using rule 178 (unann_class_or_interface_type)
    TOK_IDENTIFIER  [reduce using rule 185 (unann_interface_type)]
    "."             reduce using rule 178 (unann_class_or_interface_type)
    "."             [reduce using rule 185 (unann_interface_type)]
    "..."           reduce using rule 178 (unann_class_or_interface_type)
    "..."           [reduce using rule 185 (unann_interface_type)]
    "@"             reduce using rule 178 (unann_class_or_interface_type)
    "@"             [reduce using rule 185 (unann_interface_type)]
    "["             reduce using rule 178 (unann_class_or_interface_type)
    "["             [reduce using rule 185 (unann_interface_type)]
    "this"          reduce using rule 178 (unann_class_or_interface_type)
    "this"          [reduce using rule 185 (unann_interface_type)]
    $default        reduce using rule 178 (unann_class_or_interface_type)


State 426

  179 unann_class_or_interface_type: unann_interface_type •

    $default  reduce using rule 179 (unann_class_or_interface_type)


State 427

  176 unann_reference_type: unann_type_variable •
  189 unann_array_type: unann_type_variable • dims

    "@"       reduce using rule 176 (unann_reference_type)
    "@"       [reduce using rule 330 (annotation.multiopt)]
    "["       reduce using rule 330 (annotation.multiopt)
    $default  reduce using rule 176 (unann_reference_type)

    dims                 go to state 533
    annotation.multiopt  go to state 212


State 428

  177 unann_reference_type: unann_array_type •

    $default  reduce using rule 177 (unann_reference_type)


State 429

  210 variable_modifier.multiopt: variable_modifier.multiopt variable_modifier •

    $default  reduce using rule 210 (variable_modifier.multiopt)


State 430

  213 variable_modifier: annotation •

    $default  reduce using rule 213 (variable_modifier)


State 431

  538 lambda_parameter: variable_modifier.multiopt lambda_parameter_type • variable_declarator_id

    TOK_IDENTIFIER  shift, and go to state 534

    variable_declarator_id  go to state 535


State 432

  528 lambda_parameters: "(" lambda_parameter_list.opt ")" •

    $default  reduce using rule 528 (lambda_parameters)


State 433

  532 lambda_parameter_list: lambda_parameter com_lambda_parameter.multiopt •
  536 com_lambda_parameter.multiopt: com_lambda_parameter.multiopt • "," lambda_parameter

    ","  shift, and go to state 536

    $default  reduce using rule 532 (lambda_parameter_list)


State 434

  615 cast_expression: "(" primitive_type ")" unary_expression •

    $default  reduce using rule 615 (cast_expression)


State 435

   56 additional_bound: "&" • interface_type

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    class_or_interface_type  go to state 275
    class_type               go to state 199
    interface_type           go to state 537
    package_name             go to state 114
    annotation.multiopt      go to state 278


State 436

  616 cast_expression: "(" reference_type additional_bound.multiopt ")" • unary_expression_not_plus_minus
  617                | "(" reference_type additional_bound.multiopt ")" • lambda_expression

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    lambda_expression                               go to state 538
    lambda_parameters                               go to state 185
    unary_expression_not_plus_minus                 go to state 539
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 437

  618 additional_bound.multiopt: additional_bound.multiopt additional_bound •

    $default  reduce using rule 618 (additional_bound.multiopt)


State 438

  337 block: "{" • block_statements.opt "}"

    TOK_IDENTIFIER  shift, and go to state 540
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 547
    "if"            shift, and go to state 548
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 554
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 211 (variable_modifier.multiopt)]
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 3 (modifier.multiopt)
    "@"             [reduce using rule 211 (variable_modifier.multiopt)]
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 211 (variable_modifier.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 211 (variable_modifier.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 211 (variable_modifier.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 211 (variable_modifier.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "final"         reduce using rule 3 (modifier.multiopt)
    "final"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 211 (variable_modifier.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 211 (variable_modifier.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 211 (variable_modifier.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    "var"           reduce using rule 211 (variable_modifier.multiopt)
    "}"             reduce using rule 232 (block_statements.opt)
    $default        reduce using rule 3 (modifier.multiopt)

    modifier.multiopt                               go to state 556
    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    class_declaration                               go to state 557
    normal_class_declaration                        go to state 31
    variable_modifier.multiopt                      go to state 376
    block_statements.opt                            go to state 558
    enum_declaration                                go to state 32
    record_declaration                              go to state 33
    normal_interface_declaration                    go to state 559
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    block_statements                                go to state 561
    block_statement                                 go to state 562
    local_class_or_interface_declaration            go to state 563
    local_variable_declaration_statement            go to state 564
    local_variable_declaration                      go to state 565
    statement                                       go to state 566
    statement_without_trailing_substatement         go to state 567
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    basic_for_statement                             go to state 579
    enhanced_for_statement                          go to state 580
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 439

  543 lambda_body: block •

    $default  reduce using rule 543 (lambda_body)


State 440

  542 lambda_body: expression •

    $default  reduce using rule 542 (lambda_body)


State 441

  527 lambda_expression: lambda_parameters "->" lambda_body •

    $default  reduce using rule 527 (lambda_expression)


State 442

  546 assignment: left_hand_side assignment_operator expression •

    $default  reduce using rule 546 (assignment)


State 443

  482 class_literal: "boolean" dm.multiopt "." "class" •

    $default  reduce using rule 482 (class_literal)


State 444

  484 dm.multiopt: dm.multiopt "[" "]" •

    $default  reduce using rule 484 (dm.multiopt)


State 445

   57 type_arguments: "<" type_argument_list ">" •

    $default  reduce using rule 57 (type_arguments)


State 446

   59 type_argument.multiopt: "," • type_argument

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    primitive_type           go to state 104
    reference_type           go to state 312
    class_or_interface_type  go to state 109
    class_type               go to state 199
    interface_type           go to state 111
    type_variable            go to state 112
    array_type               go to state 313
    type_argument            go to state 597
    wildcard                 go to state 316
    package_name             go to state 114
    annotation.multiopt      go to state 317


State 447

   58 type_argument_list: type_argument type_argument.multiopt •
   60 type_argument.multiopt: type_argument.multiopt • "," type_argument

    ","  shift, and go to state 598

    $default  reduce using rule 58 (type_argument_list)


State 448

   64 wildcard: annotation.multiopt "?" • wildcard_bounds.opt

    "extends"  shift, and go to state 599
    "super"    shift, and go to state 600

    $default  reduce using rule 66 (wildcard_bounds.opt)

    wildcard_bounds.opt  go to state 601
    wildcard_bounds      go to state 602


State 449

  331 array_initializer: "{" • variable_initializer_list.opt com.opt "}"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "{"             shift, and go to state 449
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 333 (variable_initializer_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    variable_initializer                            go to state 603
    annotation.multiopt                             go to state 125
    array_initializer                               go to state 604
    variable_initializer_list.opt                   go to state 605
    variable_initializer_list                       go to state 606
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 607
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 450

  519 array_creation_expression: "new" primitive_type dims array_initializer •

    $default  reduce using rule 519 (array_creation_expression)


State 451

   44 dims: annotation.multiopt "[" • "]" an_sp.multiopt
  524 dim_expr: annotation.multiopt "[" • expression "]"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "]"             shift, and go to state 464
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 608
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 452

  167 dims.opt: dims •

    $default  reduce using rule 167 (dims.opt)


State 453

  517 array_creation_expression: "new" primitive_type dim_exprs dims.opt •

    $default  reduce using rule 517 (array_creation_expression)


State 454

  521 dim_exprs: dim_expr dim_expr.multiopt •
  522 dim_expr.multiopt: dim_expr.multiopt • dim_expr

    "@"       reduce using rule 330 (annotation.multiopt)
    "@"       [reduce using rule 521 (dim_exprs)]
    "["       reduce using rule 330 (annotation.multiopt)
    "["       [reduce using rule 521 (dim_exprs)]
    $default  reduce using rule 521 (dim_exprs)

    annotation.multiopt  go to state 609
    dim_expr             go to state 610


State 455

  520 array_creation_expression: "new" class_or_interface_type dims array_initializer •

    $default  reduce using rule 520 (array_creation_expression)


State 456

  518 array_creation_expression: "new" class_or_interface_type dim_exprs dims.opt •

    $default  reduce using rule 518 (array_creation_expression)


State 457

  490 class_or_interface_type_to_instantiate: annotation.multiopt TOK_IDENTIFIER • dot_annotation.multiopt_IDENTIFIER.multiopt type_arguments_or_diamond.opt

    $default  reduce using rule 492 (dot_annotation.multiopt_IDENTIFIER.multiopt)

    dot_annotation.multiopt_IDENTIFIER.multiopt  go to state 611


State 458

  489 unqualified_class_instance_creation_expression: "new" type_arguments.opt class_or_interface_type_to_instantiate "(" • argument_list.opt ")" class_body.opt

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 238 (argument_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    argument_list.opt                               go to state 612
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    argument_list                                   go to state 353
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 354
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 459

  505 method_invocation: "super" "." type_arguments.opt TOK_IDENTIFIER • "(" argument_list.opt ")"

    "("  shift, and go to state 613


State 460

  513 method_reference: "super" "::" type_arguments.opt TOK_IDENTIFIER •

    $default  reduce using rule 513 (method_reference)


State 461

  620 switch_expression: "switch" "(" expression ")" • switch_block

    "{"  shift, and go to state 614

    switch_block  go to state 615


State 462

  325 com_element_value.multiopt: com_element_value.multiopt "," • element_value

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "{"             shift, and go to state 101
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation                                      go to state 119
    normal_annotation                               go to state 15
    element_value                                   go to state 616
    element_value_array_initializer                 go to state 124
    marker_annotation                               go to state 16
    single_element_annotation                       go to state 17
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    conditional_expression                          go to state 136
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 463

  321 element_value_array_initializer: "{" element_valueList.opt com.opt "}" •

    $default  reduce using rule 321 (element_value_array_initializer)


State 464

   44 dims: annotation.multiopt "[" "]" • an_sp.multiopt

    $default  reduce using rule 46 (an_sp.multiopt)

    an_sp.multiopt  go to state 617


State 465

  481 class_literal: numeric_type dm.multiopt "." "class" •

    $default  reduce using rule 481 (class_literal)


State 466

  512 method_reference: reference_type "::" type_arguments.opt TOK_IDENTIFIER •

    $default  reduce using rule 512 (method_reference)


State 467

   38 class_type: class_or_interface_type "." annotation.multiopt type_IDENTIFIER • type_arguments.opt

    "<"  shift, and go to state 196

    "<"       [reduce using rule 184 (type_arguments.opt)]
    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 618


State 468

  515 method_reference: class_type "::" type_arguments.opt "new" •

    $default  reduce using rule 515 (method_reference)


State 469

   37 class_type: package_name "." annotation.multiopt type_IDENTIFIER • type_arguments.opt

    "<"  shift, and go to state 196

    "<"       [reduce using rule 184 (type_arguments.opt)]
    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 619


State 470

  498 field_access: type_name "." "super" "." • TOK_IDENTIFIER
  506 method_invocation: type_name "." "super" "." • type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 620
    "<"             shift, and go to state 196

    TOK_IDENTIFIER  [reduce using rule 184 (type_arguments.opt)]

    type_arguments      go to state 200
    type_arguments.opt  go to state 621


State 471

  514 method_reference: type_name "." "super" "::" • type_arguments.opt TOK_IDENTIFIER

    "<"  shift, and go to state 196

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 622


State 472

  502 method_invocation: type_name "." type_arguments.opt TOK_IDENTIFIER • "(" argument_list.opt ")"

    "("  shift, and go to state 623


State 473

  480 class_literal: type_name dm.multiopt "." "class" •

    $default  reduce using rule 480 (class_literal)


State 474

  503 method_invocation: expression_name "." type_arguments.opt TOK_IDENTIFIER • "(" argument_list.opt ")"

    "("  shift, and go to state 624


State 475

  510 method_reference: expression_name "::" type_arguments.opt TOK_IDENTIFIER •

    $default  reduce using rule 510 (method_reference)


State 476

  499 array_access: expression_name "[" expression "]" •

    $default  reduce using rule 499 (array_access)


State 477

  501 method_invocation: method_name "(" argument_list.opt ")" •

    $default  reduce using rule 501 (method_invocation)


State 478

  507 argument_list: expression com_expression.multiopt •
  508 com_expression.multiopt: com_expression.multiopt • "," expression

    ","  shift, and go to state 625

    $default  reduce using rule 507 (argument_list)


State 479

  317 element_value_pair: TOK_IDENTIFIER • "=" element_value

    "="  shift, and go to state 173


State 480

  315 com_element_value_pair.multiopt: com_element_value_pair.multiopt "," element_value_pair •

    $default  reduce using rule 315 (com_element_value_pair.multiopt)


State 481

  504 method_invocation: primary "." type_arguments.opt TOK_IDENTIFIER • "(" argument_list.opt ")"

    "("  shift, and go to state 626


State 482

  511 method_reference: primary "::" type_arguments.opt TOK_IDENTIFIER •

    $default  reduce using rule 511 (method_reference)


State 483

  500 array_access: primary_no_new_array "[" expression "]" •

    $default  reduce using rule 500 (array_access)


State 484

  563 conditional_expression: conditional_or_expression "?" expression ":" • conditional_expression
  564                       | conditional_or_expression "?" expression ":" • lambda_expression

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    lambda_expression                               go to state 627
    lambda_parameters                               go to state 185
    conditional_expression                          go to state 628
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 485

  349 local_variable_type: "var" •

    $default  reduce using rule 349 (local_variable_type)


State 486

  348 local_variable_type: unann_type •

    $default  reduce using rule 348 (local_variable_type)


State 487

  347 local_variable_declaration: variable_modifier.multiopt local_variable_type • variable_declarator_list

    TOK_IDENTIFIER  shift, and go to state 534

    variable_declarator_list  go to state 629
    variable_declarator       go to state 630
    variable_declarator_id    go to state 631


State 488

  115 module_directive: "exports" • package_name to_module_names.opt ";"

    TOK_IDENTIFIER  shift, and go to state 195

    package_name  go to state 632


State 489

  116 module_directive: "opens" • package_name to_module_names.opt ";"

    TOK_IDENTIFIER  shift, and go to state 195

    package_name  go to state 633


State 490

  118 module_directive: "provides" • type_name "with" type_name com_type_name.multiopt ";"

    TOK_IDENTIFIER  shift, and go to state 37

    type_IDENTIFIER       go to state 38
    type_name             go to state 634
    package_or_type_name  go to state 40


State 491

  114 module_directive: "requires" • modifier.multiopt module_name ";"

    $default  reduce using rule 3 (modifier.multiopt)

    modifier.multiopt  go to state 635


State 492

  117 module_directive: "uses" • type_name ";"

    TOK_IDENTIFIER  shift, and go to state 37

    type_IDENTIFIER       go to state 38
    type_name             go to state 636
    package_or_type_name  go to state 40


State 493

  108 module_declaration: annotation.multiopt open.opt "module" TOK_IDENTIFIER dot_ind.multiopt "{" module_directive.multiopt • "}"
  112 module_directive.multiopt: module_directive.multiopt • module_directive

    "exports"   shift, and go to state 488
    "opens"     shift, and go to state 489
    "provides"  shift, and go to state 490
    "requires"  shift, and go to state 491
    "uses"      shift, and go to state 492
    "}"         shift, and go to state 637

    module_directive  go to state 638


State 494

  111 module_directive.multiopt: module_directive •

    $default  reduce using rule 111 (module_directive.multiopt)


State 495

  303 annotation_interface_member_declaration: ";" •

    $default  reduce using rule 303 (annotation_interface_member_declaration)


State 496

  296 annotation_interface_body: "{" annotation_interface_member_declaration.multiopt "}" •

    $default  reduce using rule 296 (annotation_interface_body)


State 497

    2 modifier.multiopt: modifier.multiopt • modifier
  129 normal_class_declaration: modifier.multiopt • "class" type_IDENTIFIER type_parameters.opt class_extends.opt class_implements.opt class_permits.opt class_body
  239 enum_declaration: modifier.multiopt • "enum" type_IDENTIFIER class_implements.opt enum_body
  257 record_declaration: modifier.multiopt • "record" type_IDENTIFIER type_parameters.opt record_header class_implements.opt record_body
  278 normal_interface_declaration: modifier.multiopt • "interface" type_IDENTIFIER type_parameters.opt interface_extends.opt interface_permits.opt interface_body
  293 constant_declaration: modifier.multiopt • unann_type variable_declarator_list ";"
  295 annotation_interface_declaration: modifier.multiopt • "@" "interface" type_IDENTIFIER annotation_interface_body
  304 annotation_interface_element_declaration: modifier.multiopt • unann_type TOK_IDENTIFIER "(" ")" dims.opt default_value.opt ";"

    TOK_IDENTIFIER  shift, and go to state 414
    "@"             shift, and go to state 48
    "abstract"      shift, and go to state 49
    "boolean"       shift, and go to state 415
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "class"         shift, and go to state 50
    "double"        shift, and go to state 91
    "enum"          shift, and go to state 51
    "final"         shift, and go to state 52
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "interface"     shift, and go to state 53
    "long"          shift, and go to state 94
    "private"       shift, and go to state 54
    "protected"     shift, and go to state 55
    "public"        shift, and go to state 56
    "record"        shift, and go to state 57
    "sealed"        shift, and go to state 58
    "short"         shift, and go to state 96
    "static"        shift, and go to state 59
    "strictfp"      shift, and go to state 60
    "transient"     shift, and go to state 61
    "transitive"    shift, and go to state 62
    "volatile"      shift, and go to state 63

    modifier                       go to state 64
    type_IDENTIFIER                go to state 418
    numeric_type                   go to state 419
    integral_type                  go to state 106
    floating_point_type            go to state 107
    package_name                   go to state 420
    unann_type                     go to state 639
    unann_primitive_type           go to state 422
    unann_reference_type           go to state 423
    unann_class_or_interface_type  go to state 424
    unann_class_type               go to state 425
    unann_interface_type           go to state 426
    unann_type_variable            go to state 427
    unann_array_type               go to state 428
    annotation                     go to state 65
    normal_annotation              go to state 15
    marker_annotation              go to state 16
    single_element_annotation      go to state 17


State 498

  301 annotation_interface_member_declaration: class_declaration •

    $default  reduce using rule 301 (annotation_interface_member_declaration)


State 499

  302 annotation_interface_member_declaration: interface_declaration •

    $default  reduce using rule 302 (annotation_interface_member_declaration)


State 500

  300 annotation_interface_member_declaration: constant_declaration •

    $default  reduce using rule 300 (annotation_interface_member_declaration)


State 501

  297 annotation_interface_member_declaration.multiopt: annotation_interface_member_declaration.multiopt annotation_interface_member_declaration •

    $default  reduce using rule 297 (annotation_interface_member_declaration.multiopt)


State 502

  299 annotation_interface_member_declaration: annotation_interface_element_declaration •

    $default  reduce using rule 299 (annotation_interface_member_declaration)


State 503

  140 com_type_parameter.multiopt: com_type_parameter.multiopt "," • type_parameter

    "@"  shift, and go to state 11

    "@"       [reduce using rule 50 (type_parameter_modifier.multiopt)]
    $default  reduce using rule 50 (type_parameter_modifier.multiopt)

    type_parameter                    go to state 640
    type_parameter_modifier.multiopt  go to state 268
    type_parameter_modifier           go to state 269
    annotation                        go to state 271
    normal_annotation                 go to state 15
    marker_annotation                 go to state 16
    single_element_annotation         go to state 17


State 504

   54 type_bound: "extends" • type_variable
   55           | "extends" • class_or_interface_type additional_bound.multiopt

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    class_or_interface_type  go to state 641
    class_type               go to state 199
    interface_type           go to state 111
    type_variable            go to state 642
    package_name             go to state 114
    annotation.multiopt      go to state 643


State 505

   47 type_parameter: type_parameter_modifier.multiopt type_IDENTIFIER type_bound.opt •

    $default  reduce using rule 47 (type_parameter)


State 506

   52 type_bound.opt: type_bound •

    $default  reduce using rule 52 (type_bound.opt)


State 507

  147 class_permits: "permits" • type_name com_type_name.multiopt

    TOK_IDENTIFIER  shift, and go to state 37

    type_IDENTIFIER       go to state 38
    type_name             go to state 644
    package_or_type_name  go to state 40


State 508

  129 normal_class_declaration: modifier.multiopt "class" type_IDENTIFIER type_parameters.opt class_extends.opt class_implements.opt class_permits.opt • class_body

    "{"  shift, and go to state 645

    class_body  go to state 646


State 509

  136 class_permits.opt: class_permits •

    $default  reduce using rule 136 (class_permits.opt)


State 510

  145 com_interface_type.multiopt: com_interface_type.multiopt "," • interface_type

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    class_or_interface_type  go to state 275
    class_type               go to state 199
    interface_type           go to state 647
    package_name             go to state 114
    annotation.multiopt      go to state 278


State 511

  240 enum_body: "{" enum_constant_list.opt com.opt • enum_body_declarations.opt "}"

    ";"  shift, and go to state 648

    $default  reduce using rule 244 (enum_body_declarations.opt)

    enum_body_declarations.opt  go to state 649
    enum_body_declarations      go to state 650


State 512

  247 enum_constant_list: enum_constant com_enum_constant.multiopt •
  248 com_enum_constant.multiopt: com_enum_constant.multiopt • "," enum_constant

    ","  shift, and go to state 651

    ","       [reduce using rule 247 (enum_constant_list)]
    $default  reduce using rule 247 (enum_constant_list)


State 513

  250 enum_constant: enum_modifier.multiopt TOK_IDENTIFIER • "[" "(" argument_list.opt ")" "]" class_body.opt

    "["  shift, and go to state 652


State 514

  251 enum_modifier.multiopt: enum_modifier.multiopt enum_modifier •

    $default  reduce using rule 251 (enum_modifier.multiopt)


State 515

  255 enum_modifier: annotation •

    $default  reduce using rule 255 (enum_modifier)


State 516

  284 interface_permits: "permits" type_name • com_type_name.multiopt

    $default  reduce using rule 120 (com_type_name.multiopt)

    com_type_name.multiopt  go to state 653


State 517

  285 interface_body: "{" • interface_member_declaration.multiopt "}"

    $default  reduce using rule 287 (interface_member_declaration.multiopt)

    interface_member_declaration.multiopt  go to state 654


State 518

  278 normal_interface_declaration: modifier.multiopt "interface" type_IDENTIFIER type_parameters.opt interface_extends.opt interface_permits.opt interface_body •

    $default  reduce using rule 278 (normal_interface_declaration)


State 519

  258 record_header: "(" record_component_list.opt ")" •

    $default  reduce using rule 258 (record_header)


State 520

  261 record_component_list: record_component com_record_component.multiopt •
  262 com_record_component.multiopt: com_record_component.multiopt • "," record_component

    ","  shift, and go to state 655

    $default  reduce using rule 261 (record_component_list)


State 521

  264 record_component: record_component_modifier.multiopt unann_type • TOK_IDENTIFIER
  268 variable_arity_record_component: record_component_modifier.multiopt unann_type • annotation.multiopt "..." TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 656

    $default  reduce using rule 330 (annotation.multiopt)

    annotation.multiopt  go to state 657


State 522

  266 record_component_modifier.multiopt: record_component_modifier.multiopt record_component_modifier •

    $default  reduce using rule 266 (record_component_modifier.multiopt)


State 523

  269 record_component_modifier: annotation •

    $default  reduce using rule 269 (record_component_modifier)


State 524

  270 record_body: "{" • record_body_declaration.multiopt "}"

    $default  reduce using rule 272 (record_body_declaration.multiopt)

    record_body_declaration.multiopt  go to state 658


State 525

  257 record_declaration: modifier.multiopt "record" type_IDENTIFIER type_parameters.opt record_header class_implements.opt record_body •

    $default  reduce using rule 257 (record_declaration)


State 526

  534 com_IDENTIFIER.multiopt: com_IDENTIFIER.multiopt "," • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 659


State 527

  180 unann_class_type: type_IDENTIFIER type_arguments.opt •

    $default  reduce using rule 180 (unann_class_type)


State 528

   72 package_name: package_name "." • TOK_IDENTIFIER
  181 unann_class_type: package_name "." • annotation.multiopt type_IDENTIFIER type_arguments.opt

    TOK_IDENTIFIER  shift, and go to state 341

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    annotation.multiopt  go to state 660


State 529

  212 variable_arity_parameter: variable_modifier.multiopt unann_type annotation.multiopt • "..." TOK_IDENTIFIER
  329 annotation.multiopt: annotation.multiopt • annotation

    "..."  shift, and go to state 661
    "@"    shift, and go to state 11

    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 530

  187 unann_array_type: unann_primitive_type dims •

    $default  reduce using rule 187 (unann_array_type)


State 531

  182 unann_class_type: unann_class_or_interface_type "." • annotation.multiopt type_IDENTIFIER type_arguments.opt

    $default  reduce using rule 330 (annotation.multiopt)

    annotation.multiopt  go to state 662


State 532

  188 unann_array_type: unann_class_or_interface_type dims •

    $default  reduce using rule 188 (unann_array_type)


State 533

  189 unann_array_type: unann_type_variable dims •

    $default  reduce using rule 189 (unann_array_type)


State 534

  166 variable_declarator_id: TOK_IDENTIFIER • dims.opt

    "@"       reduce using rule 330 (annotation.multiopt)
    "["       reduce using rule 330 (annotation.multiopt)
    $default  reduce using rule 168 (dims.opt)

    dims                 go to state 452
    dims.opt             go to state 663
    annotation.multiopt  go to state 212


State 535

  538 lambda_parameter: variable_modifier.multiopt lambda_parameter_type variable_declarator_id •

    $default  reduce using rule 538 (lambda_parameter)


State 536

  536 com_lambda_parameter.multiopt: com_lambda_parameter.multiopt "," • lambda_parameter

    $default  reduce using rule 211 (variable_modifier.multiopt)

    variable_modifier.multiopt  go to state 288
    variable_arity_parameter    go to state 289
    lambda_parameter            go to state 664


State 537

   35 class_or_interface_type: interface_type •
   56 additional_bound: "&" interface_type •

    "."       reduce using rule 35 (class_or_interface_type)
    $default  reduce using rule 56 (additional_bound)


State 538

  617 cast_expression: "(" reference_type additional_bound.multiopt ")" lambda_expression •

    $default  reduce using rule 617 (cast_expression)


State 539

  616 cast_expression: "(" reference_type additional_bound.multiopt ")" unary_expression_not_plus_minus •

    $default  reduce using rule 616 (cast_expression)


State 540

   18 type_IDENTIFIER: TOK_IDENTIFIER •
   19 unqualified_method_IDENTIFIER: TOK_IDENTIFIER •
   71 package_name: TOK_IDENTIFIER •
   75 expression_name: TOK_IDENTIFIER •
   78 package_or_type_name: TOK_IDENTIFIER •
   80 ambiguous_name: TOK_IDENTIFIER •
  375 labeled_statement: TOK_IDENTIFIER • ":" statement

    ":"  shift, and go to state 665

    "("       reduce using rule 19 (unqualified_method_IDENTIFIER)
    "."       reduce using rule 18 (type_IDENTIFIER)
    "."       [reduce using rule 71 (package_name)]
    "."       [reduce using rule 75 (expression_name)]
    "."       [reduce using rule 78 (package_or_type_name)]
    "."       [reduce using rule 80 (ambiguous_name)]
    "["       reduce using rule 18 (type_IDENTIFIER)
    "["       [reduce using rule 75 (expression_name)]
    $default  reduce using rule 75 (expression_name)


State 541

  474 primary_no_new_array: "(" • expression ")"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 183
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 542

  374 empty_statement: ";" •

    $default  reduce using rule 374 (empty_statement)


State 543

  388 assert_statement: "assert" • expression ";"
  389                 | "assert" • expression ":" expression ";"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 666
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 544

  431 break_statement: "break" • IDENTIFIER.opt ";"

    TOK_IDENTIFIER  shift, and go to state 667

    $default  reduce using rule 433 (IDENTIFIER.opt)

    IDENTIFIER.opt  go to state 668


State 545

  435 continue_statement: "continue" • IDENTIFIER.opt ";"

    TOK_IDENTIFIER  shift, and go to state 667

    $default  reduce using rule 433 (IDENTIFIER.opt)

    IDENTIFIER.opt  go to state 669


State 546

  410 do_statement: "do" • statement "while" "(" expression ")" ";"

    TOK_IDENTIFIER  shift, and go to state 540
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 547
    "if"            shift, and go to state 548
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 554
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 670
    statement_without_trailing_substatement         go to state 567
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    basic_for_statement                             go to state 579
    enhanced_for_statement                          go to state 580
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 547

  415 basic_for_statement: "for" • "(" for_init.opt ";" expression.opt ";" for_update.opt ")" statement
  429 enhanced_for_statement: "for" • "(" local_variable_declaration ":" expression ")" statement

    "("  shift, and go to state 671


State 548

  385 if_then_statement: "if" • "(" expression ")" statement
  386 if_then_else_statement: "if" • "(" expression ")" statement_no_short_if "else" statement

    "("  shift, and go to state 672


State 549

  436 return_statement: "return" • expression.opt ";"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    ";"             reduce using rule 419 (expression.opt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    expression.opt                                  go to state 673
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 674
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 550

  390 switch_statement: "switch" • "(" expression ")" switch_block

    "("  shift, and go to state 675


State 551

  438 synchronized_statement: "synchronized" • "(" expression ")" block

    "("  shift, and go to state 676


State 552

  437 throw_statement: "throw" • expression ";"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 677
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 553

  439 try_statement: "try" • block catches
  440              | "try" • block catches.opt finally
  453 try_with_resources_statement: "try" • resource_specification block catches.opt finally.opt

    "("  shift, and go to state 678
    "{"  shift, and go to state 438

    block                   go to state 679
    resource_specification  go to state 680


State 554

  408 while_statement: "while" • "(" expression ")" statement

    "("  shift, and go to state 681


State 555

  434 yield_statement: "yield" • expression ";"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 682
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 556

    2 modifier.multiopt: modifier.multiopt • modifier
  129 normal_class_declaration: modifier.multiopt • "class" type_IDENTIFIER type_parameters.opt class_extends.opt class_implements.opt class_permits.opt class_body
  239 enum_declaration: modifier.multiopt • "enum" type_IDENTIFIER class_implements.opt enum_body
  257 record_declaration: modifier.multiopt • "record" type_IDENTIFIER type_parameters.opt record_header class_implements.opt record_body
  278 normal_interface_declaration: modifier.multiopt • "interface" type_IDENTIFIER type_parameters.opt interface_extends.opt interface_permits.opt interface_body

    "@"           shift, and go to state 11
    "abstract"    shift, and go to state 49
    "class"       shift, and go to state 50
    "enum"        shift, and go to state 51
    "final"       shift, and go to state 52
    "interface"   shift, and go to state 53
    "private"     shift, and go to state 54
    "protected"   shift, and go to state 55
    "public"      shift, and go to state 56
    "record"      shift, and go to state 57
    "sealed"      shift, and go to state 58
    "static"      shift, and go to state 59
    "strictfp"    shift, and go to state 60
    "transient"   shift, and go to state 61
    "transitive"  shift, and go to state 62
    "volatile"    shift, and go to state 63

    modifier                   go to state 64
    annotation                 go to state 65
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 557

  344 local_class_or_interface_declaration: class_declaration •

    $default  reduce using rule 344 (local_class_or_interface_declaration)


State 558

  337 block: "{" block_statements.opt • "}"

    "}"  shift, and go to state 683


State 559

  345 local_class_or_interface_declaration: normal_interface_declaration •

    $default  reduce using rule 345 (local_class_or_interface_declaration)


State 560

  361 statement_without_trailing_substatement: block •

    $default  reduce using rule 361 (statement_without_trailing_substatement)


State 561

  231 block_statements.opt: block_statements •

    $default  reduce using rule 231 (block_statements.opt)


State 562

  338 block_statements: block_statement • block_statement.multiopt

    $default  reduce using rule 340 (block_statement.multiopt)

    block_statement.multiopt  go to state 684


State 563

  341 block_statement: local_class_or_interface_declaration •

    $default  reduce using rule 341 (block_statement)


State 564

  342 block_statement: local_variable_declaration_statement •

    $default  reduce using rule 342 (block_statement)


State 565

  346 local_variable_declaration_statement: local_variable_declaration • ";"

    ";"  shift, and go to state 685


State 566

  343 block_statement: statement •

    $default  reduce using rule 343 (block_statement)


State 567

  350 statement: statement_without_trailing_substatement •

    $default  reduce using rule 350 (statement)


State 568

  362 statement_without_trailing_substatement: empty_statement •

    $default  reduce using rule 362 (statement_without_trailing_substatement)


State 569

  351 statement: labeled_statement •

    $default  reduce using rule 351 (statement)


State 570

  363 statement_without_trailing_substatement: expression_statement •

    $default  reduce using rule 363 (statement_without_trailing_substatement)


State 571

  377 expression_statement: statement_expression • ";"

    ";"  shift, and go to state 686


State 572

  352 statement: if_then_statement •

    $default  reduce using rule 352 (statement)


State 573

  353 statement: if_then_else_statement •

    $default  reduce using rule 353 (statement)


State 574

  364 statement_without_trailing_substatement: assert_statement •

    $default  reduce using rule 364 (statement_without_trailing_substatement)


State 575

  365 statement_without_trailing_substatement: switch_statement •

    $default  reduce using rule 365 (statement_without_trailing_substatement)


State 576

  354 statement: while_statement •

    $default  reduce using rule 354 (statement)


State 577

  366 statement_without_trailing_substatement: do_statement •

    $default  reduce using rule 366 (statement_without_trailing_substatement)


State 578

  355 statement: for_statement •

    $default  reduce using rule 355 (statement)


State 579

  411 for_statement: basic_for_statement •

    $default  reduce using rule 411 (for_statement)


State 580

  412 for_statement: enhanced_for_statement •

    $default  reduce using rule 412 (for_statement)


State 581

  367 statement_without_trailing_substatement: break_statement •

    $default  reduce using rule 367 (statement_without_trailing_substatement)


State 582

  373 statement_without_trailing_substatement: yield_statement •

    $default  reduce using rule 373 (statement_without_trailing_substatement)


State 583

  368 statement_without_trailing_substatement: continue_statement •

    $default  reduce using rule 368 (statement_without_trailing_substatement)


State 584

  369 statement_without_trailing_substatement: return_statement •

    $default  reduce using rule 369 (statement_without_trailing_substatement)


State 585

  371 statement_without_trailing_substatement: throw_statement •

    $default  reduce using rule 371 (statement_without_trailing_substatement)


State 586

  370 statement_without_trailing_substatement: synchronized_statement •

    $default  reduce using rule 370 (statement_without_trailing_substatement)


State 587

  372 statement_without_trailing_substatement: try_statement •

    $default  reduce using rule 372 (statement_without_trailing_substatement)


State 588

  441 try_statement: try_with_resources_statement •

    $default  reduce using rule 441 (try_statement)


State 589

  384 statement_expression: class_instance_creation_expression •
  475 primary_no_new_array: class_instance_creation_expression •

    ")"       reduce using rule 384 (statement_expression)
    ","       reduce using rule 384 (statement_expression)
    ";"       reduce using rule 384 (statement_expression)
    $default  reduce using rule 475 (primary_no_new_array)


State 590

  383 statement_expression: method_invocation •
  478 primary_no_new_array: method_invocation •

    ")"       reduce using rule 383 (statement_expression)
    ","       reduce using rule 383 (statement_expression)
    ";"       reduce using rule 383 (statement_expression)
    $default  reduce using rule 478 (primary_no_new_array)


State 591

  378 statement_expression: assignment •

    $default  reduce using rule 378 (statement_expression)


State 592

  379 statement_expression: pre_increment_expression •

    $default  reduce using rule 379 (statement_expression)


State 593

  380 statement_expression: pre_decrement_expression •

    $default  reduce using rule 380 (statement_expression)


State 594

  613 post_increment_expression: postfix_expression • "++"
  614 post_decrement_expression: postfix_expression • "--"

    "++"  shift, and go to state 258
    "--"  shift, and go to state 259


State 595

  381 statement_expression: post_increment_expression •
  611 postfix_expression: post_increment_expression •

    "++"      reduce using rule 611 (postfix_expression)
    "--"      reduce using rule 611 (postfix_expression)
    $default  reduce using rule 381 (statement_expression)


State 596

  382 statement_expression: post_decrement_expression •
  612 postfix_expression: post_decrement_expression •

    "++"      reduce using rule 612 (postfix_expression)
    "--"      reduce using rule 612 (postfix_expression)
    $default  reduce using rule 382 (statement_expression)


State 597

   59 type_argument.multiopt: "," type_argument •

    $default  reduce using rule 59 (type_argument.multiopt)


State 598

   60 type_argument.multiopt: type_argument.multiopt "," • type_argument

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    primitive_type           go to state 104
    reference_type           go to state 312
    class_or_interface_type  go to state 109
    class_type               go to state 199
    interface_type           go to state 111
    type_variable            go to state 112
    array_type               go to state 313
    type_argument            go to state 687
    wildcard                 go to state 316
    package_name             go to state 114
    annotation.multiopt      go to state 317


State 599

   67 wildcard_bounds: "extends" • reference_type

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    primitive_type           go to state 104
    reference_type           go to state 688
    class_or_interface_type  go to state 109
    class_type               go to state 199
    interface_type           go to state 111
    type_variable            go to state 112
    array_type               go to state 313
    package_name             go to state 114
    annotation.multiopt      go to state 125


State 600

   68 wildcard_bounds: "super" • reference_type

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    primitive_type           go to state 104
    reference_type           go to state 689
    class_or_interface_type  go to state 109
    class_type               go to state 199
    interface_type           go to state 111
    type_variable            go to state 112
    array_type               go to state 313
    package_name             go to state 114
    annotation.multiopt      go to state 125


State 601

   64 wildcard: annotation.multiopt "?" wildcard_bounds.opt •

    $default  reduce using rule 64 (wildcard)


State 602

   65 wildcard_bounds.opt: wildcard_bounds •

    $default  reduce using rule 65 (wildcard_bounds.opt)


State 603

  334 variable_initializer_list: variable_initializer • com_variable_initializer.multiopt

    $default  reduce using rule 336 (com_variable_initializer.multiopt)

    com_variable_initializer.multiopt  go to state 690


State 604

  170 variable_initializer: array_initializer •

    $default  reduce using rule 170 (variable_initializer)


State 605

  331 array_initializer: "{" variable_initializer_list.opt • com.opt "}"

    ","  shift, and go to state 333

    $default  reduce using rule 242 (com.opt)

    com.opt  go to state 691


State 606

  332 variable_initializer_list.opt: variable_initializer_list •

    $default  reduce using rule 332 (variable_initializer_list.opt)


State 607

  169 variable_initializer: expression •

    $default  reduce using rule 169 (variable_initializer)


State 608

  524 dim_expr: annotation.multiopt "[" expression • "]"

    "]"  shift, and go to state 692


State 609

  329 annotation.multiopt: annotation.multiopt • annotation
  524 dim_expr: annotation.multiopt • "[" expression "]"

    "@"  shift, and go to state 11
    "["  shift, and go to state 693

    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 610

  522 dim_expr.multiopt: dim_expr.multiopt dim_expr •

    $default  reduce using rule 522 (dim_expr.multiopt)


State 611

  490 class_or_interface_type_to_instantiate: annotation.multiopt TOK_IDENTIFIER dot_annotation.multiopt_IDENTIFIER.multiopt • type_arguments_or_diamond.opt
  491 dot_annotation.multiopt_IDENTIFIER.multiopt: dot_annotation.multiopt_IDENTIFIER.multiopt • "." annotation.multiopt TOK_IDENTIFIER

    "."  shift, and go to state 694
    "<"  shift, and go to state 196

    $default  reduce using rule 494 (type_arguments_or_diamond.opt)

    type_arguments                 go to state 695
    type_arguments_or_diamond.opt  go to state 696
    type_arguments_or_diamond      go to state 697


State 612

  489 unqualified_class_instance_creation_expression: "new" type_arguments.opt class_or_interface_type_to_instantiate "(" argument_list.opt • ")" class_body.opt

    ")"  shift, and go to state 698


State 613

  505 method_invocation: "super" "." type_arguments.opt TOK_IDENTIFIER "(" • argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 238 (argument_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    argument_list.opt                               go to state 699
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    argument_list                                   go to state 353
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 354
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 614

  391 switch_block: "{" • switch_rule switch_rule.multiopt ";"
  392             | "{" • switch_block_statement_group.multiopt switch_label_col.multiopt "}"

    "case"     shift, and go to state 700
    "default"  shift, and go to state 701

    "case"     [reduce using rule 396 (switch_block_statement_group.multiopt)]
    "default"  [reduce using rule 396 (switch_block_statement_group.multiopt)]
    $default   reduce using rule 396 (switch_block_statement_group.multiopt)

    switch_block_statement_group.multiopt  go to state 702
    switch_rule                            go to state 703
    switch_label                           go to state 704


State 615

  620 switch_expression: "switch" "(" expression ")" switch_block •

    $default  reduce using rule 620 (switch_expression)


State 616

  325 com_element_value.multiopt: com_element_value.multiopt "," element_value •

    $default  reduce using rule 325 (com_element_value.multiopt)


State 617

   44 dims: annotation.multiopt "[" "]" an_sp.multiopt •
   45 an_sp.multiopt: an_sp.multiopt • annotation.multiopt "[" "]"

    "@"       reduce using rule 44 (dims)
    "@"       [reduce using rule 330 (annotation.multiopt)]
    "["       reduce using rule 330 (annotation.multiopt)
    $default  reduce using rule 44 (dims)

    annotation.multiopt  go to state 705


State 618

   38 class_type: class_or_interface_type "." annotation.multiopt type_IDENTIFIER type_arguments.opt •

    $default  reduce using rule 38 (class_type)


State 619

   37 class_type: package_name "." annotation.multiopt type_IDENTIFIER type_arguments.opt •

    $default  reduce using rule 37 (class_type)


State 620

  498 field_access: type_name "." "super" "." TOK_IDENTIFIER •

    $default  reduce using rule 498 (field_access)


State 621

  506 method_invocation: type_name "." "super" "." type_arguments.opt • TOK_IDENTIFIER "(" argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 706


State 622

  514 method_reference: type_name "." "super" "::" type_arguments.opt • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 707


State 623

  502 method_invocation: type_name "." type_arguments.opt TOK_IDENTIFIER "(" • argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 238 (argument_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    argument_list.opt                               go to state 708
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    argument_list                                   go to state 353
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 354
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 624

  503 method_invocation: expression_name "." type_arguments.opt TOK_IDENTIFIER "(" • argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 238 (argument_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    argument_list.opt                               go to state 709
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    argument_list                                   go to state 353
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 354
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 625

  508 com_expression.multiopt: com_expression.multiopt "," • expression

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 710
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 626

  504 method_invocation: primary "." type_arguments.opt TOK_IDENTIFIER "(" • argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 238 (argument_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    argument_list.opt                               go to state 711
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    argument_list                                   go to state 353
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 354
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 627

  564 conditional_expression: conditional_or_expression "?" expression ":" lambda_expression •

    $default  reduce using rule 564 (conditional_expression)


State 628

  563 conditional_expression: conditional_or_expression "?" expression ":" conditional_expression •

    $default  reduce using rule 563 (conditional_expression)


State 629

  347 local_variable_declaration: variable_modifier.multiopt local_variable_type variable_declarator_list •

    $default  reduce using rule 347 (local_variable_declaration)


State 630

  160 variable_declarator_list: variable_declarator • com_variable_declarator.multiopt

    $default  reduce using rule 162 (com_variable_declarator.multiopt)

    com_variable_declarator.multiopt  go to state 712


State 631

  163 variable_declarator: variable_declarator_id • eq_variable_initializer.opt

    "="  shift, and go to state 713

    $default  reduce using rule 165 (eq_variable_initializer.opt)

    eq_variable_initializer.opt  go to state 714


State 632

   72 package_name: package_name • "." TOK_IDENTIFIER
  115 module_directive: "exports" package_name • to_module_names.opt ";"

    "."   shift, and go to state 715
    "to"  shift, and go to state 716

    "to"      [reduce using rule 123 (to_module_names.opt)]
    $default  reduce using rule 123 (to_module_names.opt)

    to_module_names.opt  go to state 717


State 633

   72 package_name: package_name • "." TOK_IDENTIFIER
  116 module_directive: "opens" package_name • to_module_names.opt ";"

    "."   shift, and go to state 715
    "to"  shift, and go to state 716

    "to"      [reduce using rule 123 (to_module_names.opt)]
    $default  reduce using rule 123 (to_module_names.opt)

    to_module_names.opt  go to state 718


State 634

  118 module_directive: "provides" type_name • "with" type_name com_type_name.multiopt ";"

    "with"  shift, and go to state 719


State 635

    2 modifier.multiopt: modifier.multiopt • modifier
  114 module_directive: "requires" modifier.multiopt • module_name ";"

    TOK_IDENTIFIER  shift, and go to state 720
    "@"             shift, and go to state 11
    "abstract"      shift, and go to state 49
    "final"         shift, and go to state 52
    "private"       shift, and go to state 54
    "protected"     shift, and go to state 55
    "public"        shift, and go to state 56
    "sealed"        shift, and go to state 58
    "static"        shift, and go to state 59
    "strictfp"      shift, and go to state 60
    "transient"     shift, and go to state 61
    "transitive"    shift, and go to state 62
    "volatile"      shift, and go to state 63

    modifier                   go to state 64
    module_name                go to state 721
    annotation                 go to state 65
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 636

  117 module_directive: "uses" type_name • ";"

    ";"  shift, and go to state 722


State 637

  108 module_declaration: annotation.multiopt open.opt "module" TOK_IDENTIFIER dot_ind.multiopt "{" module_directive.multiopt "}" •

    $default  reduce using rule 108 (module_declaration)


State 638

  112 module_directive.multiopt: module_directive.multiopt module_directive •

    $default  reduce using rule 112 (module_directive.multiopt)


State 639

  293 constant_declaration: modifier.multiopt unann_type • variable_declarator_list ";"
  304 annotation_interface_element_declaration: modifier.multiopt unann_type • TOK_IDENTIFIER "(" ")" dims.opt default_value.opt ";"

    TOK_IDENTIFIER  shift, and go to state 723

    variable_declarator_list  go to state 724
    variable_declarator       go to state 630
    variable_declarator_id    go to state 631


State 640

  140 com_type_parameter.multiopt: com_type_parameter.multiopt "," type_parameter •

    $default  reduce using rule 140 (com_type_parameter.multiopt)


State 641

   38 class_type: class_or_interface_type • "." annotation.multiopt type_IDENTIFIER type_arguments.opt
   55 type_bound: "extends" class_or_interface_type • additional_bound.multiopt

    "."  shift, and go to state 215

    $default  reduce using rule 619 (additional_bound.multiopt)

    additional_bound.multiopt  go to state 725


State 642

   54 type_bound: "extends" type_variable •

    $default  reduce using rule 54 (type_bound)


State 643

   36 class_type: annotation.multiopt • type_IDENTIFIER type_arguments.opt
   40 type_variable: annotation.multiopt • type_IDENTIFIER
  329 annotation.multiopt: annotation.multiopt • annotation

    TOK_IDENTIFIER  shift, and go to state 75
    "@"             shift, and go to state 11

    type_IDENTIFIER            go to state 232
    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 644

  147 class_permits: "permits" type_name • com_type_name.multiopt

    $default  reduce using rule 120 (com_type_name.multiopt)

    com_type_name.multiopt  go to state 726


State 645

  148 class_body: "{" • class_body_declaration.multiopt "}"

    $default  reduce using rule 150 (class_body_declaration.multiopt)

    class_body_declaration.multiopt  go to state 727


State 646

  129 normal_class_declaration: modifier.multiopt "class" type_IDENTIFIER type_parameters.opt class_extends.opt class_implements.opt class_permits.opt class_body •

    $default  reduce using rule 129 (normal_class_declaration)


State 647

   35 class_or_interface_type: interface_type •
  145 com_interface_type.multiopt: com_interface_type.multiopt "," interface_type •

    "."       reduce using rule 35 (class_or_interface_type)
    $default  reduce using rule 145 (com_interface_type.multiopt)


State 648

  256 enum_body_declarations: ";" • class_body_declaration.multiopt

    $default  reduce using rule 150 (class_body_declaration.multiopt)

    class_body_declaration.multiopt  go to state 728


State 649

  240 enum_body: "{" enum_constant_list.opt com.opt enum_body_declarations.opt • "}"

    "}"  shift, and go to state 729


State 650

  243 enum_body_declarations.opt: enum_body_declarations •

    $default  reduce using rule 243 (enum_body_declarations.opt)


State 651

  248 com_enum_constant.multiopt: com_enum_constant.multiopt "," • enum_constant

    $default  reduce using rule 252 (enum_modifier.multiopt)

    enum_constant           go to state 730
    enum_modifier.multiopt  go to state 402


State 652

  250 enum_constant: enum_modifier.multiopt TOK_IDENTIFIER "[" • "(" argument_list.opt ")" "]" class_body.opt

    "("  shift, and go to state 731


State 653

  119 com_type_name.multiopt: com_type_name.multiopt • "," type_name
  284 interface_permits: "permits" type_name com_type_name.multiopt •

    ","  shift, and go to state 732

    $default  reduce using rule 284 (interface_permits)


State 654

  285 interface_body: "{" interface_member_declaration.multiopt • "}"
  286 interface_member_declaration.multiopt: interface_member_declaration.multiopt • interface_member_declaration

    ";"  shift, and go to state 733
    "}"  shift, and go to state 734

    $default  reduce using rule 3 (modifier.multiopt)

    modifier.multiopt                 go to state 735
    class_declaration                 go to state 736
    normal_class_declaration          go to state 31
    enum_declaration                  go to state 32
    record_declaration                go to state 33
    interface_declaration             go to state 737
    normal_interface_declaration      go to state 35
    interface_member_declaration      go to state 738
    constant_declaration              go to state 739
    interface_method_declaration      go to state 740
    annotation_interface_declaration  go to state 36


State 655

  262 com_record_component.multiopt: com_record_component.multiopt "," • record_component

    $default  reduce using rule 267 (record_component_modifier.multiopt)

    record_component                    go to state 741
    record_component_modifier.multiopt  go to state 410
    variable_arity_record_component     go to state 411


State 656

  264 record_component: record_component_modifier.multiopt unann_type TOK_IDENTIFIER •

    $default  reduce using rule 264 (record_component)


State 657

  268 variable_arity_record_component: record_component_modifier.multiopt unann_type annotation.multiopt • "..." TOK_IDENTIFIER
  329 annotation.multiopt: annotation.multiopt • annotation

    "..."  shift, and go to state 742
    "@"    shift, and go to state 11

    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 658

  270 record_body: "{" record_body_declaration.multiopt • "}"
  271 record_body_declaration.multiopt: record_body_declaration.multiopt • record_body_declaration

    "static"  shift, and go to state 743
    "{"       shift, and go to state 438
    "}"       shift, and go to state 744

    "static"  [reduce using rule 3 (modifier.multiopt)]
    $default  reduce using rule 3 (modifier.multiopt)

    modifier.multiopt                 go to state 745
    class_declaration                 go to state 746
    normal_class_declaration          go to state 31
    class_body_declaration            go to state 747
    class_member_declaration          go to state 748
    field_declaration                 go to state 749
    method_declaration                go to state 750
    instance_initializer              go to state 751
    static_initializer                go to state 752
    constructor_declaration           go to state 753
    enum_declaration                  go to state 32
    record_declaration                go to state 33
    record_body_declaration           go to state 754
    compact_constructor_declaration   go to state 755
    interface_declaration             go to state 756
    normal_interface_declaration      go to state 35
    annotation_interface_declaration  go to state 36
    block                             go to state 757


State 659

  534 com_IDENTIFIER.multiopt: com_IDENTIFIER.multiopt "," TOK_IDENTIFIER •

    $default  reduce using rule 534 (com_IDENTIFIER.multiopt)


State 660

  181 unann_class_type: package_name "." annotation.multiopt • type_IDENTIFIER type_arguments.opt
  329 annotation.multiopt: annotation.multiopt • annotation

    TOK_IDENTIFIER  shift, and go to state 75
    "@"             shift, and go to state 11

    type_IDENTIFIER            go to state 758
    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 661

  212 variable_arity_parameter: variable_modifier.multiopt unann_type annotation.multiopt "..." • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 759


State 662

  182 unann_class_type: unann_class_or_interface_type "." annotation.multiopt • type_IDENTIFIER type_arguments.opt
  329 annotation.multiopt: annotation.multiopt • annotation

    TOK_IDENTIFIER  shift, and go to state 75
    "@"             shift, and go to state 11

    type_IDENTIFIER            go to state 760
    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 663

  166 variable_declarator_id: TOK_IDENTIFIER dims.opt •

    $default  reduce using rule 166 (variable_declarator_id)


State 664

  536 com_lambda_parameter.multiopt: com_lambda_parameter.multiopt "," lambda_parameter •

    $default  reduce using rule 536 (com_lambda_parameter.multiopt)


State 665

  375 labeled_statement: TOK_IDENTIFIER ":" • statement

    TOK_IDENTIFIER  shift, and go to state 540
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 547
    "if"            shift, and go to state 548
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 554
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 761
    statement_without_trailing_substatement         go to state 567
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    basic_for_statement                             go to state 579
    enhanced_for_statement                          go to state 580
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 666

  388 assert_statement: "assert" expression • ";"
  389                 | "assert" expression • ":" expression ";"

    ":"  shift, and go to state 762
    ";"  shift, and go to state 763


State 667

  432 IDENTIFIER.opt: TOK_IDENTIFIER •

    $default  reduce using rule 432 (IDENTIFIER.opt)


State 668

  431 break_statement: "break" IDENTIFIER.opt • ";"

    ";"  shift, and go to state 764


State 669

  435 continue_statement: "continue" IDENTIFIER.opt • ";"

    ";"  shift, and go to state 765


State 670

  410 do_statement: "do" statement • "while" "(" expression ")" ";"

    "while"  shift, and go to state 766


State 671

  415 basic_for_statement: "for" "(" • for_init.opt ";" expression.opt ";" for_update.opt ")" statement
  429 enhanced_for_statement: "for" "(" • local_variable_declaration ":" expression ")" statement

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100

    TOK_IDENTIFIER  [reduce using rule 211 (variable_modifier.multiopt)]
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    ";"             reduce using rule 417 (for_init.opt)
    "@"             reduce using rule 211 (variable_modifier.multiopt)
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 211 (variable_modifier.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 211 (variable_modifier.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 211 (variable_modifier.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 211 (variable_modifier.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 211 (variable_modifier.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 211 (variable_modifier.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 211 (variable_modifier.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 211 (variable_modifier.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    variable_modifier.multiopt                      go to state 376
    annotation.multiopt                             go to state 125
    local_variable_declaration                      go to state 767
    statement_expression                            go to state 768
    for_init.opt                                    go to state 769
    for_init                                        go to state 770
    statement_expression_list                       go to state 771
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 672

  385 if_then_statement: "if" "(" • expression ")" statement
  386 if_then_else_statement: "if" "(" • expression ")" statement_no_short_if "else" statement

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 772
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 673

  436 return_statement: "return" expression.opt • ";"

    ";"  shift, and go to state 773


State 674

  418 expression.opt: expression •

    $default  reduce using rule 418 (expression.opt)


State 675

  390 switch_statement: "switch" "(" • expression ")" switch_block

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 774
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 676

  438 synchronized_statement: "synchronized" "(" • expression ")" block

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 775
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 677

  437 throw_statement: "throw" expression • ";"

    ";"  shift, and go to state 776


State 678

  456 resource_specification: "(" • resource_list semcol.opt ")"

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100

    TOK_IDENTIFIER  [reduce using rule 211 (variable_modifier.multiopt)]
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 211 (variable_modifier.multiopt)
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 211 (variable_modifier.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 211 (variable_modifier.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 211 (variable_modifier.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 211 (variable_modifier.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 211 (variable_modifier.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 211 (variable_modifier.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 211 (variable_modifier.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 211 (variable_modifier.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 777
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    variable_modifier.multiopt                      go to state 376
    annotation.multiopt                             go to state 125
    local_variable_declaration                      go to state 778
    resource_list                                   go to state 779
    resource                                        go to state 780
    variable_access                                 go to state 781
    primary                                         go to state 782
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 783
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135


State 679

  439 try_statement: "try" block • catches
  440              | "try" block • catches.opt finally

    "catch"  shift, and go to state 784

    $default  reduce using rule 443 (catches.opt)

    catches.opt   go to state 785
    catches       go to state 786
    catch_clause  go to state 787


State 680

  453 try_with_resources_statement: "try" resource_specification • block catches.opt finally.opt

    "{"  shift, and go to state 438

    block  go to state 788


State 681

  408 while_statement: "while" "(" • expression ")" statement

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 789
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 682

  434 yield_statement: "yield" expression • ";"

    ";"  shift, and go to state 790


State 683

  337 block: "{" block_statements.opt "}" •

    $default  reduce using rule 337 (block)


State 684

  338 block_statements: block_statement block_statement.multiopt •
  339 block_statement.multiopt: block_statement.multiopt • block_statement

    TOK_IDENTIFIER  shift, and go to state 540
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 547
    "if"            shift, and go to state 548
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 554
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 211 (variable_modifier.multiopt)]
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 3 (modifier.multiopt)
    "@"             [reduce using rule 211 (variable_modifier.multiopt)]
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 211 (variable_modifier.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 211 (variable_modifier.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "case"          reduce using rule 338 (block_statements)
    "char"          [reduce using rule 211 (variable_modifier.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "default"       reduce using rule 338 (block_statements)
    "double"        [reduce using rule 211 (variable_modifier.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "final"         reduce using rule 3 (modifier.multiopt)
    "final"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 211 (variable_modifier.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 211 (variable_modifier.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 211 (variable_modifier.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    "var"           reduce using rule 211 (variable_modifier.multiopt)
    "}"             reduce using rule 338 (block_statements)
    $default        reduce using rule 3 (modifier.multiopt)

    modifier.multiopt                               go to state 556
    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    class_declaration                               go to state 557
    normal_class_declaration                        go to state 31
    variable_modifier.multiopt                      go to state 376
    enum_declaration                                go to state 32
    record_declaration                              go to state 33
    normal_interface_declaration                    go to state 559
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    block_statement                                 go to state 791
    local_class_or_interface_declaration            go to state 563
    local_variable_declaration_statement            go to state 564
    local_variable_declaration                      go to state 565
    statement                                       go to state 566
    statement_without_trailing_substatement         go to state 567
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    basic_for_statement                             go to state 579
    enhanced_for_statement                          go to state 580
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 685

  346 local_variable_declaration_statement: local_variable_declaration ";" •

    $default  reduce using rule 346 (local_variable_declaration_statement)


State 686

  377 expression_statement: statement_expression ";" •

    $default  reduce using rule 377 (expression_statement)


State 687

   60 type_argument.multiopt: type_argument.multiopt "," type_argument •

    $default  reduce using rule 60 (type_argument.multiopt)


State 688

   67 wildcard_bounds: "extends" reference_type •

    $default  reduce using rule 67 (wildcard_bounds)


State 689

   68 wildcard_bounds: "super" reference_type •

    $default  reduce using rule 68 (wildcard_bounds)


State 690

  334 variable_initializer_list: variable_initializer com_variable_initializer.multiopt •
  335 com_variable_initializer.multiopt: com_variable_initializer.multiopt • "," variable_initializer

    ","  shift, and go to state 792

    ","       [reduce using rule 334 (variable_initializer_list)]
    $default  reduce using rule 334 (variable_initializer_list)


State 691

  331 array_initializer: "{" variable_initializer_list.opt com.opt • "}"

    "}"  shift, and go to state 793


State 692

  524 dim_expr: annotation.multiopt "[" expression "]" •

    $default  reduce using rule 524 (dim_expr)


State 693

  524 dim_expr: annotation.multiopt "[" • expression "]"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 608
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 694

  491 dot_annotation.multiopt_IDENTIFIER.multiopt: dot_annotation.multiopt_IDENTIFIER.multiopt "." • annotation.multiopt TOK_IDENTIFIER

    $default  reduce using rule 330 (annotation.multiopt)

    annotation.multiopt  go to state 794


State 695

  495 type_arguments_or_diamond: type_arguments •

    $default  reduce using rule 495 (type_arguments_or_diamond)


State 696

  490 class_or_interface_type_to_instantiate: annotation.multiopt TOK_IDENTIFIER dot_annotation.multiopt_IDENTIFIER.multiopt type_arguments_or_diamond.opt •

    $default  reduce using rule 490 (class_or_interface_type_to_instantiate)


State 697

  493 type_arguments_or_diamond.opt: type_arguments_or_diamond •

    $default  reduce using rule 493 (type_arguments_or_diamond.opt)


State 698

  489 unqualified_class_instance_creation_expression: "new" type_arguments.opt class_or_interface_type_to_instantiate "(" argument_list.opt ")" • class_body.opt

    "{"  shift, and go to state 645

    $default  reduce using rule 254 (class_body.opt)

    class_body      go to state 795
    class_body.opt  go to state 796


State 699

  505 method_invocation: "super" "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt • ")"

    ")"  shift, and go to state 797


State 700

  403 switch_label: "case" • case_constant com_case_constant.multiopt

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    case_constant                                   go to state 798
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    conditional_expression                          go to state 799
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 701

  404 switch_label: "default" •

    $default  reduce using rule 404 (switch_label)


State 702

  392 switch_block: "{" switch_block_statement_group.multiopt • switch_label_col.multiopt "}"
  395 switch_block_statement_group.multiopt: switch_block_statement_group.multiopt • switch_block_statement_group

    "case"     shift, and go to state 700
    "default"  shift, and go to state 701

    "case"     [reduce using rule 398 (switch_label_col.multiopt)]
    "default"  [reduce using rule 398 (switch_label_col.multiopt)]
    $default   reduce using rule 398 (switch_label_col.multiopt)

    switch_label_col.multiopt     go to state 800
    switch_block_statement_group  go to state 801
    switch_label                  go to state 802


State 703

  391 switch_block: "{" switch_rule • switch_rule.multiopt ";"

    $default  reduce using rule 394 (switch_rule.multiopt)

    switch_rule.multiopt  go to state 803


State 704

  399 switch_rule: switch_label • "->" expression ";"
  400            | switch_label • "->" block
  401            | switch_label • "->" throw_statement

    "->"  shift, and go to state 804


State 705

   45 an_sp.multiopt: an_sp.multiopt annotation.multiopt • "[" "]"
  329 annotation.multiopt: annotation.multiopt • annotation

    "@"  shift, and go to state 11
    "["  shift, and go to state 805

    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 706

  506 method_invocation: type_name "." "super" "." type_arguments.opt TOK_IDENTIFIER • "(" argument_list.opt ")"

    "("  shift, and go to state 806


State 707

  514 method_reference: type_name "." "super" "::" type_arguments.opt TOK_IDENTIFIER •

    $default  reduce using rule 514 (method_reference)


State 708

  502 method_invocation: type_name "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt • ")"

    ")"  shift, and go to state 807


State 709

  503 method_invocation: expression_name "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt • ")"

    ")"  shift, and go to state 808


State 710

  508 com_expression.multiopt: com_expression.multiopt "," expression •

    $default  reduce using rule 508 (com_expression.multiopt)


State 711

  504 method_invocation: primary "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt • ")"

    ")"  shift, and go to state 809


State 712

  160 variable_declarator_list: variable_declarator com_variable_declarator.multiopt •
  161 com_variable_declarator.multiopt: com_variable_declarator.multiopt • "," variable_declarator

    ","  shift, and go to state 810

    ","       [reduce using rule 160 (variable_declarator_list)]
    $default  reduce using rule 160 (variable_declarator_list)


State 713

  164 eq_variable_initializer.opt: "=" • variable_initializer

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "{"             shift, and go to state 449
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    variable_initializer                            go to state 811
    annotation.multiopt                             go to state 125
    array_initializer                               go to state 604
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 607
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 714

  163 variable_declarator: variable_declarator_id eq_variable_initializer.opt •

    $default  reduce using rule 163 (variable_declarator)


State 715

   72 package_name: package_name "." • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 341


State 716

  121 to_module_names.opt: "to" • module_name com_module_name.multiopt

    TOK_IDENTIFIER  shift, and go to state 720

    module_name  go to state 812


State 717

  115 module_directive: "exports" package_name to_module_names.opt • ";"
  122 to_module_names.opt: to_module_names.opt • "to" module_name com_module_name.multiopt

    ";"   shift, and go to state 813
    "to"  shift, and go to state 814


State 718

  116 module_directive: "opens" package_name to_module_names.opt • ";"
  122 to_module_names.opt: to_module_names.opt • "to" module_name com_module_name.multiopt

    ";"   shift, and go to state 815
    "to"  shift, and go to state 814


State 719

  118 module_directive: "provides" type_name "with" • type_name com_type_name.multiopt ";"

    TOK_IDENTIFIER  shift, and go to state 37

    type_IDENTIFIER       go to state 38
    type_name             go to state 816
    package_or_type_name  go to state 40


State 720

   69 module_name: TOK_IDENTIFIER •

    $default  reduce using rule 69 (module_name)


State 721

   70 module_name: module_name • "." TOK_IDENTIFIER
  114 module_directive: "requires" modifier.multiopt module_name • ";"

    "."  shift, and go to state 817
    ";"  shift, and go to state 818


State 722

  117 module_directive: "uses" type_name ";" •

    $default  reduce using rule 117 (module_directive)


State 723

  166 variable_declarator_id: TOK_IDENTIFIER • dims.opt
  304 annotation_interface_element_declaration: modifier.multiopt unann_type TOK_IDENTIFIER • "(" ")" dims.opt default_value.opt ";"

    "("  shift, and go to state 819

    "@"       reduce using rule 330 (annotation.multiopt)
    "["       reduce using rule 330 (annotation.multiopt)
    $default  reduce using rule 168 (dims.opt)

    dims                 go to state 452
    dims.opt             go to state 663
    annotation.multiopt  go to state 212


State 724

  293 constant_declaration: modifier.multiopt unann_type variable_declarator_list • ";"

    ";"  shift, and go to state 820


State 725

   55 type_bound: "extends" class_or_interface_type additional_bound.multiopt •
  618 additional_bound.multiopt: additional_bound.multiopt • additional_bound

    "&"  shift, and go to state 435

    $default  reduce using rule 55 (type_bound)

    additional_bound  go to state 437


State 726

  119 com_type_name.multiopt: com_type_name.multiopt • "," type_name
  147 class_permits: "permits" type_name com_type_name.multiopt •

    ","  shift, and go to state 732

    $default  reduce using rule 147 (class_permits)


State 727

  148 class_body: "{" class_body_declaration.multiopt • "}"
  149 class_body_declaration.multiopt: class_body_declaration.multiopt • class_body_declaration

    "static"  shift, and go to state 743
    "{"       shift, and go to state 438
    "}"       shift, and go to state 821

    "static"  [reduce using rule 3 (modifier.multiopt)]
    $default  reduce using rule 3 (modifier.multiopt)

    modifier.multiopt                 go to state 822
    class_declaration                 go to state 746
    normal_class_declaration          go to state 31
    class_body_declaration            go to state 823
    class_member_declaration          go to state 748
    field_declaration                 go to state 749
    method_declaration                go to state 750
    instance_initializer              go to state 751
    static_initializer                go to state 752
    constructor_declaration           go to state 753
    enum_declaration                  go to state 32
    record_declaration                go to state 33
    interface_declaration             go to state 756
    normal_interface_declaration      go to state 35
    annotation_interface_declaration  go to state 36
    block                             go to state 757


State 728

  149 class_body_declaration.multiopt: class_body_declaration.multiopt • class_body_declaration
  256 enum_body_declarations: ";" class_body_declaration.multiopt •

    "static"  shift, and go to state 743
    "{"       shift, and go to state 438

    "static"  [reduce using rule 3 (modifier.multiopt)]
    "}"       reduce using rule 256 (enum_body_declarations)
    $default  reduce using rule 3 (modifier.multiopt)

    modifier.multiopt                 go to state 822
    class_declaration                 go to state 746
    normal_class_declaration          go to state 31
    class_body_declaration            go to state 823
    class_member_declaration          go to state 748
    field_declaration                 go to state 749
    method_declaration                go to state 750
    instance_initializer              go to state 751
    static_initializer                go to state 752
    constructor_declaration           go to state 753
    enum_declaration                  go to state 32
    record_declaration                go to state 33
    interface_declaration             go to state 756
    normal_interface_declaration      go to state 35
    annotation_interface_declaration  go to state 36
    block                             go to state 757


State 729

  240 enum_body: "{" enum_constant_list.opt com.opt enum_body_declarations.opt "}" •

    $default  reduce using rule 240 (enum_body)


State 730

  248 com_enum_constant.multiopt: com_enum_constant.multiopt "," enum_constant •

    $default  reduce using rule 248 (com_enum_constant.multiopt)


State 731

  250 enum_constant: enum_modifier.multiopt TOK_IDENTIFIER "[" "(" • argument_list.opt ")" "]" class_body.opt

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 238 (argument_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    argument_list.opt                               go to state 824
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    argument_list                                   go to state 353
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 354
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 732

  119 com_type_name.multiopt: com_type_name.multiopt "," • type_name

    TOK_IDENTIFIER  shift, and go to state 37

    type_IDENTIFIER       go to state 38
    type_name             go to state 825
    package_or_type_name  go to state 40


State 733

  292 interface_member_declaration: ";" •

    $default  reduce using rule 292 (interface_member_declaration)


State 734

  285 interface_body: "{" interface_member_declaration.multiopt "}" •

    $default  reduce using rule 285 (interface_body)


State 735

    2 modifier.multiopt: modifier.multiopt • modifier
  129 normal_class_declaration: modifier.multiopt • "class" type_IDENTIFIER type_parameters.opt class_extends.opt class_implements.opt class_permits.opt class_body
  239 enum_declaration: modifier.multiopt • "enum" type_IDENTIFIER class_implements.opt enum_body
  257 record_declaration: modifier.multiopt • "record" type_IDENTIFIER type_parameters.opt record_header class_implements.opt record_body
  278 normal_interface_declaration: modifier.multiopt • "interface" type_IDENTIFIER type_parameters.opt interface_extends.opt interface_permits.opt interface_body
  293 constant_declaration: modifier.multiopt • unann_type variable_declarator_list ";"
  294 interface_method_declaration: modifier.multiopt • method_header method_body
  295 annotation_interface_declaration: modifier.multiopt • "@" "interface" type_IDENTIFIER annotation_interface_body

    TOK_IDENTIFIER  shift, and go to state 414
    "<"             shift, and go to state 165
    "@"             shift, and go to state 48
    "abstract"      shift, and go to state 49
    "boolean"       shift, and go to state 415
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "class"         shift, and go to state 50
    "double"        shift, and go to state 91
    "enum"          shift, and go to state 51
    "final"         shift, and go to state 52
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "interface"     shift, and go to state 53
    "long"          shift, and go to state 94
    "private"       shift, and go to state 54
    "protected"     shift, and go to state 55
    "public"        shift, and go to state 56
    "record"        shift, and go to state 57
    "sealed"        shift, and go to state 58
    "short"         shift, and go to state 96
    "static"        shift, and go to state 59
    "strictfp"      shift, and go to state 60
    "transient"     shift, and go to state 61
    "transitive"    shift, and go to state 62
    "void"          shift, and go to state 826
    "volatile"      shift, and go to state 63

    modifier                       go to state 64
    type_IDENTIFIER                go to state 418
    numeric_type                   go to state 419
    integral_type                  go to state 106
    floating_point_type            go to state 107
    package_name                   go to state 420
    type_parameters                go to state 827
    unann_type                     go to state 828
    unann_primitive_type           go to state 422
    unann_reference_type           go to state 423
    unann_class_or_interface_type  go to state 424
    unann_class_type               go to state 425
    unann_interface_type           go to state 426
    unann_type_variable            go to state 427
    unann_array_type               go to state 428
    method_header                  go to state 829
    result                         go to state 830
    annotation                     go to state 65
    normal_annotation              go to state 15
    marker_annotation              go to state 16
    single_element_annotation      go to state 17


State 736

  290 interface_member_declaration: class_declaration •

    $default  reduce using rule 290 (interface_member_declaration)


State 737

  291 interface_member_declaration: interface_declaration •

    $default  reduce using rule 291 (interface_member_declaration)


State 738

  286 interface_member_declaration.multiopt: interface_member_declaration.multiopt interface_member_declaration •

    $default  reduce using rule 286 (interface_member_declaration.multiopt)


State 739

  288 interface_member_declaration: constant_declaration •

    $default  reduce using rule 288 (interface_member_declaration)


State 740

  289 interface_member_declaration: interface_method_declaration •

    $default  reduce using rule 289 (interface_member_declaration)


State 741

  262 com_record_component.multiopt: com_record_component.multiopt "," record_component •

    $default  reduce using rule 262 (com_record_component.multiopt)


State 742

  268 variable_arity_record_component: record_component_modifier.multiopt unann_type annotation.multiopt "..." • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 831


State 743

  224 static_initializer: "static" • block

    "{"  shift, and go to state 438

    block  go to state 832


State 744

  270 record_body: "{" record_body_declaration.multiopt "}" •

    $default  reduce using rule 270 (record_body)


State 745

    2 modifier.multiopt: modifier.multiopt • modifier
  129 normal_class_declaration: modifier.multiopt • "class" type_IDENTIFIER type_parameters.opt class_extends.opt class_implements.opt class_permits.opt class_body
  159 field_declaration: modifier.multiopt • unann_type variable_declarator_list ";"
  190 method_declaration: modifier.multiopt • method_header method_body
  225 constructor_declaration: modifier.multiopt • constructor_declarator throws.opt constructor_body
  239 enum_declaration: modifier.multiopt • "enum" type_IDENTIFIER class_implements.opt enum_body
  257 record_declaration: modifier.multiopt • "record" type_IDENTIFIER type_parameters.opt record_header class_implements.opt record_body
  275 compact_constructor_declaration: modifier.multiopt • simple_type_name constructor_body
  278 normal_interface_declaration: modifier.multiopt • "interface" type_IDENTIFIER type_parameters.opt interface_extends.opt interface_permits.opt interface_body
  295 annotation_interface_declaration: modifier.multiopt • "@" "interface" type_IDENTIFIER annotation_interface_body

    TOK_IDENTIFIER  shift, and go to state 414
    "<"             shift, and go to state 165
    "@"             shift, and go to state 48
    "abstract"      shift, and go to state 49
    "boolean"       shift, and go to state 415
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "class"         shift, and go to state 50
    "double"        shift, and go to state 91
    "enum"          shift, and go to state 51
    "final"         shift, and go to state 52
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "interface"     shift, and go to state 53
    "long"          shift, and go to state 94
    "private"       shift, and go to state 54
    "protected"     shift, and go to state 55
    "public"        shift, and go to state 56
    "record"        shift, and go to state 57
    "sealed"        shift, and go to state 58
    "short"         shift, and go to state 96
    "static"        shift, and go to state 59
    "strictfp"      shift, and go to state 60
    "transient"     shift, and go to state 61
    "transitive"    shift, and go to state 62
    "void"          shift, and go to state 826
    "volatile"      shift, and go to state 63

    TOK_IDENTIFIER  [reduce using rule 131 (type_parameters.opt)]

    modifier                       go to state 64
    type_IDENTIFIER                go to state 833
    numeric_type                   go to state 419
    integral_type                  go to state 106
    floating_point_type            go to state 107
    package_name                   go to state 420
    type_parameters.opt            go to state 834
    type_parameters                go to state 835
    unann_type                     go to state 836
    unann_primitive_type           go to state 422
    unann_reference_type           go to state 423
    unann_class_or_interface_type  go to state 424
    unann_class_type               go to state 425
    unann_interface_type           go to state 426
    unann_type_variable            go to state 427
    unann_array_type               go to state 428
    method_header                  go to state 837
    result                         go to state 830
    constructor_declarator         go to state 838
    simple_type_name               go to state 839
    annotation                     go to state 65
    normal_annotation              go to state 15
    marker_annotation              go to state 16
    single_element_annotation      go to state 17


State 746

  157 class_member_declaration: class_declaration •

    $default  reduce using rule 157 (class_member_declaration)


State 747

  273 record_body_declaration: class_body_declaration •

    $default  reduce using rule 273 (record_body_declaration)


State 748

  151 class_body_declaration: class_member_declaration •

    $default  reduce using rule 151 (class_body_declaration)


State 749

  155 class_member_declaration: field_declaration •

    $default  reduce using rule 155 (class_member_declaration)


State 750

  156 class_member_declaration: method_declaration •

    $default  reduce using rule 156 (class_member_declaration)


State 751

  152 class_body_declaration: instance_initializer •

    $default  reduce using rule 152 (class_body_declaration)


State 752

  153 class_body_declaration: static_initializer •

    $default  reduce using rule 153 (class_body_declaration)


State 753

  154 class_body_declaration: constructor_declaration •

    $default  reduce using rule 154 (class_body_declaration)


State 754

  271 record_body_declaration.multiopt: record_body_declaration.multiopt record_body_declaration •

    $default  reduce using rule 271 (record_body_declaration.multiopt)


State 755

  274 record_body_declaration: compact_constructor_declaration •

    $default  reduce using rule 274 (record_body_declaration)


State 756

  158 class_member_declaration: interface_declaration •

    $default  reduce using rule 158 (class_member_declaration)


State 757

  223 instance_initializer: block •

    $default  reduce using rule 223 (instance_initializer)


State 758

  181 unann_class_type: package_name "." annotation.multiopt type_IDENTIFIER • type_arguments.opt

    "<"  shift, and go to state 196

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 840


State 759

  212 variable_arity_parameter: variable_modifier.multiopt unann_type annotation.multiopt "..." TOK_IDENTIFIER •

    $default  reduce using rule 212 (variable_arity_parameter)


State 760

  182 unann_class_type: unann_class_or_interface_type "." annotation.multiopt type_IDENTIFIER • type_arguments.opt

    "<"  shift, and go to state 196

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 841


State 761

  375 labeled_statement: TOK_IDENTIFIER ":" statement •

    $default  reduce using rule 375 (labeled_statement)


State 762

  389 assert_statement: "assert" expression ":" • expression ";"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 842
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 763

  388 assert_statement: "assert" expression ";" •

    $default  reduce using rule 388 (assert_statement)


State 764

  431 break_statement: "break" IDENTIFIER.opt ";" •

    $default  reduce using rule 431 (break_statement)


State 765

  435 continue_statement: "continue" IDENTIFIER.opt ";" •

    $default  reduce using rule 435 (continue_statement)


State 766

  410 do_statement: "do" statement "while" • "(" expression ")" ";"

    "("  shift, and go to state 843


State 767

  424 for_init: local_variable_declaration •
  429 enhanced_for_statement: "for" "(" local_variable_declaration • ":" expression ")" statement

    ":"  shift, and go to state 844

    $default  reduce using rule 424 (for_init)


State 768

  426 statement_expression_list: statement_expression • com_statement_expression.multiopt

    $default  reduce using rule 428 (com_statement_expression.multiopt)

    com_statement_expression.multiopt  go to state 845


State 769

  415 basic_for_statement: "for" "(" for_init.opt • ";" expression.opt ";" for_update.opt ")" statement

    ";"  shift, and go to state 846


State 770

  416 for_init.opt: for_init •

    $default  reduce using rule 416 (for_init.opt)


State 771

  423 for_init: statement_expression_list •

    $default  reduce using rule 423 (for_init)


State 772

  385 if_then_statement: "if" "(" expression • ")" statement
  386 if_then_else_statement: "if" "(" expression • ")" statement_no_short_if "else" statement

    ")"  shift, and go to state 847


State 773

  436 return_statement: "return" expression.opt ";" •

    $default  reduce using rule 436 (return_statement)


State 774

  390 switch_statement: "switch" "(" expression • ")" switch_block

    ")"  shift, and go to state 848


State 775

  438 synchronized_statement: "synchronized" "(" expression • ")" block

    ")"  shift, and go to state 849


State 776

  437 throw_statement: "throw" expression ";" •

    $default  reduce using rule 437 (throw_statement)


State 777

  464 variable_access: expression_name •
  487 class_instance_creation_expression: expression_name • "." unqualified_class_instance_creation_expression
  499 array_access: expression_name • "[" expression "]"
  503 method_invocation: expression_name • "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  510 method_reference: expression_name • "::" type_arguments.opt TOK_IDENTIFIER

    "."   shift, and go to state 223
    "::"  shift, and go to state 224
    "["   shift, and go to state 225

    $default  reduce using rule 464 (variable_access)


State 778

  462 resource: local_variable_declaration •

    $default  reduce using rule 462 (resource)


State 779

  456 resource_specification: "(" resource_list • semcol.opt ")"

    ";"  shift, and go to state 850

    $default  reduce using rule 458 (semcol.opt)

    semcol.opt  go to state 851


State 780

  459 resource_list: resource • semcol_resource.multiopt

    $default  reduce using rule 461 (semcol_resource.multiopt)

    semcol_resource.multiopt  go to state 852


State 781

  463 resource: variable_access •

    $default  reduce using rule 463 (resource)


State 782

  488 class_instance_creation_expression: primary • "." unqualified_class_instance_creation_expression
  496 field_access: primary • "." TOK_IDENTIFIER
  504 method_invocation: primary • "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  511 method_reference: primary • "::" type_arguments.opt TOK_IDENTIFIER

    "."   shift, and go to state 234
    "::"  shift, and go to state 235


State 783

  465 variable_access: field_access •
  476 primary_no_new_array: field_access •

    ")"       reduce using rule 465 (variable_access)
    ";"       reduce using rule 465 (variable_access)
    $default  reduce using rule 476 (primary_no_new_array)


State 784

  447 catch_clause: "catch" • "(" catch_formal_parameter ")" block

    "("  shift, and go to state 853


State 785

  440 try_statement: "try" block catches.opt • finally

    "finally"  shift, and go to state 854

    finally  go to state 855


State 786

  439 try_statement: "try" block catches •
  442 catches.opt: catches •

    "finally"  reduce using rule 442 (catches.opt)
    $default   reduce using rule 439 (try_statement)


State 787

  444 catches: catch_clause • catch_clause.multiopt

    $default  reduce using rule 446 (catch_clause.multiopt)

    catch_clause.multiopt  go to state 856


State 788

  453 try_with_resources_statement: "try" resource_specification block • catches.opt finally.opt

    "catch"  shift, and go to state 784

    $default  reduce using rule 443 (catches.opt)

    catches.opt   go to state 857
    catches       go to state 858
    catch_clause  go to state 787


State 789

  408 while_statement: "while" "(" expression • ")" statement

    ")"  shift, and go to state 859


State 790

  434 yield_statement: "yield" expression ";" •

    $default  reduce using rule 434 (yield_statement)


State 791

  339 block_statement.multiopt: block_statement.multiopt block_statement •

    $default  reduce using rule 339 (block_statement.multiopt)


State 792

  335 com_variable_initializer.multiopt: com_variable_initializer.multiopt "," • variable_initializer

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "{"             shift, and go to state 449
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    variable_initializer                            go to state 860
    annotation.multiopt                             go to state 125
    array_initializer                               go to state 604
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 607
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 793

  331 array_initializer: "{" variable_initializer_list.opt com.opt "}" •

    $default  reduce using rule 331 (array_initializer)


State 794

  329 annotation.multiopt: annotation.multiopt • annotation
  491 dot_annotation.multiopt_IDENTIFIER.multiopt: dot_annotation.multiopt_IDENTIFIER.multiopt "." annotation.multiopt • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 861
    "@"             shift, and go to state 11

    annotation                 go to state 47
    normal_annotation          go to state 15
    marker_annotation          go to state 16
    single_element_annotation  go to state 17


State 795

  253 class_body.opt: class_body •

    $default  reduce using rule 253 (class_body.opt)


State 796

  489 unqualified_class_instance_creation_expression: "new" type_arguments.opt class_or_interface_type_to_instantiate "(" argument_list.opt ")" class_body.opt •

    $default  reduce using rule 489 (unqualified_class_instance_creation_expression)


State 797

  505 method_invocation: "super" "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")" •

    $default  reduce using rule 505 (method_invocation)


State 798

  403 switch_label: "case" case_constant • com_case_constant.multiopt

    $default  reduce using rule 406 (com_case_constant.multiopt)

    com_case_constant.multiopt  go to state 862


State 799

  407 case_constant: conditional_expression •

    $default  reduce using rule 407 (case_constant)


State 800

  392 switch_block: "{" switch_block_statement_group.multiopt switch_label_col.multiopt • "}"
  397 switch_label_col.multiopt: switch_label_col.multiopt • switch_label ":"

    "case"     shift, and go to state 700
    "default"  shift, and go to state 701
    "}"        shift, and go to state 863

    switch_label  go to state 864


State 801

  395 switch_block_statement_group.multiopt: switch_block_statement_group.multiopt switch_block_statement_group •

    $default  reduce using rule 395 (switch_block_statement_group.multiopt)


State 802

  402 switch_block_statement_group: switch_label • ":" switch_label_col.multiopt block_statements

    ":"  shift, and go to state 865


State 803

  391 switch_block: "{" switch_rule switch_rule.multiopt • ";"
  393 switch_rule.multiopt: switch_rule.multiopt • switch_rule

    ";"        shift, and go to state 866
    "case"     shift, and go to state 700
    "default"  shift, and go to state 701

    switch_rule   go to state 867
    switch_label  go to state 704


State 804

  399 switch_rule: switch_label "->" • expression ";"
  400            | switch_label "->" • block
  401            | switch_label "->" • throw_statement

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "void"          shift, and go to state 100
    "{"             shift, and go to state 438
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 868
    throw_statement                                 go to state 869
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 870
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 805

   45 an_sp.multiopt: an_sp.multiopt annotation.multiopt "[" • "]"

    "]"  shift, and go to state 871


State 806

  506 method_invocation: type_name "." "super" "." type_arguments.opt TOK_IDENTIFIER "(" • argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 238 (argument_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    argument_list.opt                               go to state 872
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    argument_list                                   go to state 353
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 354
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 807

  502 method_invocation: type_name "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")" •

    $default  reduce using rule 502 (method_invocation)


State 808

  503 method_invocation: expression_name "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")" •

    $default  reduce using rule 503 (method_invocation)


State 809

  504 method_invocation: primary "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")" •

    $default  reduce using rule 504 (method_invocation)


State 810

  161 com_variable_declarator.multiopt: com_variable_declarator.multiopt "," • variable_declarator

    TOK_IDENTIFIER  shift, and go to state 534

    variable_declarator     go to state 873
    variable_declarator_id  go to state 631


State 811

  164 eq_variable_initializer.opt: "=" variable_initializer •

    $default  reduce using rule 164 (eq_variable_initializer.opt)


State 812

   70 module_name: module_name • "." TOK_IDENTIFIER
  121 to_module_names.opt: "to" module_name • com_module_name.multiopt

    "."  shift, and go to state 817

    $default  reduce using rule 125 (com_module_name.multiopt)

    com_module_name.multiopt  go to state 874


State 813

  115 module_directive: "exports" package_name to_module_names.opt ";" •

    $default  reduce using rule 115 (module_directive)


State 814

  122 to_module_names.opt: to_module_names.opt "to" • module_name com_module_name.multiopt

    TOK_IDENTIFIER  shift, and go to state 720

    module_name  go to state 875


State 815

  116 module_directive: "opens" package_name to_module_names.opt ";" •

    $default  reduce using rule 116 (module_directive)


State 816

  118 module_directive: "provides" type_name "with" type_name • com_type_name.multiopt ";"

    $default  reduce using rule 120 (com_type_name.multiopt)

    com_type_name.multiopt  go to state 876


State 817

   70 module_name: module_name "." • TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 877


State 818

  114 module_directive: "requires" modifier.multiopt module_name ";" •

    $default  reduce using rule 114 (module_directive)


State 819

  304 annotation_interface_element_declaration: modifier.multiopt unann_type TOK_IDENTIFIER "(" • ")" dims.opt default_value.opt ";"

    ")"  shift, and go to state 878


State 820

  293 constant_declaration: modifier.multiopt unann_type variable_declarator_list ";" •

    $default  reduce using rule 293 (constant_declaration)


State 821

  148 class_body: "{" class_body_declaration.multiopt "}" •

    $default  reduce using rule 148 (class_body)


State 822

    2 modifier.multiopt: modifier.multiopt • modifier
  129 normal_class_declaration: modifier.multiopt • "class" type_IDENTIFIER type_parameters.opt class_extends.opt class_implements.opt class_permits.opt class_body
  159 field_declaration: modifier.multiopt • unann_type variable_declarator_list ";"
  190 method_declaration: modifier.multiopt • method_header method_body
  225 constructor_declaration: modifier.multiopt • constructor_declarator throws.opt constructor_body
  239 enum_declaration: modifier.multiopt • "enum" type_IDENTIFIER class_implements.opt enum_body
  257 record_declaration: modifier.multiopt • "record" type_IDENTIFIER type_parameters.opt record_header class_implements.opt record_body
  278 normal_interface_declaration: modifier.multiopt • "interface" type_IDENTIFIER type_parameters.opt interface_extends.opt interface_permits.opt interface_body
  295 annotation_interface_declaration: modifier.multiopt • "@" "interface" type_IDENTIFIER annotation_interface_body

    TOK_IDENTIFIER  shift, and go to state 414
    "<"             shift, and go to state 165
    "@"             shift, and go to state 48
    "abstract"      shift, and go to state 49
    "boolean"       shift, and go to state 415
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "class"         shift, and go to state 50
    "double"        shift, and go to state 91
    "enum"          shift, and go to state 51
    "final"         shift, and go to state 52
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "interface"     shift, and go to state 53
    "long"          shift, and go to state 94
    "private"       shift, and go to state 54
    "protected"     shift, and go to state 55
    "public"        shift, and go to state 56
    "record"        shift, and go to state 57
    "sealed"        shift, and go to state 58
    "short"         shift, and go to state 96
    "static"        shift, and go to state 59
    "strictfp"      shift, and go to state 60
    "transient"     shift, and go to state 61
    "transitive"    shift, and go to state 62
    "void"          shift, and go to state 826
    "volatile"      shift, and go to state 63

    TOK_IDENTIFIER  [reduce using rule 131 (type_parameters.opt)]

    modifier                       go to state 64
    type_IDENTIFIER                go to state 418
    numeric_type                   go to state 419
    integral_type                  go to state 106
    floating_point_type            go to state 107
    package_name                   go to state 420
    type_parameters.opt            go to state 834
    type_parameters                go to state 835
    unann_type                     go to state 836
    unann_primitive_type           go to state 422
    unann_reference_type           go to state 423
    unann_class_or_interface_type  go to state 424
    unann_class_type               go to state 425
    unann_interface_type           go to state 426
    unann_type_variable            go to state 427
    unann_array_type               go to state 428
    method_header                  go to state 837
    result                         go to state 830
    constructor_declarator         go to state 838
    annotation                     go to state 65
    normal_annotation              go to state 15
    marker_annotation              go to state 16
    single_element_annotation      go to state 17


State 823

  149 class_body_declaration.multiopt: class_body_declaration.multiopt class_body_declaration •

    $default  reduce using rule 149 (class_body_declaration.multiopt)


State 824

  250 enum_constant: enum_modifier.multiopt TOK_IDENTIFIER "[" "(" argument_list.opt • ")" "]" class_body.opt

    ")"  shift, and go to state 879


State 825

  119 com_type_name.multiopt: com_type_name.multiopt "," type_name •

    $default  reduce using rule 119 (com_type_name.multiopt)


State 826

  196 result: "void" •

    $default  reduce using rule 196 (result)


State 827

  192 method_header: type_parameters • annotation.multiopt result method_declarator throws.opt

    $default  reduce using rule 330 (annotation.multiopt)

    annotation.multiopt  go to state 880


State 828

  195 result: unann_type •
  293 constant_declaration: modifier.multiopt unann_type • variable_declarator_list ";"

    TOK_IDENTIFIER  shift, and go to state 534

    TOK_IDENTIFIER  [reduce using rule 195 (result)]

    variable_declarator_list  go to state 724
    variable_declarator       go to state 630
    variable_declarator_id    go to state 631


State 829

  294 interface_method_declaration: modifier.multiopt method_header • method_body

    ";"  shift, and go to state 881
    "{"  shift, and go to state 438

    method_body  go to state 882
    block        go to state 883


State 830

  191 method_header: result • method_declarator throws.opt

    TOK_IDENTIFIER  shift, and go to state 884

    method_declarator  go to state 885


State 831

  268 variable_arity_record_component: record_component_modifier.multiopt unann_type annotation.multiopt "..." TOK_IDENTIFIER •

    $default  reduce using rule 268 (variable_arity_record_component)


State 832

  224 static_initializer: "static" block •

    $default  reduce using rule 224 (static_initializer)


State 833

  180 unann_class_type: type_IDENTIFIER • type_arguments.opt
  186 unann_type_variable: type_IDENTIFIER •
  227 simple_type_name: type_IDENTIFIER •

    "<"  shift, and go to state 196

    TOK_IDENTIFIER  reduce using rule 184 (type_arguments.opt)
    TOK_IDENTIFIER  [reduce using rule 186 (unann_type_variable)]
    "@"             reduce using rule 184 (type_arguments.opt)
    "@"             [reduce using rule 186 (unann_type_variable)]
    "["             reduce using rule 184 (type_arguments.opt)
    "["             [reduce using rule 186 (unann_type_variable)]
    "{"             reduce using rule 227 (simple_type_name)
    $default        reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 527


State 834

  226 constructor_declarator: type_parameters.opt • simple_type_name "(" receiver_parameter_com.opt formal_parameter_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 75

    type_IDENTIFIER   go to state 886
    simple_type_name  go to state 887


State 835

  130 type_parameters.opt: type_parameters •
  192 method_header: type_parameters • annotation.multiopt result method_declarator throws.opt

    TOK_IDENTIFIER  reduce using rule 130 (type_parameters.opt)
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    annotation.multiopt  go to state 880


State 836

  159 field_declaration: modifier.multiopt unann_type • variable_declarator_list ";"
  195 result: unann_type •

    TOK_IDENTIFIER  shift, and go to state 534

    TOK_IDENTIFIER  [reduce using rule 195 (result)]

    variable_declarator_list  go to state 888
    variable_declarator       go to state 630
    variable_declarator_id    go to state 631


State 837

  190 method_declaration: modifier.multiopt method_header • method_body

    ";"  shift, and go to state 881
    "{"  shift, and go to state 438

    method_body  go to state 889
    block        go to state 883


State 838

  225 constructor_declaration: modifier.multiopt constructor_declarator • throws.opt constructor_body

    "throws"  shift, and go to state 890

    $default  reduce using rule 194 (throws.opt)

    throws.opt  go to state 891
    throws      go to state 892


State 839

  275 compact_constructor_declaration: modifier.multiopt simple_type_name • constructor_body

    "{"  shift, and go to state 893

    constructor_body  go to state 894


State 840

  181 unann_class_type: package_name "." annotation.multiopt type_IDENTIFIER type_arguments.opt •

    $default  reduce using rule 181 (unann_class_type)


State 841

  182 unann_class_type: unann_class_or_interface_type "." annotation.multiopt type_IDENTIFIER type_arguments.opt •

    $default  reduce using rule 182 (unann_class_type)


State 842

  389 assert_statement: "assert" expression ":" expression • ";"

    ";"  shift, and go to state 895


State 843

  410 do_statement: "do" statement "while" "(" • expression ")" ";"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 896
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 844

  429 enhanced_for_statement: "for" "(" local_variable_declaration ":" • expression ")" statement

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 897
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 845

  426 statement_expression_list: statement_expression com_statement_expression.multiopt •
  427 com_statement_expression.multiopt: com_statement_expression.multiopt • "," statement_expression

    ","  shift, and go to state 898

    $default  reduce using rule 426 (statement_expression_list)


State 846

  415 basic_for_statement: "for" "(" for_init.opt ";" • expression.opt ";" for_update.opt ")" statement

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    ";"             reduce using rule 419 (expression.opt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    expression.opt                                  go to state 899
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 674
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 847

  385 if_then_statement: "if" "(" expression ")" • statement
  386 if_then_else_statement: "if" "(" expression ")" • statement_no_short_if "else" statement

    TOK_IDENTIFIER  shift, and go to state 900
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 901
    "if"            shift, and go to state 902
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 903
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 904
    statement_no_short_if                           go to state 905
    statement_without_trailing_substatement         go to state 906
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    labeled_statement_no_short_if                   go to state 907
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    if_then_else_statement_no_short_if              go to state 908
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    while_statement_no_short_if                     go to state 909
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    for_statement_no_short_if                       go to state 910
    basic_for_statement                             go to state 579
    basic_for_statement_no_short_if                 go to state 911
    enhanced_for_statement                          go to state 580
    enhanced_for_statement_no_short_if              go to state 912
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 848

  390 switch_statement: "switch" "(" expression ")" • switch_block

    "{"  shift, and go to state 614

    switch_block  go to state 913


State 849

  438 synchronized_statement: "synchronized" "(" expression ")" • block

    "{"  shift, and go to state 438

    block  go to state 914


State 850

  457 semcol.opt: ";" •

    $default  reduce using rule 457 (semcol.opt)


State 851

  456 resource_specification: "(" resource_list semcol.opt • ")"

    ")"  shift, and go to state 915


State 852

  459 resource_list: resource semcol_resource.multiopt •
  460 semcol_resource.multiopt: semcol_resource.multiopt • ";" resource

    ";"  shift, and go to state 916

    ";"       [reduce using rule 459 (resource_list)]
    $default  reduce using rule 459 (resource_list)


State 853

  447 catch_clause: "catch" "(" • catch_formal_parameter ")" block

    $default  reduce using rule 211 (variable_modifier.multiopt)

    variable_modifier.multiopt  go to state 917
    catch_formal_parameter      go to state 918


State 854

  452 finally: "finally" • block

    "{"  shift, and go to state 438

    block  go to state 919


State 855

  440 try_statement: "try" block catches.opt finally •

    $default  reduce using rule 440 (try_statement)


State 856

  444 catches: catch_clause catch_clause.multiopt •
  445 catch_clause.multiopt: catch_clause.multiopt • catch_clause

    "catch"  shift, and go to state 784

    $default  reduce using rule 444 (catches)

    catch_clause  go to state 920


State 857

  453 try_with_resources_statement: "try" resource_specification block catches.opt • finally.opt

    "finally"  shift, and go to state 854

    $default  reduce using rule 455 (finally.opt)

    finally      go to state 921
    finally.opt  go to state 922


State 858

  442 catches.opt: catches •

    $default  reduce using rule 442 (catches.opt)


State 859

  408 while_statement: "while" "(" expression ")" • statement

    TOK_IDENTIFIER  shift, and go to state 540
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 547
    "if"            shift, and go to state 548
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 554
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 923
    statement_without_trailing_substatement         go to state 567
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    basic_for_statement                             go to state 579
    enhanced_for_statement                          go to state 580
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 860

  335 com_variable_initializer.multiopt: com_variable_initializer.multiopt "," variable_initializer •

    $default  reduce using rule 335 (com_variable_initializer.multiopt)


State 861

  491 dot_annotation.multiopt_IDENTIFIER.multiopt: dot_annotation.multiopt_IDENTIFIER.multiopt "." annotation.multiopt TOK_IDENTIFIER •

    $default  reduce using rule 491 (dot_annotation.multiopt_IDENTIFIER.multiopt)


State 862

  403 switch_label: "case" case_constant com_case_constant.multiopt •
  405 com_case_constant.multiopt: com_case_constant.multiopt • "," case_constant

    ","  shift, and go to state 924

    $default  reduce using rule 403 (switch_label)


State 863

  392 switch_block: "{" switch_block_statement_group.multiopt switch_label_col.multiopt "}" •

    $default  reduce using rule 392 (switch_block)


State 864

  397 switch_label_col.multiopt: switch_label_col.multiopt switch_label • ":"

    ":"  shift, and go to state 925


State 865

  402 switch_block_statement_group: switch_label ":" • switch_label_col.multiopt block_statements

    $default  reduce using rule 398 (switch_label_col.multiopt)

    switch_label_col.multiopt  go to state 926


State 866

  391 switch_block: "{" switch_rule switch_rule.multiopt ";" •

    $default  reduce using rule 391 (switch_block)


State 867

  393 switch_rule.multiopt: switch_rule.multiopt switch_rule •

    $default  reduce using rule 393 (switch_rule.multiopt)


State 868

  400 switch_rule: switch_label "->" block •

    $default  reduce using rule 400 (switch_rule)


State 869

  401 switch_rule: switch_label "->" throw_statement •

    $default  reduce using rule 401 (switch_rule)


State 870

  399 switch_rule: switch_label "->" expression • ";"

    ";"  shift, and go to state 927


State 871

   45 an_sp.multiopt: an_sp.multiopt annotation.multiopt "[" "]" •

    $default  reduce using rule 45 (an_sp.multiopt)


State 872

  506 method_invocation: type_name "." "super" "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt • ")"

    ")"  shift, and go to state 928


State 873

  161 com_variable_declarator.multiopt: com_variable_declarator.multiopt "," variable_declarator •

    $default  reduce using rule 161 (com_variable_declarator.multiopt)


State 874

  121 to_module_names.opt: "to" module_name com_module_name.multiopt •
  124 com_module_name.multiopt: com_module_name.multiopt • "," module_name

    ","  shift, and go to state 929

    $default  reduce using rule 121 (to_module_names.opt)


State 875

   70 module_name: module_name • "." TOK_IDENTIFIER
  122 to_module_names.opt: to_module_names.opt "to" module_name • com_module_name.multiopt

    "."  shift, and go to state 817

    $default  reduce using rule 125 (com_module_name.multiopt)

    com_module_name.multiopt  go to state 930


State 876

  118 module_directive: "provides" type_name "with" type_name com_type_name.multiopt • ";"
  119 com_type_name.multiopt: com_type_name.multiopt • "," type_name

    ","  shift, and go to state 732
    ";"  shift, and go to state 931


State 877

   70 module_name: module_name "." TOK_IDENTIFIER •

    $default  reduce using rule 70 (module_name)


State 878

  304 annotation_interface_element_declaration: modifier.multiopt unann_type TOK_IDENTIFIER "(" ")" • dims.opt default_value.opt ";"

    "@"       reduce using rule 330 (annotation.multiopt)
    "["       reduce using rule 330 (annotation.multiopt)
    $default  reduce using rule 168 (dims.opt)

    dims                 go to state 452
    dims.opt             go to state 932
    annotation.multiopt  go to state 212


State 879

  250 enum_constant: enum_modifier.multiopt TOK_IDENTIFIER "[" "(" argument_list.opt ")" • "]" class_body.opt

    "]"  shift, and go to state 933


State 880

  192 method_header: type_parameters annotation.multiopt • result method_declarator throws.opt
  329 annotation.multiopt: annotation.multiopt • annotation

    TOK_IDENTIFIER  shift, and go to state 414
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 415
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "short"         shift, and go to state 96
    "void"          shift, and go to state 826

    type_IDENTIFIER                go to state 418
    numeric_type                   go to state 419
    integral_type                  go to state 106
    floating_point_type            go to state 107
    package_name                   go to state 420
    unann_type                     go to state 934
    unann_primitive_type           go to state 422
    unann_reference_type           go to state 423
    unann_class_or_interface_type  go to state 424
    unann_class_type               go to state 425
    unann_interface_type           go to state 426
    unann_type_variable            go to state 427
    unann_array_type               go to state 428
    result                         go to state 935
    annotation                     go to state 47
    normal_annotation              go to state 15
    marker_annotation              go to state 16
    single_element_annotation      go to state 17


State 881

  222 method_body: ";" •

    $default  reduce using rule 222 (method_body)


State 882

  294 interface_method_declaration: modifier.multiopt method_header method_body •

    $default  reduce using rule 294 (interface_method_declaration)


State 883

  221 method_body: block •

    $default  reduce using rule 221 (method_body)


State 884

  197 method_declarator: TOK_IDENTIFIER • "(" receiver_parameter_com.opt formal_parameter_list.opt ")" dims.opt

    "("  shift, and go to state 936


State 885

  191 method_header: result method_declarator • throws.opt

    "throws"  shift, and go to state 890

    $default  reduce using rule 194 (throws.opt)

    throws.opt  go to state 937
    throws      go to state 892


State 886

  227 simple_type_name: type_IDENTIFIER •

    $default  reduce using rule 227 (simple_type_name)


State 887

  226 constructor_declarator: type_parameters.opt simple_type_name • "(" receiver_parameter_com.opt formal_parameter_list.opt ")"

    "("  shift, and go to state 938


State 888

  159 field_declaration: modifier.multiopt unann_type variable_declarator_list • ";"

    ";"  shift, and go to state 939


State 889

  190 method_declaration: modifier.multiopt method_header method_body •

    $default  reduce using rule 190 (method_declaration)


State 890

  215 throws: "throws" • exception_type_list

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    class_or_interface_type  go to state 275
    class_type               go to state 940
    interface_type           go to state 111
    type_variable            go to state 941
    package_name             go to state 114
    exception_type_list      go to state 942
    exception_type           go to state 943
    annotation.multiopt      go to state 643


State 891

  225 constructor_declaration: modifier.multiopt constructor_declarator throws.opt • constructor_body

    "{"  shift, and go to state 893

    constructor_body  go to state 944


State 892

  193 throws.opt: throws •

    $default  reduce using rule 193 (throws.opt)


State 893

  228 constructor_body: "{" • explicit_constructor_invocation.opt block_statements.opt "}"

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "<"             shift, and go to state 196
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100

    TOK_IDENTIFIER  [reduce using rule 230 (explicit_constructor_invocation.opt)]
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    TOK_LITERAL     [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "("             [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "@"             reduce using rule 230 (explicit_constructor_invocation.opt)
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "new"           [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "short"         [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    "super"         [reduce using rule 184 (type_arguments.opt)]
    "super"         [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "this"          [reduce using rule 184 (type_arguments.opt)]
    "this"          [reduce using rule 230 (explicit_constructor_invocation.opt)]
    "void"          [reduce using rule 230 (explicit_constructor_invocation.opt)]
    $default        reduce using rule 230 (explicit_constructor_invocation.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    type_arguments                                  go to state 200
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 945
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    type_arguments.opt                              go to state 946
    explicit_constructor_invocation.opt             go to state 947
    explicit_constructor_invocation                 go to state 948
    annotation.multiopt                             go to state 125
    primary                                         go to state 949
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135


State 894

  275 compact_constructor_declaration: modifier.multiopt simple_type_name constructor_body •

    $default  reduce using rule 275 (compact_constructor_declaration)


State 895

  389 assert_statement: "assert" expression ":" expression ";" •

    $default  reduce using rule 389 (assert_statement)


State 896

  410 do_statement: "do" statement "while" "(" expression • ")" ";"

    ")"  shift, and go to state 950


State 897

  429 enhanced_for_statement: "for" "(" local_variable_declaration ":" expression • ")" statement

    ")"  shift, and go to state 951


State 898

  427 com_statement_expression.multiopt: com_statement_expression.multiopt "," • statement_expression

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    statement_expression                            go to state 952
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 899

  415 basic_for_statement: "for" "(" for_init.opt ";" expression.opt • ";" for_update.opt ")" statement

    ";"  shift, and go to state 953


State 900

   18 type_IDENTIFIER: TOK_IDENTIFIER •
   19 unqualified_method_IDENTIFIER: TOK_IDENTIFIER •
   71 package_name: TOK_IDENTIFIER •
   75 expression_name: TOK_IDENTIFIER •
   78 package_or_type_name: TOK_IDENTIFIER •
   80 ambiguous_name: TOK_IDENTIFIER •
  375 labeled_statement: TOK_IDENTIFIER • ":" statement
  376 labeled_statement_no_short_if: TOK_IDENTIFIER • ":" statement_no_short_if

    ":"  shift, and go to state 954

    "("       reduce using rule 19 (unqualified_method_IDENTIFIER)
    "."       reduce using rule 18 (type_IDENTIFIER)
    "."       [reduce using rule 71 (package_name)]
    "."       [reduce using rule 75 (expression_name)]
    "."       [reduce using rule 78 (package_or_type_name)]
    "."       [reduce using rule 80 (ambiguous_name)]
    "["       reduce using rule 18 (type_IDENTIFIER)
    "["       [reduce using rule 75 (expression_name)]
    $default  reduce using rule 75 (expression_name)


State 901

  415 basic_for_statement: "for" • "(" for_init.opt ";" expression.opt ";" for_update.opt ")" statement
  422 basic_for_statement_no_short_if: "for" • "(" for_init.opt ";" expression.opt ";" for_update.opt ")" statement_no_short_if
  429 enhanced_for_statement: "for" • "(" local_variable_declaration ":" expression ")" statement
  430 enhanced_for_statement_no_short_if: "for" • "(" local_variable_declaration ":" expression ")" statement_no_short_if

    "("  shift, and go to state 955


State 902

  385 if_then_statement: "if" • "(" expression ")" statement
  386 if_then_else_statement: "if" • "(" expression ")" statement_no_short_if "else" statement
  387 if_then_else_statement_no_short_if: "if" • "(" expression ")" statement_no_short_if "else" statement_no_short_if

    "("  shift, and go to state 956


State 903

  408 while_statement: "while" • "(" expression ")" statement
  409 while_statement_no_short_if: "while" • "(" expression ")" statement_no_short_if

    "("  shift, and go to state 957


State 904

  385 if_then_statement: "if" "(" expression ")" statement •

    $default  reduce using rule 385 (if_then_statement)


State 905

  386 if_then_else_statement: "if" "(" expression ")" statement_no_short_if • "else" statement

    "else"  shift, and go to state 958


State 906

  350 statement: statement_without_trailing_substatement •
  356 statement_no_short_if: statement_without_trailing_substatement •

    "else"    reduce using rule 356 (statement_no_short_if)
    $default  reduce using rule 350 (statement)


State 907

  357 statement_no_short_if: labeled_statement_no_short_if •

    $default  reduce using rule 357 (statement_no_short_if)


State 908

  358 statement_no_short_if: if_then_else_statement_no_short_if •

    $default  reduce using rule 358 (statement_no_short_if)


State 909

  359 statement_no_short_if: while_statement_no_short_if •

    $default  reduce using rule 359 (statement_no_short_if)


State 910

  360 statement_no_short_if: for_statement_no_short_if •

    $default  reduce using rule 360 (statement_no_short_if)


State 911

  413 for_statement_no_short_if: basic_for_statement_no_short_if •

    $default  reduce using rule 413 (for_statement_no_short_if)


State 912

  414 for_statement_no_short_if: enhanced_for_statement_no_short_if •

    $default  reduce using rule 414 (for_statement_no_short_if)


State 913

  390 switch_statement: "switch" "(" expression ")" switch_block •

    $default  reduce using rule 390 (switch_statement)


State 914

  438 synchronized_statement: "synchronized" "(" expression ")" block •

    $default  reduce using rule 438 (synchronized_statement)


State 915

  456 resource_specification: "(" resource_list semcol.opt ")" •

    $default  reduce using rule 456 (resource_specification)


State 916

  460 semcol_resource.multiopt: semcol_resource.multiopt ";" • resource

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100

    TOK_IDENTIFIER  [reduce using rule 211 (variable_modifier.multiopt)]
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 211 (variable_modifier.multiopt)
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 211 (variable_modifier.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 211 (variable_modifier.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 211 (variable_modifier.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 211 (variable_modifier.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 211 (variable_modifier.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 211 (variable_modifier.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 211 (variable_modifier.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 211 (variable_modifier.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 777
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    variable_modifier.multiopt                      go to state 376
    annotation.multiopt                             go to state 125
    local_variable_declaration                      go to state 778
    resource                                        go to state 959
    variable_access                                 go to state 781
    primary                                         go to state 782
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 783
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135


State 917

  210 variable_modifier.multiopt: variable_modifier.multiopt • variable_modifier
  448 catch_formal_parameter: variable_modifier.multiopt • catch_type variable_declarator_id

    TOK_IDENTIFIER  shift, and go to state 414
    "@"             shift, and go to state 11
    "final"         shift, and go to state 416

    type_IDENTIFIER                go to state 960
    package_name                   go to state 420
    unann_class_or_interface_type  go to state 961
    unann_class_type               go to state 962
    unann_interface_type           go to state 426
    variable_modifier              go to state 429
    annotation                     go to state 430
    normal_annotation              go to state 15
    marker_annotation              go to state 16
    single_element_annotation      go to state 17
    catch_type                     go to state 963


State 918

  447 catch_clause: "catch" "(" catch_formal_parameter • ")" block

    ")"  shift, and go to state 964


State 919

  452 finally: "finally" block •

    $default  reduce using rule 452 (finally)


State 920

  445 catch_clause.multiopt: catch_clause.multiopt catch_clause •

    $default  reduce using rule 445 (catch_clause.multiopt)


State 921

  454 finally.opt: finally •

    $default  reduce using rule 454 (finally.opt)


State 922

  453 try_with_resources_statement: "try" resource_specification block catches.opt finally.opt •

    $default  reduce using rule 453 (try_with_resources_statement)


State 923

  408 while_statement: "while" "(" expression ")" statement •

    $default  reduce using rule 408 (while_statement)


State 924

  405 com_case_constant.multiopt: com_case_constant.multiopt "," • case_constant

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    case_constant                                   go to state 965
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    conditional_expression                          go to state 799
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 925

  397 switch_label_col.multiopt: switch_label_col.multiopt switch_label ":" •

    $default  reduce using rule 397 (switch_label_col.multiopt)


State 926

  397 switch_label_col.multiopt: switch_label_col.multiopt • switch_label ":"
  402 switch_block_statement_group: switch_label ":" switch_label_col.multiopt • block_statements

    TOK_IDENTIFIER  shift, and go to state 540
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "case"          shift, and go to state 700
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "default"       shift, and go to state 701
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 547
    "if"            shift, and go to state 548
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 554
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 211 (variable_modifier.multiopt)]
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 3 (modifier.multiopt)
    "@"             [reduce using rule 211 (variable_modifier.multiopt)]
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 211 (variable_modifier.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 211 (variable_modifier.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 211 (variable_modifier.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 211 (variable_modifier.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "final"         reduce using rule 3 (modifier.multiopt)
    "final"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 211 (variable_modifier.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 211 (variable_modifier.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 211 (variable_modifier.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    "var"           reduce using rule 211 (variable_modifier.multiopt)
    $default        reduce using rule 3 (modifier.multiopt)

    modifier.multiopt                               go to state 556
    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    class_declaration                               go to state 557
    normal_class_declaration                        go to state 31
    variable_modifier.multiopt                      go to state 376
    enum_declaration                                go to state 32
    record_declaration                              go to state 33
    normal_interface_declaration                    go to state 559
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    block_statements                                go to state 966
    block_statement                                 go to state 562
    local_class_or_interface_declaration            go to state 563
    local_variable_declaration_statement            go to state 564
    local_variable_declaration                      go to state 565
    statement                                       go to state 566
    statement_without_trailing_substatement         go to state 567
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    switch_label                                    go to state 864
    while_statement                                 go to state 576
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    basic_for_statement                             go to state 579
    enhanced_for_statement                          go to state 580
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 927

  399 switch_rule: switch_label "->" expression ";" •

    $default  reduce using rule 399 (switch_rule)


State 928

  506 method_invocation: type_name "." "super" "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")" •

    $default  reduce using rule 506 (method_invocation)


State 929

  124 com_module_name.multiopt: com_module_name.multiopt "," • module_name

    TOK_IDENTIFIER  shift, and go to state 720

    module_name  go to state 967


State 930

  122 to_module_names.opt: to_module_names.opt "to" module_name com_module_name.multiopt •
  124 com_module_name.multiopt: com_module_name.multiopt • "," module_name

    ","  shift, and go to state 929

    $default  reduce using rule 122 (to_module_names.opt)


State 931

  118 module_directive: "provides" type_name "with" type_name com_type_name.multiopt ";" •

    $default  reduce using rule 118 (module_directive)


State 932

  304 annotation_interface_element_declaration: modifier.multiopt unann_type TOK_IDENTIFIER "(" ")" dims.opt • default_value.opt ";"

    "default"  shift, and go to state 968

    $default  reduce using rule 306 (default_value.opt)

    default_value.opt  go to state 969
    default_value      go to state 970


State 933

  250 enum_constant: enum_modifier.multiopt TOK_IDENTIFIER "[" "(" argument_list.opt ")" "]" • class_body.opt

    "{"  shift, and go to state 645

    $default  reduce using rule 254 (class_body.opt)

    class_body      go to state 795
    class_body.opt  go to state 971


State 934

  195 result: unann_type •

    $default  reduce using rule 195 (result)


State 935

  192 method_header: type_parameters annotation.multiopt result • method_declarator throws.opt

    TOK_IDENTIFIER  shift, and go to state 884

    method_declarator  go to state 972


State 936

  197 method_declarator: TOK_IDENTIFIER "(" • receiver_parameter_com.opt formal_parameter_list.opt ")" dims.opt

    TOK_IDENTIFIER  reduce using rule 199 (receiver_parameter_com.opt)
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 199 (receiver_parameter_com.opt)
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       reduce using rule 199 (receiver_parameter_com.opt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          reduce using rule 199 (receiver_parameter_com.opt)
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          reduce using rule 199 (receiver_parameter_com.opt)
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        reduce using rule 199 (receiver_parameter_com.opt)
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         reduce using rule 199 (receiver_parameter_com.opt)
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           reduce using rule 199 (receiver_parameter_com.opt)
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          reduce using rule 199 (receiver_parameter_com.opt)
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         reduce using rule 199 (receiver_parameter_com.opt)
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 199 (receiver_parameter_com.opt)

    receiver_parameter_com.opt  go to state 973
    receiver_parameter          go to state 974
    annotation.multiopt         go to state 975


State 937

  191 method_header: result method_declarator throws.opt •

    $default  reduce using rule 191 (method_header)


State 938

  226 constructor_declarator: type_parameters.opt simple_type_name "(" • receiver_parameter_com.opt formal_parameter_list.opt ")"

    TOK_IDENTIFIER  reduce using rule 199 (receiver_parameter_com.opt)
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 199 (receiver_parameter_com.opt)
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       reduce using rule 199 (receiver_parameter_com.opt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          reduce using rule 199 (receiver_parameter_com.opt)
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          reduce using rule 199 (receiver_parameter_com.opt)
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        reduce using rule 199 (receiver_parameter_com.opt)
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         reduce using rule 199 (receiver_parameter_com.opt)
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           reduce using rule 199 (receiver_parameter_com.opt)
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          reduce using rule 199 (receiver_parameter_com.opt)
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         reduce using rule 199 (receiver_parameter_com.opt)
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 199 (receiver_parameter_com.opt)

    receiver_parameter_com.opt  go to state 976
    receiver_parameter          go to state 974
    annotation.multiopt         go to state 975


State 939

  159 field_declaration: modifier.multiopt unann_type variable_declarator_list ";" •

    $default  reduce using rule 159 (field_declaration)


State 940

   34 class_or_interface_type: class_type •
   39 interface_type: class_type •
  219 exception_type: class_type •

    "."       reduce using rule 34 (class_or_interface_type)
    "."       [reduce using rule 39 (interface_type)]
    $default  reduce using rule 219 (exception_type)


State 941

  220 exception_type: type_variable •

    $default  reduce using rule 220 (exception_type)


State 942

  215 throws: "throws" exception_type_list •

    $default  reduce using rule 215 (throws)


State 943

  216 exception_type_list: exception_type • com_exception_type.multiopt

    $default  reduce using rule 218 (com_exception_type.multiopt)

    com_exception_type.multiopt  go to state 977


State 944

  225 constructor_declaration: modifier.multiopt constructor_declarator throws.opt constructor_body •

    $default  reduce using rule 225 (constructor_declaration)


State 945

  235 explicit_constructor_invocation: expression_name • "." type_arguments.opt "super" "(" argument_list.opt ")" ";"
  487 class_instance_creation_expression: expression_name • "." unqualified_class_instance_creation_expression
  499 array_access: expression_name • "[" expression "]"
  503 method_invocation: expression_name • "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  510 method_reference: expression_name • "::" type_arguments.opt TOK_IDENTIFIER

    "."   shift, and go to state 978
    "::"  shift, and go to state 224
    "["   shift, and go to state 225


State 946

  233 explicit_constructor_invocation: type_arguments.opt • "this" "(" argument_list.opt ")" ";"
  234                                | type_arguments.opt • "super" "(" argument_list.opt ")" ";"

    "super"  shift, and go to state 979
    "this"   shift, and go to state 980


State 947

  228 constructor_body: "{" explicit_constructor_invocation.opt • block_statements.opt "}"

    TOK_IDENTIFIER  shift, and go to state 540
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 547
    "if"            shift, and go to state 548
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 554
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 211 (variable_modifier.multiopt)]
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 3 (modifier.multiopt)
    "@"             [reduce using rule 211 (variable_modifier.multiopt)]
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 211 (variable_modifier.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 211 (variable_modifier.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 211 (variable_modifier.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 211 (variable_modifier.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "final"         reduce using rule 3 (modifier.multiopt)
    "final"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 211 (variable_modifier.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 211 (variable_modifier.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 211 (variable_modifier.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    "var"           reduce using rule 211 (variable_modifier.multiopt)
    "}"             reduce using rule 232 (block_statements.opt)
    $default        reduce using rule 3 (modifier.multiopt)

    modifier.multiopt                               go to state 556
    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    class_declaration                               go to state 557
    normal_class_declaration                        go to state 31
    variable_modifier.multiopt                      go to state 376
    block_statements.opt                            go to state 981
    enum_declaration                                go to state 32
    record_declaration                              go to state 33
    normal_interface_declaration                    go to state 559
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    block_statements                                go to state 561
    block_statement                                 go to state 562
    local_class_or_interface_declaration            go to state 563
    local_variable_declaration_statement            go to state 564
    local_variable_declaration                      go to state 565
    statement                                       go to state 566
    statement_without_trailing_substatement         go to state 567
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    basic_for_statement                             go to state 579
    enhanced_for_statement                          go to state 580
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 948

  229 explicit_constructor_invocation.opt: explicit_constructor_invocation •

    $default  reduce using rule 229 (explicit_constructor_invocation.opt)


State 949

  236 explicit_constructor_invocation: primary • "." type_arguments.opt "super" "(" argument_list.opt ")" ";"
  488 class_instance_creation_expression: primary • "." unqualified_class_instance_creation_expression
  496 field_access: primary • "." TOK_IDENTIFIER
  504 method_invocation: primary • "." type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"
  511 method_reference: primary • "::" type_arguments.opt TOK_IDENTIFIER

    "."   shift, and go to state 982
    "::"  shift, and go to state 235


State 950

  410 do_statement: "do" statement "while" "(" expression ")" • ";"

    ";"  shift, and go to state 983


State 951

  429 enhanced_for_statement: "for" "(" local_variable_declaration ":" expression ")" • statement

    TOK_IDENTIFIER  shift, and go to state 540
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 547
    "if"            shift, and go to state 548
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 554
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 984
    statement_without_trailing_substatement         go to state 567
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    basic_for_statement                             go to state 579
    enhanced_for_statement                          go to state 580
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 952

  427 com_statement_expression.multiopt: com_statement_expression.multiopt "," statement_expression •

    $default  reduce using rule 427 (com_statement_expression.multiopt)


State 953

  415 basic_for_statement: "for" "(" for_init.opt ";" expression.opt ";" • for_update.opt ")" statement

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    ")"             reduce using rule 421 (for_update.opt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    statement_expression                            go to state 768
    for_update.opt                                  go to state 985
    for_update                                      go to state 986
    statement_expression_list                       go to state 987
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 954

  375 labeled_statement: TOK_IDENTIFIER ":" • statement
  376 labeled_statement_no_short_if: TOK_IDENTIFIER ":" • statement_no_short_if

    TOK_IDENTIFIER  shift, and go to state 900
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 901
    "if"            shift, and go to state 902
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 903
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 761
    statement_no_short_if                           go to state 988
    statement_without_trailing_substatement         go to state 906
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    labeled_statement_no_short_if                   go to state 907
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    if_then_else_statement_no_short_if              go to state 908
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    while_statement_no_short_if                     go to state 909
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    for_statement_no_short_if                       go to state 910
    basic_for_statement                             go to state 579
    basic_for_statement_no_short_if                 go to state 911
    enhanced_for_statement                          go to state 580
    enhanced_for_statement_no_short_if              go to state 912
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 955

  415 basic_for_statement: "for" "(" • for_init.opt ";" expression.opt ";" for_update.opt ")" statement
  422 basic_for_statement_no_short_if: "for" "(" • for_init.opt ";" expression.opt ";" for_update.opt ")" statement_no_short_if
  429 enhanced_for_statement: "for" "(" • local_variable_declaration ":" expression ")" statement
  430 enhanced_for_statement_no_short_if: "for" "(" • local_variable_declaration ":" expression ")" statement_no_short_if

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100

    TOK_IDENTIFIER  [reduce using rule 211 (variable_modifier.multiopt)]
    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    ";"             reduce using rule 417 (for_init.opt)
    "@"             reduce using rule 211 (variable_modifier.multiopt)
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 211 (variable_modifier.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 211 (variable_modifier.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 211 (variable_modifier.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 211 (variable_modifier.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 211 (variable_modifier.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 211 (variable_modifier.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 211 (variable_modifier.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 211 (variable_modifier.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 211 (variable_modifier.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    variable_modifier.multiopt                      go to state 376
    annotation.multiopt                             go to state 125
    local_variable_declaration                      go to state 989
    statement_expression                            go to state 768
    for_init.opt                                    go to state 990
    for_init                                        go to state 770
    statement_expression_list                       go to state 771
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 956

  385 if_then_statement: "if" "(" • expression ")" statement
  386 if_then_else_statement: "if" "(" • expression ")" statement_no_short_if "else" statement
  387 if_then_else_statement_no_short_if: "if" "(" • expression ")" statement_no_short_if "else" statement_no_short_if

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 991
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 957

  408 while_statement: "while" "(" • expression ")" statement
  409 while_statement_no_short_if: "while" "(" • expression ")" statement_no_short_if

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 992
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 958

  386 if_then_else_statement: "if" "(" expression ")" statement_no_short_if "else" • statement

    TOK_IDENTIFIER  shift, and go to state 540
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 547
    "if"            shift, and go to state 548
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 554
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 993
    statement_without_trailing_substatement         go to state 567
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    basic_for_statement                             go to state 579
    enhanced_for_statement                          go to state 580
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 959

  460 semcol_resource.multiopt: semcol_resource.multiopt ";" resource •

    $default  reduce using rule 460 (semcol_resource.multiopt)


State 960

  180 unann_class_type: type_IDENTIFIER • type_arguments.opt

    "<"  shift, and go to state 196

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments      go to state 200
    type_arguments.opt  go to state 527


State 961

  182 unann_class_type: unann_class_or_interface_type • "." annotation.multiopt type_IDENTIFIER type_arguments.opt

    "."  shift, and go to state 531


State 962

  178 unann_class_or_interface_type: unann_class_type •
  185 unann_interface_type: unann_class_type •
  449 catch_type: unann_class_type • vt_class_type.multiopt

    "."       reduce using rule 178 (unann_class_or_interface_type)
    "."       [reduce using rule 185 (unann_interface_type)]
    $default  reduce using rule 451 (vt_class_type.multiopt)

    vt_class_type.multiopt  go to state 994


State 963

  448 catch_formal_parameter: variable_modifier.multiopt catch_type • variable_declarator_id

    TOK_IDENTIFIER  shift, and go to state 534

    variable_declarator_id  go to state 995


State 964

  447 catch_clause: "catch" "(" catch_formal_parameter ")" • block

    "{"  shift, and go to state 438

    block  go to state 996


State 965

  405 com_case_constant.multiopt: com_case_constant.multiopt "," case_constant •

    $default  reduce using rule 405 (com_case_constant.multiopt)


State 966

  402 switch_block_statement_group: switch_label ":" switch_label_col.multiopt block_statements •

    $default  reduce using rule 402 (switch_block_statement_group)


State 967

   70 module_name: module_name • "." TOK_IDENTIFIER
  124 com_module_name.multiopt: com_module_name.multiopt "," module_name •

    "."  shift, and go to state 817

    $default  reduce using rule 124 (com_module_name.multiopt)


State 968

  307 default_value: "default" • element_value

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 83
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "{"             shift, and go to state 101
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 116
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation                                      go to state 119
    normal_annotation                               go to state 15
    element_value                                   go to state 997
    element_value_array_initializer                 go to state 124
    marker_annotation                               go to state 16
    single_element_annotation                       go to state 17
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 131
    array_access                                    go to state 132
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    conditional_expression                          go to state 136
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 969

  304 annotation_interface_element_declaration: modifier.multiopt unann_type TOK_IDENTIFIER "(" ")" dims.opt default_value.opt • ";"

    ";"  shift, and go to state 998


State 970

  305 default_value.opt: default_value •

    $default  reduce using rule 305 (default_value.opt)


State 971

  250 enum_constant: enum_modifier.multiopt TOK_IDENTIFIER "[" "(" argument_list.opt ")" "]" class_body.opt •

    $default  reduce using rule 250 (enum_constant)


State 972

  192 method_header: type_parameters annotation.multiopt result method_declarator • throws.opt

    "throws"  shift, and go to state 890

    $default  reduce using rule 194 (throws.opt)

    throws.opt  go to state 999
    throws      go to state 892


State 973

  197 method_declarator: TOK_IDENTIFIER "(" receiver_parameter_com.opt • formal_parameter_list.opt ")" dims.opt

    ")"       reduce using rule 201 (formal_parameter_list.opt)
    $default  reduce using rule 211 (variable_modifier.multiopt)

    formal_parameter_list.opt   go to state 1000
    formal_parameter_list       go to state 1001
    formal_parameter            go to state 1002
    variable_modifier.multiopt  go to state 1003
    variable_arity_parameter    go to state 1004


State 974

  198 receiver_parameter_com.opt: receiver_parameter • ","

    ","  shift, and go to state 1005


State 975

  202 receiver_parameter: annotation.multiopt • unann_type IDENTIFIER_dot.opt "this"
  329 annotation.multiopt: annotation.multiopt • annotation

    TOK_IDENTIFIER  shift, and go to state 414
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 415
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "short"         shift, and go to state 96

    type_IDENTIFIER                go to state 418
    numeric_type                   go to state 419
    integral_type                  go to state 106
    floating_point_type            go to state 107
    package_name                   go to state 420
    unann_type                     go to state 1006
    unann_primitive_type           go to state 422
    unann_reference_type           go to state 423
    unann_class_or_interface_type  go to state 424
    unann_class_type               go to state 425
    unann_interface_type           go to state 426
    unann_type_variable            go to state 427
    unann_array_type               go to state 428
    annotation                     go to state 47
    normal_annotation              go to state 15
    marker_annotation              go to state 16
    single_element_annotation      go to state 17


State 976

  226 constructor_declarator: type_parameters.opt simple_type_name "(" receiver_parameter_com.opt • formal_parameter_list.opt ")"

    ")"       reduce using rule 201 (formal_parameter_list.opt)
    $default  reduce using rule 211 (variable_modifier.multiopt)

    formal_parameter_list.opt   go to state 1007
    formal_parameter_list       go to state 1001
    formal_parameter            go to state 1002
    variable_modifier.multiopt  go to state 1003
    variable_arity_parameter    go to state 1004


State 977

  216 exception_type_list: exception_type com_exception_type.multiopt •
  217 com_exception_type.multiopt: com_exception_type.multiopt • "," exception_type

    ","  shift, and go to state 1008

    $default  reduce using rule 216 (exception_type_list)


State 978

  235 explicit_constructor_invocation: expression_name "." • type_arguments.opt "super" "(" argument_list.opt ")" ";"
  487 class_instance_creation_expression: expression_name "." • unqualified_class_instance_creation_expression
  503 method_invocation: expression_name "." • type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"

    "<"    shift, and go to state 196
    "new"  shift, and go to state 347

    $default  reduce using rule 184 (type_arguments.opt)

    type_arguments                                  go to state 200
    type_arguments.opt                              go to state 1009
    unqualified_class_instance_creation_expression  go to state 349


State 979

  234 explicit_constructor_invocation: type_arguments.opt "super" • "(" argument_list.opt ")" ";"

    "("  shift, and go to state 1010


State 980

  233 explicit_constructor_invocation: type_arguments.opt "this" • "(" argument_list.opt ")" ";"

    "("  shift, and go to state 1011


State 981

  228 constructor_body: "{" explicit_constructor_invocation.opt block_statements.opt • "}"

    "}"  shift, and go to state 1012


State 982

  236 explicit_constructor_invocation: primary "." • type_arguments.opt "super" "(" argument_list.opt ")" ";"
  488 class_instance_creation_expression: primary "." • unqualified_class_instance_creation_expression
  496 field_access: primary "." • TOK_IDENTIFIER
  504 method_invocation: primary "." • type_arguments.opt TOK_IDENTIFIER "(" argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 358
    "<"             shift, and go to state 196
    "new"           shift, and go to state 347

    TOK_IDENTIFIER  [reduce using rule 184 (type_arguments.opt)]
    $default        reduce using rule 184 (type_arguments.opt)

    type_arguments                                  go to state 200
    type_arguments.opt                              go to state 1013
    unqualified_class_instance_creation_expression  go to state 360


State 983

  410 do_statement: "do" statement "while" "(" expression ")" ";" •

    $default  reduce using rule 410 (do_statement)


State 984

  429 enhanced_for_statement: "for" "(" local_variable_declaration ":" expression ")" statement •

    $default  reduce using rule 429 (enhanced_for_statement)


State 985

  415 basic_for_statement: "for" "(" for_init.opt ";" expression.opt ";" for_update.opt • ")" statement

    ")"  shift, and go to state 1014


State 986

  420 for_update.opt: for_update •

    $default  reduce using rule 420 (for_update.opt)


State 987

  425 for_update: statement_expression_list •

    $default  reduce using rule 425 (for_update)


State 988

  376 labeled_statement_no_short_if: TOK_IDENTIFIER ":" statement_no_short_if •

    $default  reduce using rule 376 (labeled_statement_no_short_if)


State 989

  424 for_init: local_variable_declaration •
  429 enhanced_for_statement: "for" "(" local_variable_declaration • ":" expression ")" statement
  430 enhanced_for_statement_no_short_if: "for" "(" local_variable_declaration • ":" expression ")" statement_no_short_if

    ":"  shift, and go to state 1015

    $default  reduce using rule 424 (for_init)


State 990

  415 basic_for_statement: "for" "(" for_init.opt • ";" expression.opt ";" for_update.opt ")" statement
  422 basic_for_statement_no_short_if: "for" "(" for_init.opt • ";" expression.opt ";" for_update.opt ")" statement_no_short_if

    ";"  shift, and go to state 1016


State 991

  385 if_then_statement: "if" "(" expression • ")" statement
  386 if_then_else_statement: "if" "(" expression • ")" statement_no_short_if "else" statement
  387 if_then_else_statement_no_short_if: "if" "(" expression • ")" statement_no_short_if "else" statement_no_short_if

    ")"  shift, and go to state 1017


State 992

  408 while_statement: "while" "(" expression • ")" statement
  409 while_statement_no_short_if: "while" "(" expression • ")" statement_no_short_if

    ")"  shift, and go to state 1018


State 993

  386 if_then_else_statement: "if" "(" expression ")" statement_no_short_if "else" statement •

    $default  reduce using rule 386 (if_then_else_statement)


State 994

  449 catch_type: unann_class_type vt_class_type.multiopt •
  450 vt_class_type.multiopt: vt_class_type.multiopt • "|" class_type

    "|"  shift, and go to state 1019

    $default  reduce using rule 449 (catch_type)


State 995

  448 catch_formal_parameter: variable_modifier.multiopt catch_type variable_declarator_id •

    $default  reduce using rule 448 (catch_formal_parameter)


State 996

  447 catch_clause: "catch" "(" catch_formal_parameter ")" block •

    $default  reduce using rule 447 (catch_clause)


State 997

  307 default_value: "default" element_value •

    $default  reduce using rule 307 (default_value)


State 998

  304 annotation_interface_element_declaration: modifier.multiopt unann_type TOK_IDENTIFIER "(" ")" dims.opt default_value.opt ";" •

    $default  reduce using rule 304 (annotation_interface_element_declaration)


State 999

  192 method_header: type_parameters annotation.multiopt result method_declarator throws.opt •

    $default  reduce using rule 192 (method_header)


State 1000

  197 method_declarator: TOK_IDENTIFIER "(" receiver_parameter_com.opt formal_parameter_list.opt • ")" dims.opt

    ")"  shift, and go to state 1020


State 1001

  200 formal_parameter_list.opt: formal_parameter_list •

    $default  reduce using rule 200 (formal_parameter_list.opt)


State 1002

  205 formal_parameter_list: formal_parameter • com_formal_parameter.multiopt

    $default  reduce using rule 207 (com_formal_parameter.multiopt)

    com_formal_parameter.multiopt  go to state 1021


State 1003

  208 formal_parameter: variable_modifier.multiopt • unann_type variable_declarator_id
  210 variable_modifier.multiopt: variable_modifier.multiopt • variable_modifier
  212 variable_arity_parameter: variable_modifier.multiopt • unann_type annotation.multiopt "..." TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 414
    "@"             shift, and go to state 11
    "boolean"       shift, and go to state 415
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "final"         shift, and go to state 416
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "short"         shift, and go to state 96

    type_IDENTIFIER                go to state 418
    numeric_type                   go to state 419
    integral_type                  go to state 106
    floating_point_type            go to state 107
    package_name                   go to state 420
    unann_type                     go to state 1022
    unann_primitive_type           go to state 422
    unann_reference_type           go to state 423
    unann_class_or_interface_type  go to state 424
    unann_class_type               go to state 425
    unann_interface_type           go to state 426
    unann_type_variable            go to state 427
    unann_array_type               go to state 428
    variable_modifier              go to state 429
    annotation                     go to state 430
    normal_annotation              go to state 15
    marker_annotation              go to state 16
    single_element_annotation      go to state 17


State 1004

  209 formal_parameter: variable_arity_parameter •

    $default  reduce using rule 209 (formal_parameter)


State 1005

  198 receiver_parameter_com.opt: receiver_parameter "," •

    $default  reduce using rule 198 (receiver_parameter_com.opt)


State 1006

  202 receiver_parameter: annotation.multiopt unann_type • IDENTIFIER_dot.opt "this"

    TOK_IDENTIFIER  shift, and go to state 1023

    $default  reduce using rule 204 (IDENTIFIER_dot.opt)

    IDENTIFIER_dot.opt  go to state 1024


State 1007

  226 constructor_declarator: type_parameters.opt simple_type_name "(" receiver_parameter_com.opt formal_parameter_list.opt • ")"

    ")"  shift, and go to state 1025


State 1008

  217 com_exception_type.multiopt: com_exception_type.multiopt "," • exception_type

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    class_or_interface_type  go to state 275
    class_type               go to state 940
    interface_type           go to state 111
    type_variable            go to state 941
    package_name             go to state 114
    exception_type           go to state 1026
    annotation.multiopt      go to state 643


State 1009

  235 explicit_constructor_invocation: expression_name "." type_arguments.opt • "super" "(" argument_list.opt ")" ";"
  503 method_invocation: expression_name "." type_arguments.opt • TOK_IDENTIFIER "(" argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 474
    "super"         shift, and go to state 1027


State 1010

  234 explicit_constructor_invocation: type_arguments.opt "super" "(" • argument_list.opt ")" ";"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 238 (argument_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    argument_list.opt                               go to state 1028
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    argument_list                                   go to state 353
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 354
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 1011

  233 explicit_constructor_invocation: type_arguments.opt "this" "(" • argument_list.opt ")" ";"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 238 (argument_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    argument_list.opt                               go to state 1029
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    argument_list                                   go to state 353
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 354
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 1012

  228 constructor_body: "{" explicit_constructor_invocation.opt block_statements.opt "}" •

    $default  reduce using rule 228 (constructor_body)


State 1013

  236 explicit_constructor_invocation: primary "." type_arguments.opt • "super" "(" argument_list.opt ")" ";"
  504 method_invocation: primary "." type_arguments.opt • TOK_IDENTIFIER "(" argument_list.opt ")"

    TOK_IDENTIFIER  shift, and go to state 481
    "super"         shift, and go to state 1030


State 1014

  415 basic_for_statement: "for" "(" for_init.opt ";" expression.opt ";" for_update.opt ")" • statement

    TOK_IDENTIFIER  shift, and go to state 540
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 547
    "if"            shift, and go to state 548
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 554
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 1031
    statement_without_trailing_substatement         go to state 567
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    basic_for_statement                             go to state 579
    enhanced_for_statement                          go to state 580
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 1015

  429 enhanced_for_statement: "for" "(" local_variable_declaration ":" • expression ")" statement
  430 enhanced_for_statement_no_short_if: "for" "(" local_variable_declaration ":" • expression ")" statement_no_short_if

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 1032
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 1016

  415 basic_for_statement: "for" "(" for_init.opt ";" • expression.opt ";" for_update.opt ")" statement
  422 basic_for_statement_no_short_if: "for" "(" for_init.opt ";" • expression.opt ";" for_update.opt ")" statement_no_short_if

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    ";"             reduce using rule 419 (expression.opt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    expression.opt                                  go to state 1033
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 674
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 1017

  385 if_then_statement: "if" "(" expression ")" • statement
  386 if_then_else_statement: "if" "(" expression ")" • statement_no_short_if "else" statement
  387 if_then_else_statement_no_short_if: "if" "(" expression ")" • statement_no_short_if "else" statement_no_short_if

    TOK_IDENTIFIER  shift, and go to state 900
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 901
    "if"            shift, and go to state 902
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 903
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 904
    statement_no_short_if                           go to state 1034
    statement_without_trailing_substatement         go to state 906
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    labeled_statement_no_short_if                   go to state 907
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    if_then_else_statement_no_short_if              go to state 908
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    while_statement_no_short_if                     go to state 909
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    for_statement_no_short_if                       go to state 910
    basic_for_statement                             go to state 579
    basic_for_statement_no_short_if                 go to state 911
    enhanced_for_statement                          go to state 580
    enhanced_for_statement_no_short_if              go to state 912
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 1018

  408 while_statement: "while" "(" expression ")" • statement
  409 while_statement_no_short_if: "while" "(" expression ")" • statement_no_short_if

    TOK_IDENTIFIER  shift, and go to state 900
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 901
    "if"            shift, and go to state 902
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 903
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 923
    statement_no_short_if                           go to state 1035
    statement_without_trailing_substatement         go to state 906
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    labeled_statement_no_short_if                   go to state 907
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    if_then_else_statement_no_short_if              go to state 908
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    while_statement_no_short_if                     go to state 909
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    for_statement_no_short_if                       go to state 910
    basic_for_statement                             go to state 579
    basic_for_statement_no_short_if                 go to state 911
    enhanced_for_statement                          go to state 580
    enhanced_for_statement_no_short_if              go to state 912
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 1019

  450 vt_class_type.multiopt: vt_class_type.multiopt "|" • class_type

    TOK_IDENTIFIER  shift, and go to state 195

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    class_or_interface_type  go to state 275
    class_type               go to state 1036
    interface_type           go to state 111
    package_name             go to state 114
    annotation.multiopt      go to state 278


State 1020

  197 method_declarator: TOK_IDENTIFIER "(" receiver_parameter_com.opt formal_parameter_list.opt ")" • dims.opt

    "@"       reduce using rule 330 (annotation.multiopt)
    "["       reduce using rule 330 (annotation.multiopt)
    $default  reduce using rule 168 (dims.opt)

    dims                 go to state 452
    dims.opt             go to state 1037
    annotation.multiopt  go to state 212


State 1021

  205 formal_parameter_list: formal_parameter com_formal_parameter.multiopt •
  206 com_formal_parameter.multiopt: com_formal_parameter.multiopt • "," formal_parameter

    ","  shift, and go to state 1038

    $default  reduce using rule 205 (formal_parameter_list)


State 1022

  208 formal_parameter: variable_modifier.multiopt unann_type • variable_declarator_id
  212 variable_arity_parameter: variable_modifier.multiopt unann_type • annotation.multiopt "..." TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 534

    $default  reduce using rule 330 (annotation.multiopt)

    variable_declarator_id  go to state 1039
    annotation.multiopt     go to state 529


State 1023

  203 IDENTIFIER_dot.opt: TOK_IDENTIFIER • "."

    "."  shift, and go to state 1040


State 1024

  202 receiver_parameter: annotation.multiopt unann_type IDENTIFIER_dot.opt • "this"

    "this"  shift, and go to state 1041


State 1025

  226 constructor_declarator: type_parameters.opt simple_type_name "(" receiver_parameter_com.opt formal_parameter_list.opt ")" •

    $default  reduce using rule 226 (constructor_declarator)


State 1026

  217 com_exception_type.multiopt: com_exception_type.multiopt "," exception_type •

    $default  reduce using rule 217 (com_exception_type.multiopt)


State 1027

  235 explicit_constructor_invocation: expression_name "." type_arguments.opt "super" • "(" argument_list.opt ")" ";"

    "("  shift, and go to state 1042


State 1028

  234 explicit_constructor_invocation: type_arguments.opt "super" "(" argument_list.opt • ")" ";"

    ")"  shift, and go to state 1043


State 1029

  233 explicit_constructor_invocation: type_arguments.opt "this" "(" argument_list.opt • ")" ";"

    ")"  shift, and go to state 1044


State 1030

  236 explicit_constructor_invocation: primary "." type_arguments.opt "super" • "(" argument_list.opt ")" ";"

    "("  shift, and go to state 1045


State 1031

  415 basic_for_statement: "for" "(" for_init.opt ";" expression.opt ";" for_update.opt ")" statement •

    $default  reduce using rule 415 (basic_for_statement)


State 1032

  429 enhanced_for_statement: "for" "(" local_variable_declaration ":" expression • ")" statement
  430 enhanced_for_statement_no_short_if: "for" "(" local_variable_declaration ":" expression • ")" statement_no_short_if

    ")"  shift, and go to state 1046


State 1033

  415 basic_for_statement: "for" "(" for_init.opt ";" expression.opt • ";" for_update.opt ")" statement
  422 basic_for_statement_no_short_if: "for" "(" for_init.opt ";" expression.opt • ";" for_update.opt ")" statement_no_short_if

    ";"  shift, and go to state 1047


State 1034

  386 if_then_else_statement: "if" "(" expression ")" statement_no_short_if • "else" statement
  387 if_then_else_statement_no_short_if: "if" "(" expression ")" statement_no_short_if • "else" statement_no_short_if

    "else"  shift, and go to state 1048


State 1035

  409 while_statement_no_short_if: "while" "(" expression ")" statement_no_short_if •

    $default  reduce using rule 409 (while_statement_no_short_if)


State 1036

   34 class_or_interface_type: class_type •
   39 interface_type: class_type •
  450 vt_class_type.multiopt: vt_class_type.multiopt "|" class_type •

    "."       reduce using rule 34 (class_or_interface_type)
    "."       [reduce using rule 39 (interface_type)]
    $default  reduce using rule 450 (vt_class_type.multiopt)


State 1037

  197 method_declarator: TOK_IDENTIFIER "(" receiver_parameter_com.opt formal_parameter_list.opt ")" dims.opt •

    $default  reduce using rule 197 (method_declarator)


State 1038

  206 com_formal_parameter.multiopt: com_formal_parameter.multiopt "," • formal_parameter

    $default  reduce using rule 211 (variable_modifier.multiopt)

    formal_parameter            go to state 1049
    variable_modifier.multiopt  go to state 1003
    variable_arity_parameter    go to state 1004


State 1039

  208 formal_parameter: variable_modifier.multiopt unann_type variable_declarator_id •

    $default  reduce using rule 208 (formal_parameter)


State 1040

  203 IDENTIFIER_dot.opt: TOK_IDENTIFIER "." •

    $default  reduce using rule 203 (IDENTIFIER_dot.opt)


State 1041

  202 receiver_parameter: annotation.multiopt unann_type IDENTIFIER_dot.opt "this" •

    $default  reduce using rule 202 (receiver_parameter)


State 1042

  235 explicit_constructor_invocation: expression_name "." type_arguments.opt "super" "(" • argument_list.opt ")" ";"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 238 (argument_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    argument_list.opt                               go to state 1050
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    argument_list                                   go to state 353
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 354
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 1043

  234 explicit_constructor_invocation: type_arguments.opt "super" "(" argument_list.opt ")" • ";"

    ";"  shift, and go to state 1051


State 1044

  233 explicit_constructor_invocation: type_arguments.opt "this" "(" argument_list.opt ")" • ";"

    ";"  shift, and go to state 1052


State 1045

  236 explicit_constructor_invocation: primary "." type_arguments.opt "super" "(" • argument_list.opt ")" ";"

    TOK_IDENTIFIER  shift, and go to state 176
    TOK_LITERAL     shift, and go to state 81
    "!"             shift, and go to state 82
    "("             shift, and go to state 177
    "+"             shift, and go to state 84
    "++"            shift, and go to state 85
    "-"             shift, and go to state 86
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 98
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100
    "~"             shift, and go to state 102

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "@"             reduce using rule 330 (annotation.multiopt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 238 (argument_list.opt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    argument_list.opt                               go to state 1053
    annotation.multiopt                             go to state 125
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 129
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 133
    argument_list                                   go to state 353
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    expression                                      go to state 354
    lambda_expression                               go to state 184
    lambda_parameters                               go to state 185
    assignment_expression                           go to state 186
    assignment                                      go to state 187
    left_hand_side                                  go to state 188
    conditional_expression                          go to state 189
    conditional_or_expression                       go to state 137
    conditional_and_expression                      go to state 138
    inclusive_or_expression                         go to state 139
    exclusive_or_expression                         go to state 140
    and_expression                                  go to state 141
    equality_expression                             go to state 142
    relational_expression                           go to state 143
    instanceof_expression                           go to state 144
    shift_expression                                go to state 145
    additive_expression                             go to state 146
    multiplicative_expression                       go to state 147
    unary_expression                                go to state 148
    pre_increment_expression                        go to state 149
    pre_decrement_expression                        go to state 150
    unary_expression_not_plus_minus                 go to state 151
    postfix_expression                              go to state 152
    post_increment_expression                       go to state 153
    post_decrement_expression                       go to state 154
    cast_expression                                 go to state 155
    switch_expression                               go to state 156


State 1046

  429 enhanced_for_statement: "for" "(" local_variable_declaration ":" expression ")" • statement
  430 enhanced_for_statement_no_short_if: "for" "(" local_variable_declaration ":" expression ")" • statement_no_short_if

    TOK_IDENTIFIER  shift, and go to state 900
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 901
    "if"            shift, and go to state 902
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 903
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 984
    statement_no_short_if                           go to state 1054
    statement_without_trailing_substatement         go to state 906
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    labeled_statement_no_short_if                   go to state 907
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    if_then_else_statement_no_short_if              go to state 908
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    while_statement_no_short_if                     go to state 909
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    for_statement_no_short_if                       go to state 910
    basic_for_statement                             go to state 579
    basic_for_statement_no_short_if                 go to state 911
    enhanced_for_statement                          go to state 580
    enhanced_for_statement_no_short_if              go to state 912
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 1047

  415 basic_for_statement: "for" "(" for_init.opt ";" expression.opt ";" • for_update.opt ")" statement
  422 basic_for_statement_no_short_if: "for" "(" for_init.opt ";" expression.opt ";" • for_update.opt ")" statement_no_short_if

    TOK_IDENTIFIER  shift, and go to state 174
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    "boolean"       shift, and go to state 88
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "this"          shift, and go to state 99
    "void"          shift, and go to state 100

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    ")"             reduce using rule 421 (for_update.opt)
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    statement_expression                            go to state 768
    for_update.opt                                  go to state 1055
    for_update                                      go to state 986
    statement_expression_list                       go to state 987
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 1048

  386 if_then_else_statement: "if" "(" expression ")" statement_no_short_if "else" • statement
  387 if_then_else_statement_no_short_if: "if" "(" expression ")" statement_no_short_if "else" • statement_no_short_if

    TOK_IDENTIFIER  shift, and go to state 900
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 901
    "if"            shift, and go to state 902
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 903
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 993
    statement_no_short_if                           go to state 1056
    statement_without_trailing_substatement         go to state 906
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    labeled_statement_no_short_if                   go to state 907
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    if_then_else_statement_no_short_if              go to state 908
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    while_statement_no_short_if                     go to state 909
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    for_statement_no_short_if                       go to state 910
    basic_for_statement                             go to state 579
    basic_for_statement_no_short_if                 go to state 911
    enhanced_for_statement                          go to state 580
    enhanced_for_statement_no_short_if              go to state 912
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 1049

  206 com_formal_parameter.multiopt: com_formal_parameter.multiopt "," formal_parameter •

    $default  reduce using rule 206 (com_formal_parameter.multiopt)


State 1050

  235 explicit_constructor_invocation: expression_name "." type_arguments.opt "super" "(" argument_list.opt • ")" ";"

    ")"  shift, and go to state 1057


State 1051

  234 explicit_constructor_invocation: type_arguments.opt "super" "(" argument_list.opt ")" ";" •

    $default  reduce using rule 234 (explicit_constructor_invocation)


State 1052

  233 explicit_constructor_invocation: type_arguments.opt "this" "(" argument_list.opt ")" ";" •

    $default  reduce using rule 233 (explicit_constructor_invocation)


State 1053

  236 explicit_constructor_invocation: primary "." type_arguments.opt "super" "(" argument_list.opt • ")" ";"

    ")"  shift, and go to state 1058


State 1054

  430 enhanced_for_statement_no_short_if: "for" "(" local_variable_declaration ":" expression ")" statement_no_short_if •

    $default  reduce using rule 430 (enhanced_for_statement_no_short_if)


State 1055

  415 basic_for_statement: "for" "(" for_init.opt ";" expression.opt ";" for_update.opt • ")" statement
  422 basic_for_statement_no_short_if: "for" "(" for_init.opt ";" expression.opt ";" for_update.opt • ")" statement_no_short_if

    ")"  shift, and go to state 1059


State 1056

  387 if_then_else_statement_no_short_if: "if" "(" expression ")" statement_no_short_if "else" statement_no_short_if •

    $default  reduce using rule 387 (if_then_else_statement_no_short_if)


State 1057

  235 explicit_constructor_invocation: expression_name "." type_arguments.opt "super" "(" argument_list.opt ")" • ";"

    ";"  shift, and go to state 1060


State 1058

  236 explicit_constructor_invocation: primary "." type_arguments.opt "super" "(" argument_list.opt ")" • ";"

    ";"  shift, and go to state 1061


State 1059

  415 basic_for_statement: "for" "(" for_init.opt ";" expression.opt ";" for_update.opt ")" • statement
  422 basic_for_statement_no_short_if: "for" "(" for_init.opt ";" expression.opt ";" for_update.opt ")" • statement_no_short_if

    TOK_IDENTIFIER  shift, and go to state 900
    TOK_LITERAL     shift, and go to state 81
    "("             shift, and go to state 541
    "++"            shift, and go to state 85
    "--"            shift, and go to state 87
    ";"             shift, and go to state 542
    "assert"        shift, and go to state 543
    "boolean"       shift, and go to state 88
    "break"         shift, and go to state 544
    "byte"          shift, and go to state 89
    "char"          shift, and go to state 90
    "continue"      shift, and go to state 545
    "do"            shift, and go to state 546
    "double"        shift, and go to state 91
    "float"         shift, and go to state 92
    "for"           shift, and go to state 901
    "if"            shift, and go to state 902
    "int"           shift, and go to state 93
    "long"          shift, and go to state 94
    "new"           shift, and go to state 95
    "return"        shift, and go to state 549
    "short"         shift, and go to state 96
    "super"         shift, and go to state 97
    "switch"        shift, and go to state 550
    "synchronized"  shift, and go to state 551
    "this"          shift, and go to state 99
    "throw"         shift, and go to state 552
    "try"           shift, and go to state 553
    "void"          shift, and go to state 100
    "while"         shift, and go to state 903
    "yield"         shift, and go to state 555
    "{"             shift, and go to state 438

    TOK_IDENTIFIER  [reduce using rule 330 (annotation.multiopt)]
    "boolean"       [reduce using rule 330 (annotation.multiopt)]
    "byte"          [reduce using rule 330 (annotation.multiopt)]
    "char"          [reduce using rule 330 (annotation.multiopt)]
    "double"        [reduce using rule 330 (annotation.multiopt)]
    "float"         [reduce using rule 330 (annotation.multiopt)]
    "int"           [reduce using rule 330 (annotation.multiopt)]
    "long"          [reduce using rule 330 (annotation.multiopt)]
    "short"         [reduce using rule 330 (annotation.multiopt)]
    $default        reduce using rule 330 (annotation.multiopt)

    type_IDENTIFIER                                 go to state 38
    unqualified_method_IDENTIFIER                   go to state 103
    primitive_type                                  go to state 104
    numeric_type                                    go to state 105
    integral_type                                   go to state 106
    floating_point_type                             go to state 107
    reference_type                                  go to state 108
    class_or_interface_type                         go to state 109
    class_type                                      go to state 110
    interface_type                                  go to state 111
    type_variable                                   go to state 112
    array_type                                      go to state 113
    package_name                                    go to state 114
    type_name                                       go to state 115
    expression_name                                 go to state 180
    method_name                                     go to state 117
    package_or_type_name                            go to state 40
    ambiguous_name                                  go to state 118
    annotation.multiopt                             go to state 125
    block                                           go to state 560
    statement                                       go to state 1031
    statement_no_short_if                           go to state 1062
    statement_without_trailing_substatement         go to state 906
    empty_statement                                 go to state 568
    labeled_statement                               go to state 569
    labeled_statement_no_short_if                   go to state 907
    expression_statement                            go to state 570
    statement_expression                            go to state 571
    if_then_statement                               go to state 572
    if_then_else_statement                          go to state 573
    if_then_else_statement_no_short_if              go to state 908
    assert_statement                                go to state 574
    switch_statement                                go to state 575
    while_statement                                 go to state 576
    while_statement_no_short_if                     go to state 909
    do_statement                                    go to state 577
    for_statement                                   go to state 578
    for_statement_no_short_if                       go to state 910
    basic_for_statement                             go to state 579
    basic_for_statement_no_short_if                 go to state 911
    enhanced_for_statement                          go to state 580
    enhanced_for_statement_no_short_if              go to state 912
    break_statement                                 go to state 581
    yield_statement                                 go to state 582
    continue_statement                              go to state 583
    return_statement                                go to state 584
    throw_statement                                 go to state 585
    synchronized_statement                          go to state 586
    try_statement                                   go to state 587
    try_with_resources_statement                    go to state 588
    primary                                         go to state 126
    primary_no_new_array                            go to state 127
    class_literal                                   go to state 128
    class_instance_creation_expression              go to state 589
    unqualified_class_instance_creation_expression  go to state 130
    field_access                                    go to state 181
    array_access                                    go to state 182
    method_invocation                               go to state 590
    method_reference                                go to state 134
    array_creation_expression                       go to state 135
    assignment                                      go to state 591
    left_hand_side                                  go to state 188
    pre_increment_expression                        go to state 592
    pre_decrement_expression                        go to state 593
    postfix_expression                              go to state 594
    post_increment_expression                       go to state 595
    post_decrement_expression                       go to state 596


State 1060

  235 explicit_constructor_invocation: expression_name "." type_arguments.opt "super" "(" argument_list.opt ")" ";" •

    $default  reduce using rule 235 (explicit_constructor_invocation)


State 1061

  236 explicit_constructor_invocation: primary "." type_arguments.opt "super" "(" argument_list.opt ")" ";" •

    $default  reduce using rule 236 (explicit_constructor_invocation)


State 1062

  422 basic_for_statement_no_short_if: "for" "(" for_init.opt ";" expression.opt ";" for_update.opt ")" statement_no_short_if •

    $default  reduce using rule 422 (basic_for_statement_no_short_if)
