%type<i> IDENTIFIER.opt
%type<i> IDENTIFIER_dot.opt
%type<i> additional_bound
%type<i> additional_bound.multiopt
%type<i> additive_expression
%type<i> ambiguous_name
%type<i> an_sp.multiopt
%type<i> and_expression
%type<i> annotation
%type<i> annotation.multiopt
%type<i> annotation_interface_body
%type<i> annotation_interface_declaration
%type<i> annotation_interface_element_declaration
%type<i> annotation_interface_member_declaration
%type<i> annotation_interface_member_declaration.multiopt
%type<i> argument_list
%type<i> argument_list.opt
%type<i> array_access
%type<i> array_creation_expression
%type<i> array_initializer
%type<i> array_type
%type<i> assert_statement
%type<i> assignment
%type<i> assignment_expression
%type<i> assignment_operator
%type<i> basic_for_statement
%type<i> basic_for_statement_no_short_if
%type<i> block
%type<i> block_statement
%type<i> block_statement.multiopt
%type<i> block_statements
%type<i> block_statements.opt
%type<i> break_statement
%type<i> case_constant
%type<i> cast_expression
%type<i> catch_clause
%type<i> catch_clause.multiopt
%type<i> catch_formal_parameter
%type<i> catch_type
%type<i> catches
%type<i> catches.opt
%type<i> class_body
%type<i> class_body.opt
%type<i> class_body_declaration
%type<i> class_body_declaration.multiopt
%type<i> class_declaration
%type<i> class_extends
%type<i> class_extends.opt
%type<i> class_implements
%type<i> class_implements.opt
%type<i> class_instance_creation_expression
%type<i> class_literal
%type<i> class_member_declaration
%type<i> class_or_interface_type
%type<i> class_or_interface_type_to_instantiate
%type<i> class_permits
%type<i> class_permits.opt
%type<i> class_type
%type<i> com.opt
%type<i> com_IDENTIFIER.multiopt
%type<i> com_case_constant.multiopt
%type<i> com_element_value.multiopt
%type<i> com_element_value_pair.multiopt
%type<i> com_enum_constant.multiopt
%type<i> com_exception_type.multiopt
%type<i> com_expression.multiopt
%type<i> com_formal_parameter.multiopt
%type<i> com_interface_type.multiopt
%type<i> com_lambda_parameter.multiopt
%type<i> com_module_name.multiopt
%type<i> com_record_component.multiopt
%type<i> com_statement_expression.multiopt
%type<i> com_type_name.multiopt
%type<i> com_type_parameter.multiopt
%type<i> com_variable_declarator.multiopt
%type<i> com_variable_initializer.multiopt
%type<i> compact_constructor_declaration
%type<i> compilation_unit
%type<i> conditional_and_expression
%type<i> conditional_expression
%type<i> conditional_or_expression
%type<i> constant_declaration
%type<i> constant_expression
%type<i> constructor_body
%type<i> constructor_declaration
%type<i> constructor_declarator
%type<i> continue_statement
%type<i> default_value
%type<i> default_value.opt
%type<i> dim_expr
%type<i> dim_expr.multiopt
%type<i> dim_exprs
%type<i> dims
%type<i> dims.opt
%type<i> dm.multiopt
%type<i> do_statement
%type<i> dot_annotation.multiopt_IDENTIFIER.multiopt
%type<i> dot_ind.multiopt
%type<i> element_value
%type<i> element_valueList
%type<i> element_valueList.opt
%type<i> element_value_array_initializer
%type<i> element_value_pair
%type<i> element_value_pair_list
%type<i> element_value_pair_list.opt
%type<i> empty_statement
%type<i> enhanced_for_statement
%type<i> enhanced_for_statement_no_short_if
%type<i> enum_body
%type<i> enum_body_declarations
%type<i> enum_body_declarations.opt
%type<i> enum_constant
%type<i> enum_constant_list
%type<i> enum_constant_list.opt
%type<i> enum_declaration
%type<i> enum_modifier
%type<i> enum_modifier.multiopt
%type<i> eq_variable_initializer.opt
%type<i> equality_expression
%type<i> exception_type
%type<i> exception_type_list
%type<i> exclusive_or_expression
%type<i> explicit_constructor_invocation
%type<i> explicit_constructor_invocation.opt
%type<i> expression
%type<i> expression.opt
%type<i> expression_name
%type<i> expression_statement
%type<i> field_access
%type<i> field_declaration
%type<i> finally
%type<i> finally.opt
%type<i> floating_point_type
%type<i> for_init
%type<i> for_init.opt
%type<i> for_statement
%type<i> for_statement_no_short_if
%type<i> for_update
%type<i> for_update.opt
%type<i> formal_parameter
%type<i> formal_parameter_list
%type<i> formal_parameter_list.opt
%type<i> if_then_else_statement
%type<i> if_then_else_statement_no_short_if
%type<i> if_then_statement
%type<i> import_declaration
%type<i> import_declaration.multiopt
%type<i> inclusive_or_expression
%type<i> input
%type<i> instance_initializer
%type<i> instanceof_expression
%type<i> integral_type
%type<i> interface_body
%type<i> interface_declaration
%type<i> interface_extends
%type<i> interface_extends.opt
%type<i> interface_member_declaration
%type<i> interface_member_declaration.multiopt
%type<i> interface_method_declaration
%type<i> interface_permits
%type<i> interface_permits.opt
%type<i> interface_type
%type<i> interface_type_list
%type<i> labeled_statement
%type<i> labeled_statement_no_short_if
%type<i> lambda_body
%type<i> lambda_expression
%type<i> lambda_parameter
%type<i> lambda_parameter_list
%type<i> lambda_parameter_list.opt
%type<i> lambda_parameter_type
%type<i> lambda_parameters
%type<i> left_hand_side
%type<i> local_class_or_interface_declaration
%type<i> local_variable_declaration
%type<i> local_variable_declaration_statement
%type<i> local_variable_type
%type<i> marker_annotation
%type<i> method_body
%type<i> method_declaration
%type<i> method_declarator
%type<i> method_header
%type<i> method_invocation
%type<i> method_name
%type<i> method_reference
%type<i> modifier
%type<i> modifier.multiopt
%type<i> modular_compilation_unit
%type<i> module_declaration
%type<i> module_directive
%type<i> module_directive.multiopt
%type<i> module_name
%type<i> multiplicative_expression
%type<i> normal_annotation
%type<i> normal_class_declaration
%type<i> normal_interface_declaration
%type<i> numeric_type
%type<i> open.opt
%type<i> ordinary_compilation_unit
%type<i> package_declaration
%type<i> package_declaration.opt
%type<i> package_modifier
%type<i> package_modifier.multiopt
%type<i> package_name
%type<i> package_or_type_name
%type<i> pattern
%type<i> post_decrement_expression
%type<i> post_increment_expression
%type<i> postfix_expression
%type<i> pre_decrement_expression
%type<i> pre_increment_expression
%type<i> primary
%type<i> primary_no_new_array
%type<i> primitive_type
%type<i> receiver_parameter
%type<i> receiver_parameter_com.opt
%type<i> record_body
%type<i> record_body_declaration
%type<i> record_body_declaration.multiopt
%type<i> record_component
%type<i> record_component_list
%type<i> record_component_list.opt
%type<i> record_component_modifier
%type<i> record_component_modifier.multiopt
%type<i> record_declaration
%type<i> record_header
%type<i> reference_type
%type<i> relational_expression
%type<i> resource
%type<i> resource_list
%type<i> resource_specification
%type<i> result
%type<i> return_statement
%type<i> semcol.opt
%type<i> semcol_resource.multiopt
%type<i> shift_expression
%type<i> simple_type_name
%type<i> single_element_annotation
%type<i> single_static_import_declaration
%type<i> single_type_import_declaration
%type<i> statement
%type<i> statement_expression
%type<i> statement_expression_list
%type<i> statement_no_short_if
%type<i> statement_without_trailing_substatement
%type<i> static_import_on_demand_declaration
%type<i> static_initializer
%type<i> switch_block
%type<i> switch_block_statement_group
%type<i> switch_block_statement_group.multiopt
%type<i> switch_expression
%type<i> switch_label
%type<i> switch_label_col.multiopt
%type<i> switch_rule
%type<i> switch_rule.multiopt
%type<i> switch_statement
%type<i> synchronized_statement
%type<i> throw_statement
%type<i> throws
%type<i> throws.opt
%type<i> to_module_names.opt
%type<i> top_level_class_or_interface_declaration
%type<i> top_level_class_or_interface_declaration.multiopt
%type<i> try_statement
%type<i> try_with_resources_statement
%type<i> type
%type<i> type_IDENTIFIER
%type<i> type_argument
%type<i> type_argument.multiopt
%type<i> type_argument_list
%type<i> type_arguments
%type<i> type_arguments.opt
%type<i> type_arguments_or_diamond
%type<i> type_arguments_or_diamond.opt
%type<i> type_bound
%type<i> type_bound.opt
%type<i> type_import_on_demand_declaration
%type<i> type_name
%type<i> type_parameter
%type<i> type_parameter_list
%type<i> type_parameter_modifier
%type<i> type_parameter_modifier.multiopt
%type<i> type_parameters
%type<i> type_parameters.opt
%type<i> type_pattern
%type<i> type_variable
%type<i> unann_array_type
%type<i> unann_class_or_interface_type
%type<i> unann_class_type
%type<i> unann_interface_type
%type<i> unann_primitive_type
%type<i> unann_reference_type
%type<i> unann_type
%type<i> unann_type_variable
%type<i> unary_expression
%type<i> unary_expression_not_plus_minus
%type<i> unqualified_class_instance_creation_expression
%type<i> unqualified_method_IDENTIFIER
%type<i> variable_access
%type<i> variable_arity_parameter
%type<i> variable_arity_record_component
%type<i> variable_declarator
%type<i> variable_declarator_id
%type<i> variable_declarator_list
%type<i> variable_initializer
%type<i> variable_initializer_list
%type<i> variable_initializer_list.opt
%type<i> variable_modifier
%type<i> variable_modifier.multiopt
%type<i> vt_class_type.multiopt
%type<i> while_statement
%type<i> while_statement_no_short_if
%type<i> wildcard
%type<i> wildcard_bounds
%type<i> wildcard_bounds.opt
%type<i> yield_statement
