Sort.make:
	beginfunc
	push ebp
	ebp = stackptr
	stackptr = ebp + 4
	ebp = *(ebp + 4)
	ret
	endfunc

BubbleSort.ctor:
	beginfunc
	push ebp
	ebp = stackptr
	stackptr -= 4
	*(ebp - 0) = *(ebp + 8)
	t1 = *(ebp - 0)
	t2 = (int) t1
	this.x = t2
	t3 = *(ebp - 0)
	t5 = (float) 1
	t4 = t3 +float t5
	t6 = (int) t4
	this.y = t6
	this.z = 0f
	stackptr = ebp + 8
	ebp = *(ebp + 4)
	ret
	endfunc

BubbleSort.result:
	beginfunc
	push ebp
	ebp = stackptr
	stackptr -= 4
	*(ebp - 0) = *(ebp + 8)
	stackptr -= 4
	*(ebp - 4) = *(ebp + 12)
	stackptr -= 4
	*(ebp - 8) = 15
	t1 = *(ebp - 0)
	t2 = *(ebp - 4)
	t3 = t1 >= t2
	t4 = *(ebp - 0)
	t5 = *(ebp - 4)
	t6 = t4 <= t5
	t7 = t3 == t6
	t8 = ! t7
	if t8 goto L1
	t9 = *(ebp - 0)
	t10 = *(ebp - 4)
	t11 = t9 >= t10
	t12 = ! t11
	if t12 goto L2
	t14 = *(ebp - 4)
	t15 = t14
	*(ebp - 8) = t15
	goto L3
	L2:
	t17 = *(ebp - 0)
	t17 = t17 +int 1
	*(ebp - 8) = t17
	L3:
	goto L6
	L1:
	t18 = *(ebp - 0)
	t19 = *(ebp - 4)
	t20 = t18 *int t19
	t21 = *(ebp - 0)
	t22 = *(ebp - 4)
	t23 = t21 /int t22
	t24 = t20 == t23
	t25 = ! t24
	if t25 goto L5
	stackptr -= 4
	*(ebp - 12) = 42
	t27 = *(ebp - 0)
	t28 = *(ebp - 12)
	t29 = *(ebp - 4)
	t30 = t28 *int t29
	t31 = t27 +int t30
	t32 = *(ebp - 4)
	t33 = t31 +int t32
	*(ebp - 8) = t33
	goto L6
	L5:
	t35 = *(ebp - 0)
	t36 = *(ebp - 4)
	t37 = *(ebp - 0)
	t38 = t36 *int t37
	t39 = t35 +int t38
	t40 = *(ebp - 4)
	t41 = t39 +int t40
	*(ebp - 8) = t41
	L6:
	t43 = *(ebp - 8)
	push t43
	call print 1
	stackptr -= 4
	*(ebp - 16) = 0
	L7:
	t44 = *(ebp - 16)
	t45 = t44 < 10
	t46 = ! t45
	if t46 goto L8
	stackptr -= 4
	*(ebp - 20) = 0
	L10:
	t49 = *(ebp - 20)
	t50 = t49 < 10
	t51 = ! t50
	if t51 goto L11
	t54 = *(ebp - 16)
	t55 = *(ebp - 20)
	t56 = t54 == t55
	t57 = ! t56
	if t57 goto L13
	goto L16
	L13:
	t58 = *(ebp - 16)
	t59 = t58 == 0
	t60 = ! t59
	if t60 goto L15
	goto L11
	L15:
	t62 = *(ebp - 16)
	t63 = *(ebp - 20)
	t64 = t62 +int t63
	*(ebp - 8) = t64
	L16:
	goto L10
	L11:
	goto L7
	L8:
	t65 = *(ebp - 8)
	*(ebp + 16) = t65
	stackptr = ebp + 12
	ebp = *(ebp + 4)
	ret

	endfunc

BubbleSort.main:
	beginfunc
	push ebp
	ebp = stackptr
	*(ebp - 0) = *(ebp + 4)
	stackptr -= 4
	*(ebp - 0) = 10
	stackptr -= 4
	stackptr -= 4
	stackptr -= 4
	stackptr -= 4
	t3 = *(ebp - 4)
	t4 = 27 +int t3
	*(ebp - 8) = t4
	this.x = 12
	stackptr -= 4
	*(ebp - 20) = "Hello World"
	stackptr -= 4
	*(ebp - 24) = [2]
	stackptr -= 4
	*(ebp - 32) = {1,2,3,4,5}
	stackptr -= 4
	*(ebp - 52) = [2][2]
	arr[1][1] = 13.6f
	stackptr -= 4
	*(ebp - 68) = 0
	L1:
	t7 = *(ebp - 68)
	t8 = t7 < 10
	t9 = ! t8
	if t9 goto L2
	stackptr -= 2
	t12 = *(ebp - 68)
	t13 = 'c' +int t12
	*(ebp - 72) = t13
	stackptr -= 2
	t14 = (char) 65
	t15 = *(ebp - 72)
	t16 = t14 +int t15
	*(ebp - 74) = t16
	stackptr -= 4
	*(ebp - 76) = {1,2,3,4,5,6}
	stackptr -= 4
	*(ebp - 100) = {{1,2,3},{4,5,6}}
	L4:
	t23 = *(ebp - 72)
	t24 = *(ebp - 74) +int t23
	*(ebp - 74) = t24
	t21 = *(ebp - 72) -int 2
	*(ebp - 72) = t21
	goto L4
	t26 = *(ebp - 0)
	t27 = 'f' +int t26
	*(ebp - 72) = t27
	goto L1
	L2:
	t28 = *(ebp - 0)
	t29 = t28 > 0
	t30 = ! t29
	if t30 goto L8
	t31 = *(ebp - 0)
	t32 = t31 == 0
	t33 = ! t32
	if t33 goto L9
	goto L8
	L9:
	t34 = *(ebp - 0)
	t35 = t34 == 1
	t36 = ! t35
	if t36 goto L11
	goto L2
	L11:
	stackptr -= 4
	t39 = *(ebp - 0)
	t40 = *(ebp - 8)
	t41 = t39 -int t40
	*(ebp - 124) = t41
	t47 = *(ebp - 124)
	t48 = *(ebp - 4) +int t47
	*(ebp - 4) = t48
	goto L2
	L8:
	stackptr -= 4
	*(ebp - 128) = 
	t53 = obj.vec
	obj.vec = obj.vec +obj.vec 1
	t55 = *(ebp - 0)
	t56 = *(ebp - 8)
	stackptr -= 4
	push t55
	push t56
	call result 2
	t57 = *(stackptr + 4)
	stackptr += 4
	t58 = t53 + t57
	*(ebp - 0) = t58
	*(ebp + 8) = 0
	stackptr = ebp + 4
	ebp = *(ebp + 4)
	ret

	endfunc

