Test1.sum:
	beginfunc
	push %rbp
	%rbp = %rsp
	%rsp = %rsp - 12
	*(%rbp - 4) = %rsi
	*(%rbp - 8) = %rdi
	*(%rbp - 12) = 15
	t2 = *(%rbp - 4)
	t3 = *(%rbp - 8)
	t4 = t2 +int t3
	*(%rbp - 12) = t4
	t5 = *(%rbp - 12)
	endfunc

Test1.main:
	beginfunc
	push %rbp
	%rbp = %rsp
	%rsp = %rsp - 16
	*(%rbp - 4) = 1
	*(%rbp - 8) = 2
	*(%rbp - 12) = 3
	t10 = *(%rbp - 4)
	t11 = t10 *int 10
	t12 = 15 +int t11
	t13 = *(%rbp - 12)
	t14 = t12 +int t13
	*(%rbp - 8) = t14
	t15 = *(%rbp - 4)
	t16 = *(%rbp - 8)
	t17 = t15 > t16
	t18 = ! t17
	if t18 goto L1
	t20 = *(%rbp - 4)
	t23 = t20 +int 
	*(%rbp - 8) = t23
	goto L2
	L1:
	t25 = *(%rbp - 4)
	t26 = *(%rbp - 8)
	t27 = t25 +int t26
	*(%rbp - 8) = t27
	L2:
	t29 = *(%rbp - 4)
	t31 = *(%rbp - 8)
	t32 = *(%rbp - 12)
	%rsp = %rsp - 4
	%rdi = t31
	%rsi = t32
	call sum 2
	t33 = %eax
	t34 = t29 +int t33
	*(%rbp - 4) = t34
	*(%rbp - 16) = 0
	L3:
	t35 = *(%rbp - 16)
	t36 = t35 < 15
	t37 = ! t36
	if t37 goto L4
	t41 = *(%rbp - 16) +int 1
	*(%rbp - 16) = t41
	t43 = *(%rbp - 4)
	t44 = *(%rbp - 8)
	t45 = t43 +int t44
	*(%rbp - 4) = t45
	goto L3
	L4:
	endfunc

