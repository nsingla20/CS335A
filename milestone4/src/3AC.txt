Test1.sum:
	beginfunc
	push %rbp
	%rbp = %rsp
	%rsp = %rsp - 12
	*(%rbp - 4) = %rsi
	*(%rbp - 8) = %rdi
	*(%rbp - 12) = 15
	t2 = *(%rbp - 4)
	t3 = *(%rbp - 8)
	t4 = t2 +int t3
	*(%rbp - 12) = t4
	t5 = *(%rbp - 12)
	%eax = t5
	ret
	endfunc

Test1.main:
	beginfunc
	push %rbp
	%rbp = %rsp
	%rsp = %rsp - 16
	*(%rbp - 4) = 1
	*(%rbp - 8) = 2
	*(%rbp - 12) = 3
	t10 = *(%rbp - 4)
	t11 = t10 *int 10
	t12 = 15 +int t11
	t13 = *(%rbp - 12)
	t14 = t12 +int t13
	*(%rbp - 8) = t14
	t15 = *(%rbp - 4)
	t16 = *(%rbp - 8)
	t17 = t15 > t16
	t18 = ! t17
	if t18 goto L1
	t20 = *(%rbp - 4)
	t21 = *(%rbp - 12)
	t22 = t21 -int 2
	t23 = t20 +int t22
	*(%rbp - 8) = t23
	goto L4
	L1:
	t24 = *(%rbp - 4)
	t25 = *(%rbp - 8)
	t26 = t24 == t25
	t27 = ! t26
	if t27 goto L3
	t29 = *(%rbp - 4)
	t30 = *(%rbp - 8)
	t31 = t29 *int t30
	*(%rbp - 8) = t31
	goto L4
	L3:
	t33 = *(%rbp - 4)
	t34 = *(%rbp - 8)
	t35 = t33 +int t34
	*(%rbp - 8) = t35
	L4:
	t37 = *(%rbp - 4)
	t39 = *(%rbp - 8)
	t40 = *(%rbp - 12)
	%rsp = %rsp - 4
	%rdi = t39
	%rsi = t40
	call sum 2
	t41 = %eax
	t42 = t37 +int t41
	*(%rbp - 4) = t42
	*(%rbp - 16) = 0
	L5:
	t43 = *(%rbp - 16)
	t44 = t43 < 15
	t45 = ! t44
	if t45 goto L6
	t49 = *(%rbp - 16) +int 1
	*(%rbp - 16) = t49
	t51 = *(%rbp - 4)
	t52 = *(%rbp - 8)
	t53 = t51 +int t52
	*(%rbp - 4) = t53
	goto L5
	L6:
	t55 = *(%rbp - 8)
	%rdi = t55
	call print 1
	%eax = 0
	ret
	endfunc

